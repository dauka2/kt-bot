import types
from datetime import timedelta
import pandas as pd
import requests
from telebot import *
import io
import re
from telebot.apihelper import download_file

import appealsClass
import common_file
import db_connect
import lteClass
import performerClass
import maraphonersClass
from appealsClass import set_status, set_date_status, get_appeal_by_id, get_image_data, get_status, set_evaluation, \
    get_appeal_text_all, get_comment, set_comment, set_image_data, add_appeal_gmail, add_appeal, get_appeal_text, \
    set_appeal_text, set_appeal_id
from commands_historyClass import cm_sv_db
from common_file import (extract_text, extract_number, remove_milliseconds,
                         extract_numbers_from_status_change_decided, generate_buttons, send_gmails, useful_links,
                         check_portal_guide,
                         send_photo_)
from file import check_id, admin_appeal_callback, appeal_inline_markup, admin_appeal, get_user_info
from lteClass import add_internal_sale, set_subscriber_type, set_category_i_s, set_performer_id_i_s, set_is_notified, \
    set_full_name, set_iin, set_phone_num_subscriber, set_subscriber_address, set_product_name, set_action, \
    set_delivery, set_simcard, set_modem, delete_internal_sale
from performerClass import get_performer_by_category, get_regions, list_categories, get_categories_by_parentcategory, \
    get_performer_id_by_category, get_subsubcategories_by_subcategory, \
    get_performer_by_category_and_subcategory, get_performer_by_subsubcategory, get_performers_
from sapa import get_photo_by_id
from userClass import get_branch, get_firstname, get_user, generate_and_save_code, get_email, \
    set_email, verification_timers, get_saved_verification_code, get_lastname, get_phone_number, \
    get_user_verification_status, check_if_registered, delete_participation, check_registration_message_in_history, \
    check_registration_message_in_history_decl, \
    get_user_verification_status_reg, \
    delete_registration_message_in_history, get_verif_decl_status
from user_infoClass import set_appeal_field, get_category_users_info, set_category, get_appeal_field, clear_appeals, \
    set_bool, set_subsubcategory_users_info, get_subsubcategory_users_info
import hse_competition

faq_field = ["–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã", "–î–µ–º–µ—É", "–í–æ–ø—Ä–æ—Å—ã –∫ HR", "–í–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞–π–º–∞–º",
             "–í–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞–∫—É–ø–æ—á–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏", "–í–æ–ø—Ä–æ—Å—ã –ø–æ –ø–æ—Ä—Ç–∞–ª—É –∑–∞–∫—É–ø–æ–∫"]
drb_regions = ["–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∏–π —Ä–µ–≥–∏–æ–Ω, –≥.–ê–ª–º–∞—Ç—ã", "–ó–∞–ø–∞–¥–Ω—ã–π, –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ä–µ–≥–∏–æ–Ω", "–°–µ–≤–µ—Ä–Ω—ã–π, –Æ–∂–Ω—ã–π, –í–æ—Å—Ç–æ—á–Ω—ã–π —Ä–µ–≥–∏–æ–Ω—ã"]
ods_regions = ["–î–≠–°–î '–ê–ª–º–∞—Ç—ã—Ç–µ–ª–µ–∫–æ–º'", "–Æ–∂–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∏–π –î–≠–°–î", "–ö—ã–∑—ã–ª–æ—Ä–¥–∏–Ω—Å–∫–∏–π –î–≠–°–î", "–ö–æ—Å—Ç–∞–Ω–∞–π—Å–∫–∏–π –î–≠–°–î",
               "–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∏–π –î–≠–°–î", "–ê—Ç—ã—Ä–∞—É—Å–∫–∏–π –î–≠–°–î", "–ê–∫—Ç—é–±–∏–Ω—Å–∫–∏–π –î–≠–°–î",
               "–î–≠–°–î '–ê—Å—Ç–∞–Ω–∞'", "–¢–£–°–ú-1", "–¢–£–°–ú-6", "–¢–£–°–ú-8", "–¢–£–°–ú-10", "–¢–£–°–ú-11", "–¢–£–°–ú-13", "–¢–£–°–ú-14", "–ì–ê"]
biot_field = ["üë∑–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –ë–∏–û–¢", "–û–ø–∞—Å–Ω—ã–π —Ñ–∞–∫—Ç–æ—Ä/—É—Å–ª–æ–≤–∏–µ", "–ü–æ–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç",
              "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è/–ò–¥–µ–∏"]
kb_field = ["üóÉÔ∏è–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π", "–ë–∞–∑–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π", "–ì–ª–æ—Å—Å–∞—Ä–∏–π", "–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏", "–°–µ—Ä–≤–∏—Å –∏ –ü—Ä–æ–¥–∞–∂–∏",
            "–†–µ–≥–ª–∞–º–µ–Ω—Ç–∏—Ä—É—é—â–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã"]
kb_field_all = ["–õ–æ–≥–æ—Ç–∏–ø—ã –∏ –ë—Ä–µ–Ω–¥–±—É–∫", "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç telecom.kz", "–ú–æ–¥–µ–º—ã | –ù–∞—Å—Ç—Ä–æ–π–∫–∞", "Lotus | –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏",
                "CheckPoint VPN | –£–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞", "–ö–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∞ | –ü–æ—Ä—è–¥–æ–∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è",
                "–ö–∞–∫ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è", "–õ–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å", "–ò–∑ –ø–æ—Ä—Ç–∞–ª–∞ –ø–µ—Ä–µ–π—Ç–∏ –≤ –°–°–ü",
                "–î–∞–Ω–Ω—ã–µ –ø–æ —Å–µ—Ä–≤–µ—Ä–∞–º —Ñ–∏–ª–∏–∞–ª–æ–≤", "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ Lotus", "–£—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π —Ñ–∞–π–ª Lotus",
                "–ê–û '–ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º'", '–ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏', '–ö–∞–∫ –æ–ø–ª–∞—Ç–∏—Ç—å —É—Å–ª—É–≥—É',
                '–ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ –¥–µ—Ç–∞–ª—è—Ö –æ–ø–ª–∞—Ç—ã', "–†–∞–∑–¥–µ–ª '–ú–æ–∏ –£—Å–ª—É–≥–∏'",
                "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç", "ADSL –º–æ–¥–µ–º", "IDTV –ø—Ä–∏—Å—Ç–∞–≤–∫–∏",
                "ONT –º–æ–¥–µ–º—ã", "Router 4G and Router Ethernet", "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ CheckPoint",
                "–£—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π —Ñ–∞–π–ª CheckPoint", "–ü–æ—Ä—Ç–∞–ª –∑–∞–∫—É–ø–æ–∫ | –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏", '–î–ª—è –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä–æ–≤ | –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏',
                '–î–ª—è —Å–µ–∫—Ä–µ—Ç–∞—Ä–µ–π | –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏', '–£–ª—É—á—à–µ–Ω–∏–µ Wi-Fi —Å–∏–≥–Ω–∞–ª–∞ –¥–ª—è –∞–±–æ–Ω–µ–Ω—Ç–æ–≤',
                '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞ –∏ Mesh —Å–∏—Å—Ç–µ–º—ã', '–°–µ—Ç—å –∏ –¢–í+', '–°–µ—Ç–µ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ TCP/IP',
                '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¢–í+ –ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º', '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–ª–µ–≤–∏–∑–æ—Ä–∞ –≤ Wi-fi', '–ò–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–±–æ—Ä—ã',
                '–ò–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–±–æ—Ä—ã –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', '–ê–Ω–Ω–æ—Ç–∞—Ü–∏—è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–º –ø—Ä–∏–±–æ—Ä–æ–º',
                '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ –î–û']
instr_field = ["–ë—Ä–µ–Ω–¥–±—É–∫ –∏ –ª–æ–≥–æ—Ç–∏–ø—ã", "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç telecom.kz", "–ú–æ–¥–µ–º—ã | –ù–∞—Å—Ç—Ä–æ–π–∫–∞", "Lotus & CheckPoint"]
adapt_field = ["üòäWelcome –∫—É—Ä—Å | –ê–¥–∞–ø—Ç–∞—Ü–∏—è", "–î–¢–ö", "–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–û—Ä–≥ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞", "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ", "–ò—Å—Ç–æ—Ä–∏—è",
               "–î–¢–ö –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏", "–ó–∞—è–≤–∫–∏ –≤ –û–¶–û HR", "–ó–∞—è–≤–∫–∏ –≤–æ–∑–ª–æ–∂–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π", "–ó–∞—è–≤–∫–∏ –Ω–∞ –æ—Ç–ø—É—Å–∫",
               "–ö–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∏", "–ü–µ—Ä–µ–≤–æ–¥—ã", "–ü–æ—Ä—è–¥–æ–∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∏", "–†–∞—Å—Å—Ç–æ—Ä–∂–µ–Ω–∏–µ –¢–î"]
maraphon_field = ["üöÄ–¶–∏—Ñ—Ä–æ–≤–æ–π –º–∞—Ä–∞—Ñ–æ–Ω | –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"]
fin_gram_field = ['üí∏–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å"']
modems_field = ['üì∂SAPA+']
hse_competition_field = ["üë∑üèª‚Äç‚ôÇÔ∏è–ö–æ–Ω–∫—É—Ä—Å—ã –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞"]
hse_com_field = ["–ú–æ–π –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å/–ú–µ–Ω—ñ“£ “õ–∞—É—ñ–ø—Å—ñ–∑ –∂“±–º—ã—Å –∫“Ø–Ω—ñ–º", "–õ—É—á—à–∏–π —Å–æ–≤–µ—Ç –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏/–ï“£ –∂–∞“õ—Å—ã “õ–∞—É—ñ–ø—Å—ñ–∑–¥—ñ–∫ –∫–µ“£–µ—Å—ñ", "–ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –æ–±–æ–∏—Ö –∫–æ–Ω–∫—É—Ä—Å–∞—Ö/–ï–∫—ñ –±–∞–π“õ–∞—É“ì–∞ “õ–∞—Ç—ã—Å—É"]
verification_field = ["üìÑ–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–¥–∞—á–∏ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏"]
portal_bts = ["–ß—Ç–æ —Ç–∞–∫–æ–µ –ø–æ—Ä—Ç–∞–ª '–ë—ñ—Ä–ª—ñ–∫'?", "–ö–∞–∫ –≤–æ–π—Ç–∏ –Ω–∞ –ø–æ—Ä—Ç–∞–ª?"
    # , "–û—Å—Ç–∞–≤–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ –Ω–∞ –ø–æ—Ä—Ç–∞–ª"
              ]
sapa_admin = ['1066191569', '353845928', '947621727', '468270698', '531622371', '1621516433', '477945972', '577247261', '735766161', '476878708', '597334185', '559872057', '510122980']
# "–ë—ñ—Ä–ª—ñ–∫ –ì–∏–¥"
portal_ = ["–ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è", "–ü–ö –∏–ª–∏ –Ω–æ—É—Ç–±—É–∫", "–ö–∞–∫ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è", "–õ–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å", "–ò–∑ –ø–æ—Ä—Ç–∞–ª–∞ –ø–µ—Ä–µ–π—Ç–∏ –≤ –°–°–ü",
           "iOS", "Android", "–ï—Å—Ç—å checkpoint", "–ù–µ—Ç checkpoint"]
portal_guide = ["–ö—É–¥–∞ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ - –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è?",
                "–ì–¥–µ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏–µ–π –∫–æ–º–ø–∞–Ω–∏–∏?",
                "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ—Å—Ç–≤–æ?", "–ö–∞–∫ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ø—É—Å–∫ –≤ —ç–∫–æ—Å–∏—Å—Ç–µ–º–µ?",
                "–ö–∞–∫ –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å –∫–æ–ª–ª–µ–≥—É?", "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å –≤ —ç–∫–æ—Å–∏—Å—Ç–µ–º–µ?",
                "–ö–∞–∫ –∫—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä —Å–æ —Å–∫–∏–¥–∫–æ–π –≤ –ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º –º–∞–≥–∞–∑–∏–Ω–µ?", "–ö–∞–∫ –∫—É–ø–∏—Ç—å –º–µ—Ä—á –ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º?",
                "–ì–¥–µ —É–≤–∏–¥–µ—Ç—å —Å–∫–∏–¥–∫–∏ –∏ –∞–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –ö–æ–º–ø–∞–Ω–∏–∏?"]
lte_ = ['üõú –ê–∫—Ü–∏—è "–ü–∏–ª–æ—Ç LTE"', "–û–± –∞–∫—Ü–∏–∏", "–ê –∫–∞–∫ –ø—Ä–æ–¥–∞—Ç—å?", "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", "–ú–æ–∏ –ø—Ä–æ–¥–∞–∂–∏"]
pp = ['ALEM PLUS (1 –≥–æ–¥) c Bereke 2', 'ALEM PLUS (1 –≥–æ–¥) c Bereke 1', 'ALEM PLUS (–±–µ–∑ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞) c Bereke 1',
      'ALEM PLUS (–±–µ–∑ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞) c Bereke 2', 'ALEM TV (–±–µ–∑ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞)', 'ALEM TV (1 –≥–æ–¥)',
      'ALEM MOBILE (–±–µ–∑ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞) c Bereke 1', 'ALEM MOBILE (–±–µ–∑ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞) c Bereke 2',
      'ALEM MOBILE (1 –≥–æ–¥) c Bereke 1', 'ALEM MOBILE (1 –≥–æ–¥) c Bereke 2', '–¢–ü –ê–ª–µ–º']
faq_1 = {
    'Ha –∫–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ ‚Äú–î–µ–º–µ—É‚Äù –≤ AO ‚Äú–ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º‚Äù?':
        '–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ü—Ä–æ–≥—Ä–∞–º–º—ã ¬´–î–µ–º–µ—É¬ª AO ¬´–ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º¬ª:  (–¥–∞–ª–µ–µ - –ü—Ä–æ–≥—Ä–∞–º–º–∞) –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞ '
        '—Ä–∞–±–æ—Ç–Ω–∏–∫–∞–º –ø–æ —Å—Ç–∞—Ç—É—Å—É: \
  \n1) –º–Ω–æ–≥–æ–¥–µ—Ç–Ω–∞—è —Å–µ–º—å—è - —Å–µ–º—å—è, –∏–º–µ—é—â–∞—è –≤ —Å–≤–æ–µ–º —Å–æ—Å—Ç–∞–≤–µ —á–µ—Ç—ã—Ä–µ—Ö –∏ –±–æ–ª–µ–µ —Å–æ–≤–º–µ—Å—Ç–Ω–æ –ø—Ä–æ–∂–∏–≤–∞—é—â–∏—Ö –Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏—Ö '
        '–¥–µ—Ç–µ–π, –≤ —Ç–æ–º —á–∏—Å–ª–µ –¥–µ—Ç–µ–π, –æ–±—É—á–∞—é—â–∏—Ö—Å—è –ø–æ –æ—á–Ω–æ–π —Ñ–æ—Ä–º–µ –æ–±—É—á–µ–Ω–∏—è –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ö —Å—Ä–µ–¥–Ω–µ–≥–æ, \
  —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ, –ø–æ—Å–ª–µ—Å—Ä–µ–¥–Ω–µ–≥–æ, –≤—ã—Å—à–µ–≥–æ –∏ (–∏–ª–∏) –ø–æ—Å–ª–µ–≤—É–∑–æ–≤—Å–∫–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏–º–∏ '
        '—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–∏—è –¥–æ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è (–Ω–æ –Ω–µ –±–æ–ª–µ–µ —á–µ–º –¥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è \
  –¥–≤–∞–¥—Ü–∞—Ç–∏—Ç—Ä–µ—Ö–ª–µ—Ç–Ω–µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞); '
        '\n2) —Å–µ–º—å—è c –¥–µ—Ç—å–º–∏-–∏–Ω–≤–∞–ª–∏–¥–∞–º–∏ - —Å–µ–º—å—è, –∏–º–µ—é—â–∞—è –≤ —Å–≤–æ–µ–º —Å–æ—Å—Ç–∞–≤–µ —Ä–µ–±–µ–Ω–∫–∞ (–¥–µ—Ç–µ–π) –¥–æ –≤–æ—Å–µ–º–Ω–∞–¥—Ü–∞—Ç–∏ –ª–µ—Ç, '
        '–∏–º–µ—é—â–µ–≥–æ(-–∏—Ö) –Ω–∞—Ä—É—à–µ–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è co —Å—Ç–æ–π–∫–∏–º —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º —Ñ—É–Ω–∫—Ü–∏–π –æ—Ä–≥–∞–Ω–∏–∑–º–∞,\
  –æ–±—É—Å–ª–æ–≤–ª–µ–Ω–Ω–æ–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è–º–∏, —É–≤–µ—á—å—è–º–∏ (—Ä–∞–Ω–µ–Ω–∏—è–º–∏, —Ç—Ä–∞–≤–º–∞–º–∏, –∫–æ–Ω—Ç—É–∑–∏—è–º–∏), –∏—Ö –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è–º–∏, –¥–µ—Ñ–µ–∫—Ç–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ '
        '–ø—Ä–∏–≤–æ–¥—è—Ç –∫ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—é –∂–∏–∑–Ω–µ–¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ ero (–∏—Ö) —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –∑–∞—â–∏—Ç—ã; \
  \n3) —Å–µ–º—å—è, —É—Å—ã–Ω–æ–≤–∏–≤—à–∞—è/—É–¥–æ—á–µ—Ä–∏–≤—à–∞—è –±–æ–ª–µ–µ 2-x –¥–µ—Ç–µ–π - —Å–µ–º—å—è, –∏–º–µ—é—â–∞—è –≤ —Å–≤–æ–µ–º —Å–æ—Å—Ç–∞–≤–µ –±–æ–ª–µ–µ 2-x –Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏—Ö '
        '—É—Å—ã–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö/—É–¥–æ—á–µ—Ä–µ–Ω–Ω—ã—Ö –¥–µ—Ç–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ—Å—Ç–æ—è—Ç –Ω–∞ –¥–∏—Å–ø–∞–Ω—Å–µ—Ä–Ω–æ–º —É—á–µ—Ç–µ –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é –∑–¥–æ—Ä–æ–≤—å—è, –∏ '
        '–µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∫–æ—Ä–º–∏–ª—å—Ü–∞. \
  \n4) –†–∞–±–æ—Ç–Ω–∏–∫–∞–º –≥—Ä–µ–π–¥–∞ A8-B4 —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ –æ–ø–ª–∞—Ç–µ –≤—ã–ø—É—Å–∫–Ω–æ–≥–æ –∫—É—Ä—Å–∞ –æ–±—É—á–µ–Ω–∏—è (–±–µ–∑ —É—á–µ—Ç–∞ '
        '—Ä–∞—Å—Ö–æ–¥–æ–≤ –Ω–∞ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–µ –∏ –ø–∏—Ç–∞–Ω–∏–µ) –∏—Ö –¥–µ—Ç–µ–π –≤ —Å—Ä–µ–¥–Ω–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º —É—á–µ–±–Ω–æ–º –∑–∞–≤–µ–¥–µ–Ω–∏–∏ (–¥–∞–ª–µ–µ - CYZ)/–≤—ã—Å—à–µ–º '
        '—É—á–µ–±–Ω–æ–º –∑–∞–≤–µ–¥–µ–Ω–∏–∏ (–¥–∞–ª–µ–µ - BYZ). \
  \nBce –≤–∏–¥—ã —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —Ä–∞–±–æ—Ç–Ω–∏–∫–∞–º –û–±—â–µ—Å—Ç–≤–∞, –∏–º–µ—é—â–∏–º –Ω–∞ –º–æ–º–µ–Ω—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π '
        '–ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Å—Ç–∞–∂ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã –≤ –û–±—â–µ—Å—Ç–≤–µ –Ω–µ –º–µ–Ω–µ–µ 3-x –ª–µ—Ç.\
  \n*–û–±—Ä–∞—â–µ–Ω–∏—è —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü ob –æ–∫–∞–∑–∞–Ω–∏–∏ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏/–ø–æ–º–æ—â–∏, –Ω–µ —Å–æ—Å—Ç–æ—è—â–∏—Ö –≤ —Ç—Ä—É–¥–æ–≤—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö c AO '
        '¬´–ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º¬ª, –∫ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—é –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è.',
    '–í–∏–¥—ã —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤': '1) –í–æ–∑–º–µ—â–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö c –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ–º –ø—É—Ç–µ–≤–æ–∫ –≤ –¥–µ—Ç—Å–∫–∏–µ '
                                                '–æ–∑–¥–æ—Ä–æ–≤–∏—Ç–µ–ª—å–Ω—ã–µ –ª–∞–≥–µ—Ä—è; \
  \n2) –í–æ–∑–º–µ—â–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö c –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ–º –ø—É—Ç–µ–≤–æ–∫ –≤ –¥–µ—Ç—Å–∫–∏–µ '
                                                '–æ–∑–¥–æ—Ä–æ–≤–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∞–Ω–∞—Ç–æ—Ä–∏–∏ (–¥–ª—è –¥–µ—Ç–µ–π-–∏–Ω–≤–∞–ª–∏–¥–æ–≤); \
  \n3) –ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å –Ω–∞ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –¥–µ—Ç–µ–π; \
  \n4) –ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å –Ω–∞ –ø–∏—Ç–∞–Ω–∏–µ —É—á–∞—â–∏—Ö—Å—è —à–∫–æ–ª; \n5) –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å –∫ –Ω–∞—á–∞–ª—É —É—á–µ–±–Ω–æ–≥–æ –≥–æ–¥–∞; \
  \n6) –í–æ–∑–º–µ—â–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –∑–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏—é/–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–∏ —Ä–µ–±–µ–Ω–∫–∞ '
                                                '(–¥–ª—è –¥–µ—Ç–µ–π-–∏–Ω–≤–∞–ª–∏–¥–æ–≤); \
  \n7) –í–æ–∑–º–µ—â–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –∑–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã (–¥–ª—è –¥–µ—Ç–µ–π-–∏–Ω–≤–∞–ª–∏–¥–æ–≤); \
  \n8) –í–æ–∑–º–µ—â–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –∑–∞ –ø–æ—Å–µ—â–µ–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–æ—Ä—Ä–µ–∫—Ü–∏–æ–Ω–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π (–¥–ª—è –¥–µ—Ç–µ–π-–∏–Ω–≤–∞–ª–∏–¥–æ–≤); \
  \n9) –ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å –≤—ã–ø—É—Å–∫–Ω–∏–∫–∞–º —à–∫–æ–ª, –Ω–µ –¥–æ—Å—Ç–∏–≥—à–∏–º –Ω–∞ –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è —à–∫–æ–ª—ã —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–∏—è –∏ –æ–∫–æ–Ω—á–∏–≤—à–∏–º —É—á–µ–±—É '
                                                '–Ω–∞ –æ—Ç–ª–∏—á–Ω–æ; \
  \n10) –í–æ–∑–º–µ—â–µ–Ω–∏–µ (—Ä–∞–±–æ—Ç–Ω–∏–∫–∞–º –≥—Ä–µ–π–¥–∞ A8-B4) —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ –æ–ø–ª–∞—Ç–µ –≤—ã–ø—É—Å–∫–Ω–æ–≥–æ –∫—É—Ä—Å–∞ –æ–±—É—á–µ–Ω–∏—è (–±–µ–∑ —É—á–µ—Ç–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤ –Ω–∞ '
                                                '–ø—Ä–æ–∂–∏–≤–∞–Ω–∏–µ –∏ –ø–∏—Ç–∞–Ω–∏–µ) –∏—Ö –¥–µ—Ç–µ–π –≤ —Å—Ä–µ–¥–Ω–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º —É—á–µ–±–Ω–æ–º '
                                                '–∑–∞–≤–µ–¥–µ–Ω–∏–∏ (–¥–∞–ª–µ–µ - CYZ)/–≤—ã—Å—à–µ–º —É—á–µ–±–Ω–æ–º –∑–∞–≤–µ–¥–µ–Ω–∏–∏ '
                                                '(–¥–∞–ª–µ–µ - BYZ).',
    '–ü—Ä–æ—Ü–µ—Å—Å –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–ª–µ–Ω–∏—è –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—É—é –∫–æ–º–∏—Å—Å–∏—é':
        '–û—Å–Ω–æ–≤–∞–Ω–∏–µ–º –¥–ª—è —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞ –æ–± –æ–∫–∞–∑–∞–Ω–∏–∏ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —è–≤–ª—è–µ—Ç—Å—è –∑–∞—è–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ \n'
        '–¶–ê/—Ñ–∏–ª–∏–∞–ª–∞, –ø–æ–¥–∞–Ω–Ω–æ–µ –≤ –°–æ—Ü–∏–∞–ª—å–Ω—É—é –∫–æ–º–∏—Å—Å–∏—é –¶–ê/—Ñ–∏–ª–∏–∞–ª–∞ —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.',
    '–ì–¥–µ –æ—Ñ–æ—Ä–º–ª—è—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏–µ?': '–ó–∞—è–≤–ª–µ–Ω–∏–µ –æ—Ñ–æ—Ä–º–ª—è–µ—Ç–µ –≤ —Å–≤–æ–µ–π —Ä–∞–±–æ—á–µ–π –±–∞–∑–µ(–ë–†–î). –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –±–∞–∑ –Ω–µ—Ç.',
    '–ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏': '–ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å –°–æ—Ü–∏–∞–ª—å–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏ –≤ —Ñ–∏–ª–∏–∞–ª–∞—Ö - –ì–µ–Ω–µ—Ä–∞–ª—å–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä —Ñ–∏–ª–∏–∞–ª–∞. '
                                        '–í –¶–ê ‚Äì –ì–ª–∞–≤–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä –ø–æ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
}
faq_2 = {
    '–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É c –º–µ—Å—Ç–∞ —Ä–∞–±–æ—Ç—ã?':
        '–ó–∞—è–≤–∫—É –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–øpa–≤–∫–∏ c –º–µ—Å—Ç–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –≤ –ë–∞–∑–µ ¬´–ó–∞—è–≤–∫–∏ –û–¶–û HR¬ª. '
        '\n–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π ‚Äì –≤—ã–±—Ä–∞—Ç—å –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –í–∞—à–µ–≥–æ —Ñ–∏–ª–∏–∞–ª–∞ ‚Äì –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–¥–∞—á—É —Å–ø—Ä–∞–≤–∫–∏ —Å –º–µ—Å—Ç–∞ —Ä–∞–±–æ—Ç—ã ‚Äì –∑–∞–ø–æ–ª–Ω–∏—Ç—å '
        '–§–ò–û —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –≤–∏–¥ —Å–ø—Ä–∞–≤–∫–∏ –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ (—è–∑—ã–∫, —Å—Ç–∞–∂, –¥–æ–ª–∂–Ω–æ—Å—Ç–Ω–æ–π –æ–∫–ª–∞–¥, —Å—Ä–µ–¥–Ω—è—è –∑–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞) '
        '‚Äì —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞—è–≤–∫—É ‚Äì –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –û–¶–û –í –ó–∞—è–≤–∫–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±—É–¥–µ—Ç —É–∫–∞–∑–∞–Ω –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –í–∞—à–µ–π –∑–∞—è–≤–∫–∏.',
    '–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å Lotus –∏ –¥–æ—Å—Ç—É–ø –∫ –ò–° –∏ –ë–†–î?':
        '–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ Lotus Notes –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –í–∞—à–µ–º—É –∫—É—Ä–∏—Ä—É—é—â–µ–º—É —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—é'
        '/–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫—É/–¥–µ–ª–æ–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—é —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–≥–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –≤ –ë–∞–∑–µ –ï–°–£–î (–ï–¥–∏–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ '
        '—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–æ–º). \n–ü–æ –º–µ—Ä–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ (—Ñ–∞–π–ª —Å –ª–æ–≥–∏–Ω–æ–º –∏ –ø–∞—Ä–æ–ª–µ–º), –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ñ–æ—Ä–º–∏—Ç—å '
        '–∑–∞—è–≤–∫—É –≤ Help Desk –ø–æ –Ω–æ–º–µ—Ä—É: +7 727 2587304 –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ Lotus Notes, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ '
        '—Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –≤ –ë–∞–∑–µ –ï–°–£–î —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –¥–ª—è –í–∞—Å –¥–æ—Å—Ç—É–ø–∞ –∫ –ò–° –∏ –ë–î.',
    '–ö—É–¥–∞ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –µ—Å–ª–∏ –∑–∞–±—ã–ª –ø–∞—Ä–æ–ª—å –∏–ª–∏ —Å–±–æ–π –≤ Lotus?':
        '–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É HelpDesk +77272587304 –ø–æ –≤–æ–∑–Ω–∏–∫—à–∏–º –≤–æ–ø—Ä–æ—Å–∞–º.',
    '–ö–∞–∫ –æ–ø–ª–∞—á–∏–≤–∞—é—Ç—Å—è –ª–∏—Å—Ç—ã –≤—Ä–µ–º–µ–Ω–Ω–æ–π –Ω–µ—Ç—Ä—É–¥–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏?':
        '–õ–∏—Å—Ç—ã –≤—Ä–µ–º–µ–Ω–Ω–æ–π –Ω–µ—Ç—Ä—É–¥–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ (—á–ª–µ–Ω–æ–≤ –ø—Ä–æ—Ñ—Å–æ—é–∑–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–≤—à–∏—Ö—Å—è –∫ '
        '–ö–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–æ–º—É –¥–æ–≥–æ–≤–æ—Ä—É) –æ–ø–ª–∞—á–∏–≤–∞—é—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–≥–æ —Å—Ç–∞–∂–∞ —Ä–∞–±–æ—Ç—ã –≤ –∫–æ–º–ø–∞–Ω–∏–∏: '
        '\n- –¥–æ 2-—Ö –ª–µ—Ç –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ - –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω; '
        '\n- –¥–æ 5 –ª–µ—Ç - 40% —Å—Ä–µ–¥–Ω–µ–π –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã; '
        '\n- —Å–≤—ã—à–µ 5 –ª–µ—Ç - 70% —Å—Ä–µ–¥–Ω–µ–π –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã –∑–∞ –¥–Ω–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –Ω–µ—Ç—Ä—É–¥–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏.',
    '–ö—Ç–æ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –±–æ–ª—å–Ω–∏—á–Ω—ã–π –ª–∏—Å—Ç?':
        '–ë–æ–ª—å–Ω–∏—á–Ω—ã–π –ª–∏—Å—Ç –∑–∞–ø–æ–ª–Ω—è–µ—Ç —Ç–∞–±–µ–ª—å—â–∏–∫/–¥–µ–ª–æ–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–≥–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è. '
        'B –±–æ–ª—å–Ω–∏—á–Ω–æ–º –ª–∏—Å—Ç–µ –æ—Ç—Ä–∞–∂–∞–µ—Ç–µ  –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª–∏–∞–ª–∞ "–î–∏–≤–∏–∑–∏–æ–Ω –ø–æ —Ä–æ–∑–Ω–∏—á–Ω–æ–º—É –±–∏–∑–Ω–µ—Å—É - —Ñ–∏–ª–∏–∞–ª AO "–ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º" '
        '–∏ —Å–≤–æ—é –¥–æ–ª–∂–Ω–æ—Å—Ç—å.',
    '–ö–æ–º—É —Å–¥–∞–≤–∞—Ç—å –ª–∏—Å—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ–π –Ω–µ—Ç—Ä—É–¥–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ (–±–æ–ª—å–Ω–∏—á–Ω—ã–π –ª–∏—Å—Ç)?':
        '–ü—Ä–µ–∂–¥–µ —á–µ–º —Å–¥–∞—Ç—å –ª–∏—Å—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ–π –Ω–µ—Ç—Ä—É–¥–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, –µ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∏ –ø–æ–¥–ø–∏—Å–∞—Ç—å  y —Å–≤–æ–µ–≥–æ '
        '–Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è. \n–í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –≤ –í–∞—à–µ–º –æ—Ñ–∏—Å–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–∞–±–æ—Ç–Ω–∏–∫ —Ñ—Ä–æ–Ω—Ç-–æ—Ñ–∏—Å–∞ –û–¶–û HR - '
        '–æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å –¥–≤—É—Ö —Å—Ç–æ—Ä–æ–Ω –ë–õ –∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫–æ–π –≤ –ë–∞–∑–µ –ó–∞—è–≤–∫–∏ –û–¶–û HR; –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ ‚Äì —Å–¥–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π'
        ' –æ—Ä–∏–≥–∏–Ω–∞–ª –ë–õ —Ä–∞–±–æ—Ç–Ω–∏–∫—É —Ñ—Ä–æ–Ω—Ç-–æ—Ñ–∏—Å–∞ –û–¶–û HR.',
    '–ö–∞–∫ –≤—Å—Ç—É–ø–∏—Ç—å –≤ –ü—Ä–æ—Ñ—Å–æ—é–∑?':
        '–î–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –õ–æ–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ—Å–æ—é–∑, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏–µ –æ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –≤ –ü—Ä–æ—Ñ—Å–æ—é–∑ –í–∞—à–µ–≥–æ —Ñ–∏–ª–∏–∞–ª–∞ '
        '(—à–∞–±–ª–æ–Ω –æ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –≤ –ü—Ä–æ—Ñ—Å–æ—é–∑ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —É —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ —Ñ—Ä–æ–Ω—Ç-–æ—Ñ–∏—Å–∞ –û–¶–û HR) –∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É –≤ –ë–∞–∑–µ –ó–∞—è–≤–∫–∏'
        ' –≤ –û–¶–û –ó–ü –æ–± —É–¥–µ—Ä–∂–∞–Ω–∏–∏ –ø—Ä–æ—Ñ—Å–æ—é–∑–Ω—ã—Ö –≤–∑–Ω–æ—Å–æ–≤. –ü—Ä–æ—Ü–µ–Ω—Ç —É–¥–µ—Ä–∂–∞–Ω–∏—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ‚Äì 1 %.',
    '–°—Ç—Ä–∞—Ö–æ–≤–∫–∞ –ø–æ –î–ú–° (–¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ)':
        '–°—Ç—Ä–∞—Ö–æ–≤–∫–∞ –ø–æ –î–ú–° (–¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ) –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è  —Ä–∞–±–æ—Ç–Ω–∏–∫–∞–º –∏–º–µ—é—â–∏—Ö —Å—Ç–∞–∂ —Ä–∞–±–æ—Ç—ã –≤ '
        '–û–±—â–µ—Å—Ç–≤–µ –±–æ–ª–µ–µ 3-x  –ª–µ—Ç, –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞—Ö–æ–≤–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è',
    '–ì–¥–µ –Ω–∞–π—Ç–∏ —Ç–µ–ª–µ—Ñ–æ–Ω –∫–æ–ª–ª–µ–≥?':
        '–¢–µ–ª–µ—Ñ–æ–Ω –∫–æ–ª–ª–µ–≥–∏ –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –±–∞–∑–µ "–¢–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –û–±—â–µ—Å—Ç–≤–∞" - –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –ø–æ –§–∞–º–∏–ª–∏–∏, –ø–æ–∏—Å–∫ '
        '—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é',
    '–û–±—Ö–æ–¥–Ω–æ–π –ª–∏—Å—Ç. –ö–æ–≥–¥–∞ ero –æ—Ñ–æ—Ä–º–ª—è—Ç—å?':
        '1) –ü—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞—è–≤–ª–µ–Ω–∏—è –Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –≤ —Ç—Ä–µ—Ç—å–µ–º –ª–∏—Å—Ç–µ –æ–±—Ö–æ–¥–Ω–æ–π –ª–∏—Å—Ç –∏ '
        '—É–∫–∞–∑–∞–Ω—ã –ø–æ–¥–ø–∏—Å–∞–Ω—Ç—ã.'
        '\n2) –ü—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ/–æ–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–µ–º –ø–æ—Ä—è–¥–∫–µ/ –≤ —Ñ–∏–ª–∏–∞–ª –æ–±—Ö–æ–¥–Ω–æ–π –ª–∏—Å—Ç –æ—Ñ–æ—Ä–º–ª—è–µ–º –≤ —Å–≤–æ–∏—Ö —Ä–∞–±–æ—á–∏—Ö –±–∞–∑–∞—Ö',
}
faq_procurement_portal = {
    '–ù–µ –º–æ–≥—É –≤–æ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç': '–í–æ–∑–º–æ–∂–Ω–æ –í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ã–π –∞–¥—Ä–µ—Å. –í–∞–º –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –≤ –∞–¥—Ä–µ—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å–ª–µ–¥—É—é—â–∏–π –∞–¥—Ä–µ—Å: '
                             'zakup.telecom.kz/app ',
    '–ö–∞–∫–∏–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –¥–ª—è –≤—Ö–æ–¥–∞?': '–õ–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å —Ç–∞–∫–∏–µ –∂–µ –∫–∞–∫ –Ω–∞ mail.telecom.kz, '
                                                    'CheckPoint –∏–ª–∏ –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ –í–∞—à –ü–ö',
    '–õ–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π, –Ω–æ –≤—Å–µ —Ä–∞–≤–Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏': '"–í–æ–∑–º–æ–∂–Ω–æ –í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ '
                                                                '–∑–∞–∫—É–ø–æ–∫. –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –í–∞–º –Ω—É–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç–∏—Ç—å—Å—è –∫ '
                                                                '–æ–¥–Ω–æ–º—É –∏–∑ —Å–ø–µ—Ü–∏–∞–ª–∏—Ç–æ–≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø–æ—Ä—Ç–∞–ª–∞ '
                                                                '–∑–∞–∫—É–ø–æ–∫. –î–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é '
                                                                'ktbot –∏ –æ—Å—Ç–∞–≤–∏—Ç—å –í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ —Ä–∞–∑–¥–µ–ª–µ '
                                                                '""–£ –º–µ–Ω—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å""."',
    '–ù–µ –º–æ–≥—É –∑–∞–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç —Ö–æ—Ç—è –≤–≤–æ–∂—É –∞–¥—Ä–µ—Å —Å–∞–π—Ç–∞ –≤–µ—Ä–Ω–æ': '–í–æ–∑–º–æ–∂–Ω–æ —É –≤–∞—Å –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º –∏–ª–∏ –Ω–µ –ø–æ–¥–∫–ª—é—á–∏–ª–∏ '
                                                          'CheckPoint(–µ—Å–ª–∏ –≤—Ö–æ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –Ω–æ—É—Ç–±—É–∫)'
}
faq_procurement_activities = {
    '–ß–µ–º —Ä–µ–≥—É–ª–∏—Ä—É—é—Ç—Å—è –∑–∞–∫—É–ø–∫–∏ –≤ –ê–û ¬´–ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º¬ª?':
        '–ü–æ—Ä—è–¥–æ–∫ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è –∑–∞–∫—É–ø–æ–∫ –∞–∫—Ü–∏–æ–Ω–µ—Ä–Ω—ã–º –æ–±—â–µ—Å—Ç–≤–æ–º ¬´–§–æ–Ω–¥ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –±–ª–∞–≥–æ—Å–æ—Å—Ç–æ—è–Ω–∏—è ¬´–°–∞–º—Ä—É–∫-“ö–∞–∑—ã–Ω–∞¬ª '
        '–∏ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–º–∏ –ª–∏—Ü–∞–º–∏, –ø—è—Ç—å–¥–µ—Å—è—Ç –∏ –±–æ–ª–µ–µ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –≥–æ–ª–æ—Å—É—é—â–∏—Ö –∞–∫—Ü–∏–π (–¥–æ–ª–µ–π —É—á–∞—Å—Ç–∏—è) –∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä—è–º–æ –∏–ª–∏ –∫–æ—Å–≤–µ–Ω–Ω–æ'
        ' –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç –ê–û ¬´–°–∞–º—Ä—É–∫-“ö–∞–∑—ã–Ω–∞¬ª –Ω–∞ –ø—Ä–∞–≤–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏–ª–∏ –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –†–µ–≥–ª–∞–º–µ–Ω—Ç '
        '–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –î–∏—Ä–µ–∫—Ü–∏–∏ ¬´–¢–µ–ª–µ–∫–æ–º –ö–æ–º–ø–ª–µ–∫—Ç¬ª —Å —Ñ–∏–ª–∏–∞–ª–∞–º–∏ –ê–û ¬´–ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º¬ª.',
    '–ö–∞–∫ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —Å–ø–æ—Å–æ–± –∑–∞–∫—É–ø–∞ –∏ –∫–∞–∫–∏–µ –≤–∏–¥—ã –∑–∞–∫—É–ø–æ–∫?':
        """1) —Ç–µ–Ω–¥–µ—Ä: 
- –¥–≤—É—Ö—ç—Ç–∞–ø–Ω—ã–π 
- —Å —Ç–æ—Ä–≥–∞–º–∏ –Ω–∞ –ø–æ–Ω–∏–∂–µ–Ω–∏–µ (–Ω–∞ —É—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –ó–∞–∫–∞–∑—á–∏–∫–∞, –Ω–µ–ª—å–∑—è –ø–æ –°–ú–†, —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–µ, —Ç–µ—Ö.–Ω–∞–¥–∑–æ—Ä—É) 
- —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º —É—á–∞—Å—Ç–∏–µ–º (–ø–æ—Å–ª–µ 2 –Ω–µ—Å–æ—Å—Ç.—Ç–µ–Ω–¥–µ—Ä–æ–≤) 
2) –∑–∞–ø—Ä–æ—Å —Ü–µ–Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π ‚Äì –¥–æ 10 000 –ú–†–ü (–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –ø—Ä–∏ –∑–∞–∫—É–ø–∫–µ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ —Ä–µ–µ—Å—Ç—Ä—É –¥–æ–≤–µ—Ä–µ–Ω–Ω–æ–≥–æ –ü–û –∏ –ø—Ä–æ–¥—É–∫—Ü–∏–∏ —ç–ª.–ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —Ç–æ–≤–∞—Ä–æ–≤ ¬´—ç–∫–æ–Ω–æ–º–∏–∫–∏ –ø—Ä–æ—Å—Ç—ã—Ö –≤–µ—â–µ–π¬ª –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ —Å—É–º–º–µ –ø–æ–¥–ª–µ–∂–∏—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏—é —Å 1 —è–Ω–≤–∞—Ä—è 2024 –≥–æ–¥–∞);
3) —á–µ—Ä–µ–∑ —Ç–æ–≤–∞—Ä–Ω—ã–µ –±–∏—Ä–∂–∏; 
4) –∏–∑ –æ–¥–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å —Å—Ç. 59 –ü–æ—Ä—è–¥–∫–∞); 
5) –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ ‚Äì –¥–æ 8 –º–ª–Ω.—Ç–≥ –ø–æ 32 –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –ø–ª–æ—â–∞–¥–∫–µ skstore.kz.
6) –æ—Å–æ–±—ã–π –ø–æ—Ä—è–¥–æ–∫ (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å —Å—Ç. 73 –ü–æ—Ä—è–¥–∫–∞)""",
    '–ö–∞–∫–∏–µ –≤–∏–¥—ã –ø–ª–∞–Ω–∞ –∑–∞–∫—É–ø–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ –∫–æ–º–ø–∞–Ω–∏–∏?':
        '–ü–ª–∞–Ω –∑–∞–∫—É–ø–æ–∫ (–ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π, –≥–æ–¥–æ–≤–æ–π, –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π) - –¥–æ–∫—É–º–µ–Ω—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Å–≤–µ–¥–µ–Ω–∏—è –æ –∑–∞–∫—É–ø–∫–µ —Ç–æ–≤–∞—Ä–æ–≤, '
        '—Ä–∞–±–æ—Ç, —É—Å–ª—É–≥, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–ª—è —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏—è –Ω—É–∂–¥ –∑–∞–∫–∞–∑—á–∏–∫–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞, –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –ø–ª–∞–Ω–æ–º –∏ –≤ '
        '—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –≥—Ä–∞—Ñ–∏–∫–æ–º –ø–ª–∞–Ω–∞. ',
    '–ß—Ç–æ —Ç–∞–∫–æ–µ –¥–µ–º–ø–∏–Ω–≥ –∏ –∫–∞–∫ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –≤ –∑–∞–∫—É–ø–∫–∞—Ö?': """
–î–µ–º–ø–∏–Ω–≥ - –ø—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥ –ø–æ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ –∑–∞–Ω–∏–∂–µ–Ω–Ω—ã–º —Ü–µ–Ω–∞–º, –Ω–∏–∂–µ —Ä—ã–Ω–æ—á–Ω—ã—Ö. 
–¶–µ–Ω–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞—ë—Ç—Å—è –¥–µ–º–ø–∏–Ω–≥–æ–≤—ã–º –≤ —Å–ª–µ–¥—É—é—â–∏—Ö —Å–ª—É—á–∞—è—Ö: 
- —Ü–µ–Ω–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –°–ú–†, –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –ø–æ –∫–æ—Ç–æ—Ä—ã–º –∏–º–µ–µ—Ç—Å—è —Å–º–µ—Ç–Ω–∞—è, –ø—Ä–µ–¥–ø—Ä–æ–µ–∫—Ç–Ω–∞—è, –ø—Ä–æ–µ–∫—Ç–Ω–∞—è 
(–ø—Ä–æ–µ–∫—Ç–Ω–æ-—Å–º–µ—Ç–Ω–∞—è) –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è, —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–∞—è –≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 5% –Ω–∏–∂–µ –ø–ª–∞–Ω–æ–≤–æ–π —Å—É–º–º—ã –ø—Ä–µ–¥–ø—Ä–æ–µ–∫—Ç–Ω—ã–µ
- –ø—Ä–æ–µ–∫—Ç–Ω—ã–µ –∏ –∏–∑—ã—Å–∫–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã, —Ä–∞–±–æ—Ç –ø–æ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –≤–Ω–µ–≤–µ–¥–æ–º—Å—Ç–≤–µ–Ω–Ω–æ–π —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–µ –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ —É—Å–ª—É–≥ –ø–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º—É –Ω–∞–¥–∑–æ—Ä—É –∑–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ–º –æ–±—ä–µ–∫—Ç–æ–≤ –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 10% –Ω–∏–∂–µ –ø–ª–∞–Ω–æ–≤–æ–π —Å—É–º–º—ã; 
- —Ü–µ–Ω–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ (–∫–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥–æ–≤—ã–µ) —É—Å–ª—É–≥–∏ –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 70 % –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–π —Ü–µ–Ω—ã –≤—Å–µ—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ü–µ–Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π; ‚Ä¢ —Ü–µ–Ω–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –∏–Ω—ã–µ —Ä–∞–±–æ—Ç—ã, —É—Å–ª—É–≥–∏ –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 20 % –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–π —Ü–µ–Ω—ã –≤—Å–µ—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ü–µ–Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
- —Ü–µ–Ω–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Ç–æ–≤–∞—Ä—ã –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 15% –Ω–∏–∂–µ –ø–ª–∞–Ω–æ–≤–æ–π —Å—É–º–º—ã.
–ê–Ω—Ç–∏–¥–µ–º–ø–∏–Ω–≥–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è –Ω–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—é—Ç—Å—è –Ω–∞ –∑–∞–∫—É–ø–∫–∏ —Å —Ç–æ—Ä–≥–∞–º–∏ –Ω–∞ –ø–æ–Ω–∏–∂–µ–Ω–∏–µ –∏ —Ç–µ–Ω–¥–µ—Ä–∞ –ø–æ –ó–ö–° (—Å –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–∞–º–∏ –Ω–∞ –ø–æ–Ω–∏–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã)."
    """,
    '–ß—Ç–æ —Ç–∞–∫–æ–µ –æ—Ñ—Ç–µ–π–∫ –∫–æ–Ω—Ç—Ä–∞–∫—Ç –∏ –∫–∞–∫ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è?':
        """
–û—Ñ—Ç–µ–π–∫-–∫–æ–Ω—Ç—Ä–∞–∫—Ç ‚Äî —ç—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—è –¥–ª—è –∫–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∏—Ö —Ç–æ–≤–∞—Ä–æ–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π –Ω–∞ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π –∑–∞–∫–∞–∑, —Å —É—á–µ—Ç–æ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞, —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è –≤ —Ä–∞–º–∫–∞—Ö –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏–º–ø–æ—Ä—Ç–æ–∑–∞–º–µ—â–µ–Ω–∏—è.
–î–ª—è –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞, –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º–æ–≥–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º –≤ —Ä–∞–º–∫–∞—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ü—Ä–æ–µ–∫—Ç–∞ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –Ω–æ–≤—ã—Ö –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤, –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –∑–∞–∫–ª—é—á–µ–Ω–∏—è –æ—Ñ—Ç–µ–π–∫-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞, –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –∑–∞–∫—É–ø–∫–∞ —Å–ø–æ—Å–æ–±–æ–º –∏–∑ –æ–¥–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ –ø–ø.8 –ø.1 –°—Ç.59 –ü–æ—Ä—è–¥–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è –∑–∞–∫—É–ø–æ–∫. 
        """,
    '–ß—Ç–æ —Ç–∞–∫–æ–µ –ø—É–ª —Ç–æ–≤–∞—Ä–æ–≤ –∏–º–ø–æ—Ä—Ç–æ–∑–∞–º–µ—â–µ–Ω–∏—è?':
        '–ü—É–ª —Ç–æ–≤–∞—Ä–æ–≤ –≤—Å–µ—Ö –ü–ö –§–æ–Ω–¥–∞, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –∏–º–µ–µ—Ç—Å—è –ø–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∏ —Å—Ç–∞–±–∏–ª—å–Ω–∞—è –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –≥—Ä—É–ø–ø—ã –∫–æ–º–ø–∞–Ω–∏–π, –Ω–æ '
        '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –≤ —Å—Ç—Ä–∞–Ω–µ.',
    '–ö–∞–∫ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞—è —Ü–µ–Ω–∞?':
        '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞—è —Ü–µ–Ω–∞ - —Ü–µ–Ω–∞ –Ω–∞ —Ç–æ–≤–∞—Ä, –ø—Ä–∏–º–µ–Ω—è–µ–º–∞—è –∑–∞–∫–∞–∑—á–∏–∫–æ–º –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –±—é–¥–∂–µ—Ç–æ–≤ —Ä–∞—Å—Ö–æ–¥–æ–≤/–ø–ª–∞–Ω–∞(–æ–≤) '
        '–∑–∞–∫—É–ø–æ–∫ –∏ –Ω–µ –≤–∫–ª—é—á–∞—é—â–∞—è –≤ —Å–µ–±—è –Ω–∞–ª–æ–≥ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å. –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ —Ü–µ–Ω—ã –Ω–∞ —Ç–æ–≤–∞—Ä—ã –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –≤ '
        '—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º ‚Ññ 3 –∫ –ü–æ—Ä—è–¥–∫—É."'
}
branches = ['–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ê–ø–ø–∞—Ä–∞—Ç', '–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –î–∏–≤–∏–∑–∏–æ–Ω "–°–µ—Ç—å"', '–î–∏–≤–∏–∑–∏–æ–Ω –ø–æ –†–æ–∑–Ω–∏—á–Ω–æ–º—É –ë–∏–∑–Ω–µ—Å—É',
            '–î–∏–≤–∏–∑–∏–æ–Ω –ø–æ –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–º—É –ë–∏–∑–Ω–µ—Å—É', '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç', '–î–∏–≤–∏–∑–∏–æ–Ω –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–π',
            '–î–∏—Ä–µ–∫—Ü–∏—è –¢–µ–ª–µ–∫–æ–º –ö–æ–º–ø–ª–µ–∫—Ç', '–î–∏—Ä–µ–∫—Ü–∏—è –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ü—Ä–æ–µ–∫—Ç–∞–º–∏', '–°–µ—Ä–≤–∏—Å–Ω–∞—è –§–∞–±—Ä–∏–∫–∞']

# branches_admin = [
#     {'branch': '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ê–ø–ø–∞—Ä–∞—Ç', 'sapa_admin': '353845928'},
#     {'branch': '–û–±—å–µ–¥–∏–Ω–µ–Ω–∏–µ –î–∏–≤–∏–∑–∏–æ–Ω "–°–µ—Ç—å"', 'sapa_admin': '353845928'},
#     {'branch': '–î–∏–≤–∏–∑–∏–æ–Ω –ø–æ –†–æ–∑–Ω–∏—á–Ω–æ–º—É –ë–∏–∑–Ω–µ—Å—É', 'sapa_admin': '353845928'},
#     {'branch': '–î–∏–≤–∏–∑–∏–æ–Ω –ø–æ –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–º—É –ë–∏–∑–Ω–µ—Å—É', 'sapa_admin': '353845928'},
#     {'branch': '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç', 'sapa_admin': '1066191569'},
#     {'branch': '–î–∏–≤–∏–∑–∏–æ–Ω –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–π', 'sapa_admin': '353845928'},
#     {'branch': '–î–∏—Ä–µ–∫—Ü–∏—è –¢–µ–ª–µ–∫–æ–º –ö–æ–º–ø–ª–µ–∫—Ç', 'sapa_admin': '353845928'},
#     {'branch': '–î–∏—Ä–µ–∫—Ü–∏—è –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ü—Ä–æ–µ–∫—Ç–∞–º–∏', 'sapa_admin': '353845928'},
#     {'branch': '–°–µ—Ä–≤–∏—Å–Ω–∞—è –§–∞–±—Ä–∏–∫–∞', 'sapa_admin': '353845928'}
# ]


# branches_admin = [
#      # {'branch': '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ê–ø–ø–∞—Ä–∞—Ç', 'sapa_admin': '735766161'},
#      {'branch': '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ê–ø–ø–∞—Ä–∞—Ç', 'sapa_admin': '559872057'},
#      # {'branch': '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ê–ø–ø–∞—Ä–∞—Ç', 'sapa_admin': '1009867354'},
#      # {'branch': '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ê–ø–ø–∞—Ä–∞—Ç', 'sapa_admin': '1066191569'},
#      # {'branch': '–û–±—å–µ–¥–∏–Ω–µ–Ω–∏–µ –î–∏–≤–∏–∑–∏–æ–Ω "–°–µ—Ç—å"', 'sapa_admin': '1621516433'},
#      {'branch': '–û–±—å–µ–¥–∏–Ω–µ–Ω–∏–µ –î–∏–≤–∏–∑–∏–æ–Ω "–°–µ—Ç—å"', 'sapa_admin': '735766161'},
#      {'branch': '–î–∏–≤–∏–∑–∏–æ–Ω –ø–æ –†–æ–∑–Ω–∏—á–Ω–æ–º—É –ë–∏–∑–Ω–µ—Å—É', 'sapa_admin': '531622371'},
#      {'branch': '–î–∏–≤–∏–∑–∏–æ–Ω –ø–æ –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–º—É –ë–∏–∑–Ω–µ—Å—É', 'sapa_admin': '468270698'},
#      # {'branch': '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç', 'sapa_admin': '476878708'},
#      {'branch': '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç', 'sapa_admin': '1066191569'},
#      # {'branch': '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç', 'sapa_admin': '353845928'},
#      {'branch': '–î–∏–≤–∏–∑–∏–æ–Ω –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–π', 'sapa_admin': '577247261'},
#      {'branch': '–î–∏—Ä–µ–∫—Ü–∏—è –¢–µ–ª–µ–∫–æ–º –ö–æ–º–ø–ª–µ–∫—Ç', 'sapa_admin': '597334185'},
#      {'branch': '–î–∏—Ä–µ–∫—Ü–∏—è –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ü—Ä–æ–µ–∫—Ç–∞–º–∏', 'sapa_admin': '947621727'},
#      {'branch': '–°–µ—Ä–≤–∏—Å–Ω–∞—è –§–∞–±—Ä–∏–∫–∞', 'sapa_admin': '477945972'}
# ]

branches_admin = 735766161
# branches_admin = 1066191569

def get_markup(message):
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
    if check_id(str(message.chat.id)):
        markup.add(types.KeyboardButton("–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å"))
    #button1 = types.KeyboardButton(hse_competition_field[0])
    #button2 = types.KeyboardButton("üöÄ–¶–∏—Ñ—Ä–æ–≤–æ–π –º–∞—Ä–∞—Ñ–æ–Ω | –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
    #button2 = types.KeyboardButton('üí∏–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å"')
    button9 = types.KeyboardButton("üìÑ–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–¥–∞—á–∏ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏")
    button10 = types.KeyboardButton('üì∂SAPA+')
    button = types.KeyboardButton("üòäWelcome –∫—É—Ä—Å | –ê–¥–∞–ø—Ç–∞—Ü–∏—è")
    button3 = types.KeyboardButton("üóÉÔ∏è–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π")
    button4 = types.KeyboardButton("üë∑–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –ë–∏–û–¢")
    button5 = types.KeyboardButton("üìÑ–£ –º–µ–Ω—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å")
    button6 = types.KeyboardButton("üßê–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
    button7 = types.KeyboardButton('üñ•–ü–æ—Ä—Ç–∞–ª "–ë—ñ—Ä–ª—ñ–∫"')
    button8 = types.KeyboardButton(lte_[0])
    markup.add(button10, button9, button)
    if get_branch(message.chat.id) == branches[2]:
        markup.add(button8)
    markup.add(button3, button7, button5, button4, button6)
    return markup

def send_welcome_message(bot, message):
    welcome_message = f'–ü—Ä–∏–≤–µ—Ç, {get_firstname(message)} üëã'
    markup = get_markup(message)
    bot.send_message(message.chat.id, welcome_message, reply_markup=markup)
    send_photo_(bot, message.chat.id, "images/menu.jpg")
    time.sleep(0.5)
    bot.send_message(message.chat.id, "B –º–æ–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–∏ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥:\
        \n/menu ‚Äî –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (—Ç—ã –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –¥–µ–º–æ!)\
        \n/help ‚Äî —Å–≤—è–∑–∞—Ç—å—Å—è c —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ (–∏—Å–ø–æ–ª—å–∑—É–π —ç—Ç—É –∫–æ–º–∞–Ω–¥—É, –µ—Å–ª–∏ —Å—Ç–æ–ª–∫–Ω–µ—à—å—Å—è c —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏ "
                                      "–∏–ª–∏ y —Ç–µ–±—è –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è)\
    \n/start ‚Äî –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ \
    \n/language - –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –±–æ—Ç–∞\
    \n\nKo–ºa–Ω–¥—ã —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –≤–æ –≤–∫–ª–∞–¥–∫–µ ¬´–ú–µ–Ω—é¬ª –≤ —Å—Ç—Ä–æ–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π (—Å–ª–µ–≤–∞ –≤–Ω–∏–∑—É) –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã, "
                                      "—Ç–æ–ª—å–∫–æ –∑–Ω–∞—á–æ–∫ ¬´/¬ª –Ω–µ –∑–∞–±—ã–≤–∞–π!")


regions_ = ["–≥–æ—Ä–æ–¥ –ê—Å—Ç–∞–Ω–∞", "–≥–æ—Ä–æ–¥ –ê–ª–º–∞—Ç—ã", "–≥–æ—Ä–æ–¥ –®—ã–º–∫–µ–Ω—Ç", "–≥–æ—Ä–æ–¥ –ê–∫—Ç–æ–±–µ", "–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
            "–ê–±–∞–π—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ê–∫–º–æ–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ê–∫—Ç—é–±–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–≥–æ—Ä–æ–¥ –ö–∞—Ä–∞–≥–∞–Ω–¥–∞",
            "–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ê—Ç—ã—Ä–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ó–∞–ø–∞–¥–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ñ–∞–º–±—ã–ª—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
            "–ñ–µ—Ç—ã—Å—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ö–æ—Å—Ç–∞–Ω–∞–π—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ö—ã–∑—ã–ª–æ—Ä–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ú–∞–Ω–≥–∏—Å—Ç–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
            "–ü–∞–≤–ª–æ–¥–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–°–µ–≤–µ—Ä–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–¢—É—Ä–∫–µ—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–£–ª—ã—Ç–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
            "–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"]


def send_error(bot, message):
    common_file.send_photo_(bot, message.chat.id, 'images/oops_error.jpg')
    time.sleep(0.5)
    bot.send_message(message.chat.id,
                     "–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\n–üo–∂a–ªy–πc—Ça, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É /menu")


def check_is_command(bot, message, text_):
    if text_ == "/start":
        send_welcome_message(bot, message)
        return True
    elif text_ == "/menu" or text_ == "/help" or text_ == "/language":
        menu(bot, message)
        return True
    return False

def fin_gram(bot, message, message_text):
    user_id = message.chat.id
    if message_text == 'üí∏–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å"':
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        is_verified = get_user_verification_status_reg(user_id)
        #bot.send_message(user_id, str(check_if_registered(user_id)))
        #bot.send_message(user_id, str(check_registration_message_in_history(user_id)))
        add_message_to_history(user_id, message_text)

        if not is_verified:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—É—é –ø–æ—á—Ç—É
            msg = bot.send_message(user_id, "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤–∞—à—É –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—É—é —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É, "
                                            "–Ω–∞ –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω 4-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏. "
                                            "\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É. \n–ü—Ä–∏–º–µ—Ä: User.U@telecom.kz" )
            bot.register_next_step_handler(msg, process_email, bot)
        elif check_registration_message_in_history(user_id) and check_if_registered(user_id):
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–î–∞" –∏ "–ù–µ—Ç"
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            yes_button = types.KeyboardButton('–î–∞')
            no_button = types.KeyboardButton('–ù–µ—Ç')
            markup.add(yes_button, no_button)

            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É—á–∞—Å—Ç–∏—è –≤ –æ–±—É—á–µ–Ω–∏–∏
            msg = bot.send_message(user_id, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ —ç—Ç–æ –æ–±—É—á–µ–Ω–∏–µ, –∂–µ–ª–∞–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å?",
                                   reply_markup=markup)
            bot.register_next_step_handler(msg, delete_fin_gram, bot)
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            yes_button = types.KeyboardButton('–î–∞')
            no_button = types.KeyboardButton('–ù–µ—Ç')
            markup.add(yes_button, no_button)

            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É—á–∞—Å—Ç–∏—è –≤ –æ–±—É—á–µ–Ω–∏–∏
            msg = bot.send_message(user_id, "–í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —á—Ç–æ –∂–µ–ª–∞–µ—Ç–µ —É—á–∞–≤—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –æ–±—É—á–µ–Ω–∏–∏?",
                                   reply_markup=markup)
            bot.register_next_step_handler(msg, confirm_fin_gram, bot)


def delete_fin_gram(message, bot):
    user_id = message.chat.id
    response = message.text.strip().lower()

    if response == '–¥–∞':
        delete_participation(message)
        delete_registration_message_in_history(user_id)
        clear_message_history(user_id)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏
        bot.send_message(user_id, "–í—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –æ–±—É—á–µ–Ω–∏—è")
        menu(bot, message)

    elif response == '–Ω–µ—Ç':
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        bot.send_message(user_id, "–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
        menu(bot, message)
    else:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ –≤–≤–æ–¥–∞, –µ—Å–ª–∏ –≤–¥—Ä—É–≥ –ø—Ä–∏—à–µ–ª —Ç–µ–∫—Å—Ç –Ω–µ "–î–∞" –∏ –Ω–µ "–ù–µ—Ç"
        msg = bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ '–î–∞' –∏–ª–∏ '–ù–µ—Ç'.")
        bot.register_next_step_handler(msg, confirm_fin_gram, bot)


def confirm_fin_gram(message, bot):
    user_id = message.chat.id
    response = message.text.strip().lower()
    if response == '–¥–∞':
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É financial_literacy
        webinar_name = "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å"
        sql_query = "INSERT INTO financial_literacy (user_id, webinar_name) VALUES (%s, %s)"
        params = (user_id, webinar_name)
        db_connect.execute_set_sql_query(sql_query, params)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        bot.send_message(user_id, "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –ø–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç–∏!")
        bot.send_message(user_id, "–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–µ–±–∏–Ω–∞—Ä 08.09.2024 –≤ 10:00 –ø–æ –∞—Å—Ç.–≤—Ä–µ–º–µ–Ω–∏ \n–¢–µ–º–∞: –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ì—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å –¥–ª—è –ö–∞–∑–∞—Ö–¢–µ–ª–µ–∫–æ–º\n–í—Ä–µ–º—è: 11 —Å–µ–Ω—Ç. 2024 10:00  –ê–ª–º–∞—Ç—ã \n–í–æ–π—Ç–∏ "
                                  "Zoom –ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è: \nhttps://us02web.zoom.us/j/86082733518?pwd=XZmACbDsdC6PtqopaseSM5hhFhZCp5.1 \n\n–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏: "
                                  "860 8273 3518 \n–ö–æ–¥ –¥–æ—Å—Ç—É–ø–∞: 11", protect_content=True)
        menu(bot, message)
    elif response == '–Ω–µ—Ç':
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        bot.send_message(user_id, "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        menu(bot, message)
    else:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ –≤–≤–æ–¥–∞, –µ—Å–ª–∏ –≤–¥—Ä—É–≥ –ø—Ä–∏—à–µ–ª —Ç–µ–∫—Å—Ç –Ω–µ "–î–∞" –∏ –Ω–µ "–ù–µ—Ç"
        msg = bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ '–î–∞' –∏–ª–∏ '–ù–µ—Ç'.")
        bot.register_next_step_handler(msg, confirm_fin_gram, bot)


def verification(bot, message, message_text):
    user_id = message.chat.id
    if message_text == "üìÑ–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–¥–∞—á–∏ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏":
        add_message_to_history(user_id, message_text)
        bot.send_message(user_id, "–ù–∞–∂–∏–º–∞—è –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, —á—Ç–æ –≤–∞–º–∏, –¥–µ–∫–ª–∞—Ä–∞—Ü–∏—è –ø–æ —Ñ–æ—Ä–º–µ "
                                  "–Ω–∞–ª–æ–≥–æ–≤–æ–π –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ 270.00, –±—ã–ª–∞ —Å–¥–∞–Ω–∞")
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        yes_button = types.KeyboardButton('–î–∞')
        no_button = types.KeyboardButton('–ù–µ—Ç')
        markup.add(yes_button, no_button)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
        is_verified = get_user_verification_status_reg(user_id)
        is_verified_decl = get_user_verification_status(user_id)
        # bot.send_message(message.chat.id, str(is_verified))
        # bot.send_message(message.chat.id, str(is_verified_decl))
        # bot.send_message(message.chat.id, str(check_registration_message_in_history_decl))
        # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ—á—Ç—É
        if not is_verified:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ—á—Ç—É
            msg = bot.send_message(user_id,
                                   "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤–∞—à—É –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—É—é —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω 4-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏. \n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É. \n–ü—Ä–∏–º–µ—Ä: User.U@telecom.kz")
            bot.register_next_step_handler(msg, process_email, bot)
        elif not is_verified_decl and check_registration_message_in_history_decl(user_id):
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏ (–î–∞/–ù–µ—Ç)
            msg = bot.send_message(user_id, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –ª–∏ –≤—ã —Å–¥–∞—á—É –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏?", reply_markup=markup)
            bot.register_next_step_handler(msg, process_declaration_confirmation, bot)

        else:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –¥–µ–∫–ª–∞—Ä–∞—Ü–∏—é
            bot.send_message(user_id, "–í—ã —É–∂–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–ª–∏ —Å–≤–æ—é –ø–æ—á—Ç—É –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω–∏–µ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏.")
            menu(bot, message)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞ (–î–∞/–ù–µ—Ç) –ø–æ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏
def process_declaration_confirmation(message, bot):
    user_id = str(message.chat.id)
    response = message.text.strip().lower()  # –ü—Ä–∏–≤–æ–¥–∏–º –æ—Ç–≤–µ—Ç –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏

    if response == '–¥–∞':
        # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç "–î–∞", –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        sql_query = "UPDATE users SET is_verified_decl = TRUE WHERE id = %s"
        params = (user_id,)

        try:
            # –í—ã–ø–æ–ª–Ω—è–µ–º SQL-–∑–∞–ø—Ä–æ—Å
            db_connect.execute_set_sql_query(sql_query, params)
            bot.send_message(user_id, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–¥–∞—á–∏ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            menu(bot, message)

        except Exception as e:
            # –õ–æ–≤–∏–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ –∏ –≤—ã–≤–æ–¥–∏–º –∏—Ö –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            bot.send_message(user_id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}")

    elif response == '–Ω–µ—Ç':
        # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç "–ù–µ—Ç", –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        bot.send_message(user_id, "–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏.")
        menu(bot, message)

    else:
        # –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç, –ø—Ä–æ—Å–∏–º –ø–æ–≤—Ç–æ—Ä–∏—Ç—å
        msg =bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: '–î–∞' –∏–ª–∏ '–ù–µ—Ç'.")
        bot.register_next_step_handler(msg, process_declaration_confirmation, bot)


def process_email(message, bot):
    user_id = str(message.chat.id)
    regex = r'\b[A-Za-z0-9._%+-]+@telecom.kz\b'
    # –ü–æ–ª—É—á–∞–µ–º email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    email = message.text
    set_email(message, email)

    if email.startswith('/'):
        # –£–¥–∞–ª—è–µ–º —Ç–∞–π–º–µ—Ä, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        verification_timers.pop(user_id, None)
        # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –º–µ–Ω—é, –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ "/menu"
        if email == '/menu':
            menu(bot, message)
            return True
    if email:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π email
        if re.fullmatch(regex, email):
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–µ—Ä–µ–¥–∞–µ–º bot –∏ chat_id
            send_verification_code(user_id, bot, message)
            msg = bot.send_message(message.chat.id,
                                   f"–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–¥, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –Ω–∞ –≤–∞—à—É —Ä–∞–±–æ—á—É—é –ø–æ—á—Ç—É –≤ —Ç–µ—á–µ–Ω–∏–∏ 5 –º–∏–Ω—É—Ç. \n\n–í–≤–æ–¥—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –≤–∞–º –∫–æ–¥, –≤—ã –¥–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Å–±–æ—Ä –∏ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
            bot.register_next_step_handler(msg, verify_code, bot)
        else:
            # –ï—Å–ª–∏ email –Ω–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π, —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º email
            msg = bot.send_message(message.chat.id,
                                   "–í–≤–µ–¥—ë–Ω–Ω—ã–π –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º. –ü—Ä–æ—Å–∏–º –í–∞—Å –≤–≤–µ—Å—Ç–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π E-mail –µ—â–µ —Ä–∞–∑.")
            bot.register_next_step_handler(msg, process_email, bot)
    else:
        bot.send_message(message.chat.id,
                         "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∞—à—É –ø–æ—á—Ç—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤–≤–µ–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π email.")


def start_verification_timer(user_id, bot, message):
    # –¢–∞–π–º–µ—Ä –Ω–∞ 5 –º–∏–Ω—É—Ç (300 —Å–µ–∫—É–Ω–¥)
    def timer():
        time.sleep(300)  # –û–∂–∏–¥–∞–Ω–∏–µ 5 –º–∏–Ω—É—Ç
        if user_id in verification_timers:
            del verification_timers[user_id]  # –£–¥–∞–ª—è–µ–º —Ç–∞–π–º–µ—Ä –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏—é –≤—Ä–µ–º–µ–Ω–∏
            sql_query = "UPDATE users SET email = NULL WHERE id = %s"
            params = (user_id,)
            db_connect.execute_set_sql_query(sql_query, params)
            bot.send_message(message.chat.id, "–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ.")
            msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π E-mail:")
            bot.register_next_step_handler(msg, process_email, bot)
            return

    # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫ –¥–ª—è —Ç–∞–π–º–µ—Ä–∞
    verification_timers[user_id] = threading.Thread(target=timer)
    verification_timers[user_id].start()


def sapa_con(bot, message):
    user_id = message.chat.id
    message_text = message.text

    if message_text == 'üì∂SAPA+':
        # –ú–µ–Ω—é —Å —á–µ—Ç—ã—Ä—å–º—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏'))
        markup.add(types.KeyboardButton('–ü—É–Ω–∫—Ç—ã –≤—ã–¥–∞—á–∏ —Ä–æ—É—Ç–µ—Ä–æ–≤ SAPA+'))
        markup.add(types.KeyboardButton('SAPA+QUEST'))
        # markup.add(types.KeyboardButton('–ß–∞—Ç –±–æ—Ç –ø–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –≤–æ–ø—Ä–æ—Å–∞–º/–û–î–°'))SAPA+QUEST
        markup.add(types.KeyboardButton('–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∞–±–æ–Ω–µ–Ω—Ç–æ–≤ SAPA+'), types.KeyboardButton('–¢–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫–∞ SAPA+ –¥–ª—è –º–µ–≥–∞–ª–∞–π–Ω–µ—Ä–æ–≤'))
        # markup.add(types.KeyboardButton('–ü–æ–º–æ—â—å –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ/—Å–∫–æ—Ä–æ—Å—Ç–∏ SAPA+ –î–¢–ü–ö'), types.KeyboardButton('–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∞–±–æ–Ω–µ–Ω—Ç–æ–≤ SAPA+'))

        bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=markup)
        bot.register_next_step_handler(message, additional_info_handler, bot)

    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ, –ø–æ–ø—Ä–æ—Å–∏–º —Å–¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä —Å–Ω–æ–≤–∞
        bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
        bot.register_next_step_handler(message, sapa_con, bot)

def sapa_instruments(message, bot):
    user_id = str(message.chat.id)
    response = message.text.strip().lower()

    if response.startswith('/'):
        # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –º–µ–Ω—é, –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ "/menu"
        if response == '/menu':
            menu(bot, message)
            return True
    elif response == '—Ç–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤':
        display_leaderboard(bot, message)
    elif response == '–æ—Ü–µ–Ω–∫–∞ —Å—Å—ã–ª–æ–∫' and str(user_id) in sapa_admin:
        show_pending_links(message, bot)
    elif response == '–∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É' and str(user_id) in sapa_admin:
        # msg = bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ Excel —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.")
        # bot.register_next_step_handler(msg, upload_sapa_table, bot)
        bot.send_message(message.chat.id, "–ï—â–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –ù–∞–ø–∏—Å–∞–≤ –∫–æ–º–∞–Ω–¥—É '/menu'")
    elif response == '–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Å—ã–ª–∫—É/—Ñ–æ—Ç–æ':
        msg = bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É/—Ñ–æ—Ç–æ:")
        bot.register_next_step_handler(msg, upload_link, bot)
    elif response == '–Ω–∞–∑–∞–¥':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(
            # types.KeyboardButton('–ë–æ–Ω—É—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ SAPA+'),
                   types.KeyboardButton('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Ç–æ—á–∫–∏ –ø–µ—Ä–µ–¥–∞—á–∏'))

        msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤", reply_markup=markup)
        bot.register_next_step_handler(msg, sapa_con, bot)
    else:
        bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
        bot.register_next_step_handler(message, sapa_instruments, bot)

def additional_info_handler(message, bot):
    user_id = message.chat.id
    info_request = message.text.strip().lower()

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ "–Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
    if info_request.startswith('/'):
        if info_request == '/menu':
            menu(bot, message)
            return True
    elif info_request == '–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏':
        bot.send_message(user_id, "–í–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Ä–æ—É—Ç–µ—Ä–∞:\nhttps://youtu.be/rgvRczmW6Ng")
        bot.send_message(user_id, "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –º–µ–≥–∞–ª–∞–π–Ω–µ—Ä–∞. –ü–æ–º–æ—â—å –≤ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Ä–æ—É—Ç–µ—Ä–∞ –¥–ª—è –∞–±–æ–Ω–µ–Ω—Ç–∞ https://youtu.be/0e4Yc5Kdzpo")
        bot.send_document(user_id, open("files/–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è_–ø–æ_–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é_–∏_–Ω–∞—Å—Ç—Ä–æ–π–∫–µ_—Ä–æ—É—Ç–µ—Ä–∞.pdf", 'rb'))
        bot.send_document(user_id, open("files/–°–æ–∑–¥–∞–Ω–∏–µ_–∑–∞—è–≤–∫–∏_–º–µ–≥–∞–ª–∞–∏ÃÜ–Ω–µ—Ä–æ–º+—Å–º—Å_6_—Ç–∏–∑–Ω–∞—á–Ω—ã–∏ÃÜ.pdf", 'rb'))
        bot.send_document(user_id, open("files/–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –º–µ–≥–∞–ª–∞–∏ÃÜ–Ω–µ—Ä–æ–º.pdf", 'rb'))
        bot.send_document(user_id, open("files/–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è_WFM_–∏–Ω—Å—Ç–∞–ª–ª—è—Ç–æ—Ä.pdf", 'rb'))
        bot.send_document(user_id, open("files/–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è_–ü–µ—Ä–µ–¥–∞—á–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è SAPA+.pdf", 'rb'))
        bot.send_photo(
            chat_id=user_id,  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            photo=open("images/–ü–∞–º—è—Ç–∫–∞.jpeg", 'rb'),  # –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
            caption=(
                '–ï—Å–ª–∏ –≤—ã —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å —Å —Å–∏—Ç—É–∞—Ü–∏–µ–π, —á—Ç–æ –∞–±–æ–Ω–µ–Ω—Ç—É –ø–æ —Ç–æ–π –∏–ª–∏ –∏–Ω–æ–π –ø—Ä–∏—á–∏–Ω–µ –Ω–µ –ø—Ä–∏—à–ª–æ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, '
                '—Ç–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏—è, –æ–ø–∏—Å–∞–Ω–Ω—ã–µ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ.\n\n'
                '–¢–∞–∫–∂–µ —É –≤—Å–µ—Ö –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ. –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å. '
                '–ù–µ –≤—Å–µ–≥–¥–∞ –æ–Ω–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ.\n\n'
                '–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤—Å–µ –≤—ã—à–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ –ø–æ–º–æ–≥–ª–∏, –ø–æ–ø—Ä–æ—Å–∏—Ç—å –∞–±–æ–Ω–µ–Ω—Ç–∞ –∑–∞–Ω–æ–≤–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è '
                '–≤ –º–æ–±–∏–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.\n\n'
                '–¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –≤—Å–µ—Ö —ç—Ç–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π, –ø–æ–¥–∞–≤–∞—Ç—å –∑–∞—è–≤–∫—É –≤ –≥—Ä—É–ø–ø—É.'
            )
        )

        bot.send_photo(
            chat_id=user_id,
            photo=open("images/5303249485243213412.jpg", 'rb'),
            caption=(
                '<b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –∞–±–æ–Ω–µ–Ω—Ç –ù–ï —Å–æ–æ–±—â–∏–ª 4-—Ö –∑–Ω–∞—á–Ω—ã–π –∫–æ–¥ –ú–µ–≥–∞–ª–∞–π–Ω–µ—Ä—É –∏ –∑–∞–∫—Ä—ã–ª –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:</b>\n'
                '1. –ê–±–æ–Ω–µ–Ω—Ç—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è\n'
                '2. –í–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞ –Ω–∞–∂–∞—Ç—å –Ω–∞ —Ä–∞–∑–¥–µ–ª ¬´–ß–∞—Ç—ã¬ª\n'
                '3. –ü–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ —Ä–∞–∑–¥–µ–ª ¬´–ß–∞—Ç—ã¬ª, –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É –Ω–∞–∂–∞—Ç—å –Ω–∞ ¬´–ö–æ–ª–æ–∫–æ–ª—å—á–∏–∫¬ª. '
                '–û—Ç–∫—Ä–æ–µ—Ç—Å—è —Ü–µ–Ω—Ç—Ä –Ω–æ—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (—Å–ø–∏—Å–æ–∫ —Å PUSH —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏)\n'
                '4. –ù–∞–∂–∞—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–¥–æ–º, –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–Ω–µ–µ –∞–±–æ–Ω–µ–Ω—Ç –ø–æ–¥–ø–∏—Å–∞–ª –ê–∫—Ç –ø—Ä–∏–µ–º–∞-–ø–µ—Ä–µ–¥–∞—á–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è\n'
                '5. –û—Ç–∫—Ä–æ–µ—Ç—Å—è —ç–∫—Ä–∞–Ω ¬´–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–æ—É—Ç–µ—Ä–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ¬ª –∏ –≤–Ω–∏–∑—É –ø–æ–¥ —Ç–µ–∫—Å—Ç–æ–º –±—É–¥–µ—Ç –ø—Ä–æ–¥—É–±–ª–∏—Ä–æ–≤–∞–Ω 4-—Ö –∑–Ω–∞—á–Ω—ã–π –∫–æ–¥ –¥–ª—è –ú–µ–≥–∞–ª–∞–π–Ω–µ—Ä–∞.'
            ),
        )
        bot.register_next_step_handler(message, additional_info_handler, bot)
    elif info_request == '–ø—É–Ω–∫—Ç—ã –≤—ã–¥–∞—á–∏ —Ä–æ—É—Ç–µ—Ä–æ–≤ sapa+':
        bot.send_document(user_id, open("files/–ü—É–Ω–∫—Ç—ã_–≤—ã–¥–∞—á–∏_–∏_–æ–±—É—á–µ–Ω–∏–µ_–º–µ–≥–∞–ª–∞–π–Ω–µ—Ä–æ–≤_SAPAplus.pdf", 'rb'))
        bot.register_next_step_handler(message, additional_info_handler, bot)
    elif info_request == '—á–∞—Ç –±–æ—Ç –ø–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –≤–æ–ø—Ä–æ—Å–∞–º/–æ–¥—Å':
        bot.send_message(user_id, "–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é –∫ –±–æ—Ç—É: https://t.me/C_M_S_bot")
        bot.register_next_step_handler(message, additional_info_handler, bot)
    elif info_request == '—Ç–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫–∞ sapa+ –¥–ª—è –º–µ–≥–∞–ª–∞–π–Ω–µ—Ä–æ–≤':
        bot.send_message(user_id, "–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ –≥—Ä—É–ø–ø–µ: https://t.me/+gCyDTZGRZIBlZDIy")
        bot.register_next_step_handler(message, additional_info_handler, bot)
    elif info_request == 'sapa+quest':
        bot.send_message(user_id, "C—Å—ã–ª–∫–∞ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω—ã–π –∫–∞–Ω–∞–ª: https://t.me/+LJl92t3A3NE2MzMy")
        bot.register_next_step_handler(message, additional_info_handler, bot)
    elif info_request == '–ø–æ–º–æ—â—å –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ/—Å–∫–æ—Ä–æ—Å—Ç–∏ sapa+ –¥—Ç–ø–∫':
        bot.send_message(user_id, "–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ –≥—Ä—É–ø–ø–µ: https://t.me/+yVOT2YdR6hAyMjRi")
        bot.register_next_step_handler(message, additional_info_handler, bot)
    elif info_request == '–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∞–±–æ–Ω–µ–Ω—Ç–æ–≤ sapa+':
        bot.send_message(user_id, "–í–æ–ø—Ä–æ—Å—ã –ø–æ –ª–∏—á–Ω–æ–º—É –∫–∞–±–∏–Ω–µ—Ç—É –ú–µ–≥–∞–ª–∞–π–Ω–µ—Ä–∞ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –¥–æ—Å—Ç—É–ø–æ–º (–Ω–µ –ø—Ä–∏—à–ª–æ –°–ú–°, —É–¥–∞–ª–∏–ª –°–ú–°, —Å–º–µ–Ω–∏—Ç—å –ø—Ä–∏–≤—è–∑–∫—É –∫ –§–∏–ª–∏–∞–ª—É) - üëâ –Ω–∞–∂–º–∏—Ç–µ —Å—é–¥–∞")
        bot.register_next_step_handler(message, additional_info_handler, bot)
    else:
        bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
        bot.register_next_step_handler(message, additional_info_handler, bot)

def links_instruments(message, bot):
    user_id = str(message.chat.id)
    response = message.text.strip().lower()

    if response.startswith('/'):
        # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –º–µ–Ω—é, –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ "/menu"
        if response == '/menu':
            menu(bot, message)
            return True
    elif response == '–∑–∞–≥—Ä—É–∑–∏—Ç—å':
        msg = bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É/—Ñ–æ—Ç–æ:")
        bot.register_next_step_handler(msg, upload_link, bot)
    elif response == '—Å–ø–∏—Å–æ–∫ –Ω–µ–ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫':
        show_user_links(bot, message)
    else:
        bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
        bot.register_next_step_handler(message, links_instruments, bot)


def upload_link(message, bot):
    user_id = message.chat.id

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ —Ç–µ–∫—Å—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    if message.text:
        link = message.text.strip()

        if link.startswith('/'):
            if link == '/menu':
                menu(bot, message)
                return True
        elif link.lower() == '—Å—Ç–æ–ø':
            bot.send_message(user_id, "–ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Å—ã–ª–æ–∫ –∑–∞–≤–µ—Ä—à—ë–Ω.")
            msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ:")
            bot.register_next_step_handler(msg, links_instruments, bot)
            return

        if not link.startswith("http"):
            bot.send_message(user_id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL.")
            msg = bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É/—Ñ–æ—Ç–æ:")
            bot.register_next_step_handler(msg, upload_link, bot)
            return

        try:
            user_info = get_user(message.chat.id)
            email = user_info[6]
            branch = user_info[7]
            if not email or not branch:
                bot.send_message(user_id, "–û—à–∏–±–∫–∞: email –∏–ª–∏ —Ñ–∏–ª–∏–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                return

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ —Å –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –¥–∞—Ç–æ–π –∏ branch –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            db_connect.execute_set_sql_query("""
                INSERT INTO sapa_link (email, link, is_checked, status, branch, date) 
                VALUES (%s, %s, FALSE, NULL, %s, NOW())
            """, (email, link, branch))

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ sapa_bonus, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            check_user_query = "SELECT * FROM sapa_bonus WHERE email = %s"
            result = db_connect.execute_get_sql_query(check_user_query, (email,))

            if not result:
                user_query = "SELECT firstname, lastname FROM users WHERE email = %s"
                user_info = db_connect.execute_get_sql_query(user_query, (email,))
                if user_info:
                    firstname, lastname = user_info[0]
                    fullname = f"{firstname} {lastname}"
                    db_connect.execute_set_sql_query("""
                        INSERT INTO sapa_bonus (email, fullname, bonus_score, total_score)
                        VALUES (%s, %s, 0, 0)
                    """, (email, fullname))

            bot.send_message(user_id, "–°—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞! –û–∂–∏–¥–∞–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫–∏.")

            bot.send_message(user_id, "–í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é SAPA+")
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            markup.add(
                # types.KeyboardButton('–±–æ–Ω—É—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ SAPA+'),
                       types.KeyboardButton('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Ç–æ—á–∫–∏ –ø–µ—Ä–µ–¥–∞—á–∏'))

            msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –¥–µ–π—Å—Ç–≤–∏–π:", reply_markup=markup)
            bot.register_next_step_handler(msg, sapa_con, bot)
        except Exception as e:
            bot.send_message(user_id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Å—ã–ª–∫–∏: {e}")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ
    elif message.photo:
        bot.send_message(user_id, "–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ, –Ω–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É...")
        try:
            file_info = bot.get_file(message.photo[-1].file_id)
            file_url = f'https://api.telegram.org/file/bot{db_connect.TOKEN}/{file_info.file_path}'

            response = requests.get(file_url)
            if response.status_code == 200:
                file_data = response.content
            else:
                bot.send_message(user_id, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
                return

            user_info = get_user(message.chat.id)
            email = user_info[6]
            branch = user_info[7]
            if not email or not branch:
                bot.send_message(user_id, "–û—à–∏–±–∫–∞: email –∏–ª–∏ —Ñ–∏–ª–∏–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                return

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ —Å –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –¥–∞—Ç–æ–π –∏ branch –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            db_connect.execute_set_sql_query("""
                INSERT INTO sapa_link (email, link, is_checked, status, image_data, branch, date) 
                VALUES (%s, NULL, FALSE, NULL, %s, %s, NOW())
            """, (email, file_data, branch))

            check_user_query = "SELECT * FROM sapa_bonus WHERE email = %s"
            result = db_connect.execute_get_sql_query(check_user_query, (email,))

            if not result:
                user_query = "SELECT firstname, lastname FROM users WHERE email = %s"
                user_info = db_connect.execute_get_sql_query(user_query, (email,))
                if user_info:
                    firstname, lastname = user_info[0]
                    fullname = f"{firstname} {lastname}"
                    db_connect.execute_set_sql_query("""
                        INSERT INTO sapa_bonus (email, fullname, bonus_score, total_score)
                        VALUES (%s, %s, 0, 0)
                    """, (email, fullname))

            bot.send_message(user_id, "–§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∏ –æ–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏.")

            bot.send_message(user_id, "–í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é SAPA+")
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            markup.add(
                # types.KeyboardButton('–±–æ–Ω—É—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ SAPA+'),
                       types.KeyboardButton('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Ç–æ—á–∫–∏ –ø–µ—Ä–µ–¥–∞—á–∏'))

            msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –¥–µ–π—Å—Ç–≤–∏–π:", reply_markup=markup)
            bot.register_next_step_handler(msg, sapa_con, bot)

        except Exception as e:
            bot.send_message(user_id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: {e}")
    else:
        bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –∏–ª–∏ —Ñ–æ—Ç–æ.")
        bot.register_next_step_handler(message, upload_link, bot)

def get_user_email(user_id):
    # Ensure params is a tuple to avoid SQL errors
    sql_query = """
        SELECT email 
        FROM users 
        WHERE id = %s
    """
    params = (str(user_id),)

    # Execute query and fetch email
    result = db_connect.execute_get_sql_query(sql_query, params)

    # If a result is found, return email
    return result[0][0] if result else None

def show_user_links(bot, message):
    user_info = get_user(message.chat.id)
    user_email = user_info[6]
    if not user_email:
        bot.send_message(message.chat.id, "–í–∞—à email –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    links_result = db_connect.execute_get_sql_query(
        "SELECT link, status FROM sapa_link WHERE email = %s AND is_checked = FALSE", (user_email,)
    )

    if links_result:
        response_message = "–í–∞—à–∏ —Å—Å—ã–ª–∫–∏ –∏ –∏—Ö —Å—Ç–∞—Ç—É—Å—ã:\n"
        for link, status in links_result:
            response_message += f"–°—Å—ã–ª–∫–∞: {link}\n–°—Ç–∞—Ç—É—Å: {status}\n\n"

        bot.send_message(message.chat.id, response_message)
        bot.send_message(message.chat.id, "–í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é SAPA+")
        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        markup.add(
            # types.KeyboardButton('–±–æ–Ω—É—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ SAPA+'),
                   types.KeyboardButton('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Ç–æ—á–∫–∏ –ø–µ—Ä–µ–¥–∞—á–∏'))

        msg = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –¥–µ–π—Å—Ç–≤–∏–π:", reply_markup=markup)
        bot.register_next_step_handler(msg, sapa_con, bot)
    else:
        msg = bot.send_message(message.chat.id, "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –≤–∞—Å –Ω–µ—Ç —Å—Å—ã–ª–æ–∫, –æ–∂–∏–¥–∞—é—â–∏—Ö –ø—Ä–æ–≤–µ—Ä–∫–∏.")
        bot.register_next_step_handler(msg, sapa_instruments, bot)


def display_leaderboard(bot, message):
    # –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ fullname –∏ –æ–±—â–µ–≥–æ –±–∞–ª–ª–∞, —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –æ–±—â–µ–º—É –±–∞–ª–ª—É
    result = db_connect.execute_get_sql_query("""
            SELECT sb.fullname, COALESCE(s.score, 0) + sb.bonus_score AS total_score
            FROM sapa_bonus sb
            LEFT JOIN sapa s ON sb.email = s.email
            ORDER BY total_score DESC
            LIMIT 10
        """)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤
    leaderboard = "–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤:\n" + "\n".join(
        f"{i}. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {row[0]} - –û–±—â–∏–π –±–∞–ª–ª: {row[1]}"
        for i, row in enumerate(result, 1)
    )
    bot.send_message(message.chat.id, leaderboard)

    # –ü–æ–ª—É—á–∞–µ–º email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Ö chat ID
    user_email_result = db_connect.execute_get_sql_query(
        "SELECT email FROM users WHERE id = %s",
        (str(message.chat.id),)
    )

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –Ω–∞–π–¥–µ–Ω email
    if user_email_result:
        user_email = user_email_result[0][0].strip().lower()  # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º email –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä

        # –ù–∞—Ö–æ–¥–∏–º —Ä–∞–Ω–≥ –∏ –±–∞–ª–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ –ª–∏–¥–µ—Ä–æ–≤
        user_rank_result = db_connect.execute_get_sql_query("""
                WITH RankedUsers AS (
                    SELECT 
                        sb.email,
                        COALESCE(s.score, 0) + sb.bonus_score AS total_score,
                        ROW_NUMBER() OVER (ORDER BY COALESCE(s.score, 0) + sb.bonus_score DESC) AS rank
                    FROM sapa_bonus sb
                    LEFT JOIN sapa s ON sb.email = s.email
                )
                SELECT rank, total_score
                FROM RankedUsers
                WHERE LOWER(email) = %s  -- –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞
            """, (user_email,))

        if user_rank_result:
            user_rank, user_score = user_rank_result[0]
            bot.send_message(message.chat.id, f"–í–∞—à–µ –º–µ—Å—Ç–æ: {user_rank}, –û–±—â–∏–π –±–∞–ª–ª: {user_score}")
        else:
            bot.send_message(message.chat.id, "–í—ã –ø–æ–∫–∞ –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –∫–æ–Ω–∫—É—Ä—Å–µ.")
    else:
        bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∞—à email.")

    # –ü–µ—Ä–µ—Ö–æ–¥ –∫ –¥–æ—Å—Ç—É–ø–Ω—ã–º –æ–ø—Ü–∏—è–º
    bot.send_message(message.chat.id, "–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤–∞—Å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é SAPA+")
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    markup.add(
        # types.KeyboardButton('–±–æ–Ω—É—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ SAPA+'),
               types.KeyboardButton('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Ç–æ—á–∫–∏ –ø–µ—Ä–µ–¥–∞—á–∏'))

    msg = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –¥–µ–π—Å—Ç–≤–∏–π:", reply_markup=markup)
    bot.register_next_step_handler(msg, sapa_con, bot)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ branch
def show_pending_links(message, bot):
    try:
        if message.chat.id != branches_admin:
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞: —Ñ–∏–ª–∏–∞–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        # Fetch links associated with the admin's branch, not the user's current branch
        result = db_connect.execute_get_sql_query("""
            SELECT id, link, image_data 
            FROM sapa_link 
            WHERE is_checked = FALSE 
            ORDER BY id 
            LIMIT 1
        """)

        if result:
            for row in result:
                link_id, link, image_data = row
                if link:
                    bot.send_message(message.chat.id, f"–°—Å—ã–ª–∫–∞: {link}")
                elif image_data:
                    bot.send_photo(message.chat.id, image_data)

                # Inline keyboard for rating actions
                markup = types.InlineKeyboardMarkup(row_width=2)
                buttons = [
                    types.InlineKeyboardButton("–ü–æ—Å—Ç/—Å—Ç–æ—Ä–∏—Å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞", callback_data=f'–ø–æ—Å—Ç {link_id}'),
                    types.InlineKeyboardButton("–ü–æ—Å—Ç/—Å—Ç–æ—Ä–∏—Å –∫–ª–∏–µ–Ω—Ç–∞", callback_data=f'–ø–æ—Å—Ç1 {link_id}'),
                    types.InlineKeyboardButton("–û—Ç–∑—ã–≤", callback_data=f'–æ—Ç–∑—ã–≤ {link_id}'),
                    types.InlineKeyboardButton("–ù–∏—á–µ–≥–æ", callback_data=f'–Ω–∏—á–µ–≥–æ {link_id}')
                ]
                markup.add(*buttons)

                bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
        else:
            bot.send_message(message.chat.id, "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –Ω–æ–≤—ã—Ö —Å—Å—ã–ª–æ–∫ –∏–ª–∏ —Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.")
            msg = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ:")
            bot.register_next_step_handler(msg, sapa_instruments, bot)
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Å—ã–ª–æ–∫: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∞–±–ª–∏—Ü—ã —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
# def upload_sapa_table(message, bot):
#     user_id = str(message.chat.id)
#     if message.content_type == 'document':
#         file_info = bot.get_file(message.document.file_id)
#         downloaded_file = bot.download_file(file_info.file_path)
#
#         try:
#             # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Excel —Ñ–∞–π–ª–∞ –≤ DataFrame
#             df = pd.read_excel(io.BytesIO(downloaded_file))
#
#             # –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É sapa –∏ –≤—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
#             db_connect.execute_set_sql_query("DELETE FROM sapa")
#             for _, row in df.iterrows():
#                 # –í—Å—Ç–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—É sapa
#                 insert_sapa_query = "INSERT INTO sapa (fullname, email, table_number, score) VALUES (%s, %s, %s, %s)"
#                 insert_params = (row['fullname'], row['email'], row['table_number'], row['score'])
#                 db_connect.execute_set_sql_query(insert_sapa_query, insert_params)
#
#                 # –û–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ –≤—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ sapa_bonus
#                 check_user_query = "SELECT bonus_score FROM sapa_bonus WHERE email = %s"
#                 result = db_connect.execute_get_sql_query(check_user_query, (row['email'],))
#
#                 if result:
#                     # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–µ—Ä–µ—Å—á–∏—Ç–∞–µ–º total_score
#                     current_bonus_score = result[0][0]  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —á–∏—Å–ª–æ–≤–æ–π –∏–Ω–¥–µ–∫—Å [0][0]
#                     new_total_score = current_bonus_score + row['score']
#                     update_total_score_query = """
#                         UPDATE sapa_bonus
#                         SET total_score = %s
#                         WHERE email = %s
#                     """
#                     db_connect.execute_set_sql_query(update_total_score_query, (new_total_score, row['email']))
#                 else:
#                     # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –¥–æ–±–∞–≤–∏–º –µ–≥–æ —Å –Ω–∞—á–∞–ª—å–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º bonus_score = 0
#                     insert_user_query = """
#                         INSERT INTO sapa_bonus (email, bonus_score, total_score)
#                         VALUES (%s, %s, %s)
#                     """
#                     insert_params = (row['email'], 0, row['score'])
#                     db_connect.execute_set_sql_query(insert_user_query, insert_params)
#
#             bot.send_message(user_id, "–¢–∞–±–ª–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
#             msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ:")
#             bot.register_next_step_handler(msg, sapa_instruments, bot)
#         except Exception as e:
#             bot.send_message(user_id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–∞–±–ª–∏—Ü—ã: {e}")
#     else:
#         bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ Excel.")
#         msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ:")
#         bot.register_next_step_handler(msg, sapa_instruments, bot)

def upload_sapa_table(message, bot):
    bot.send_message(message.chat.id, "–ï—â–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –ù–∞–ø–∏—Å–∞–≤ –∫–æ–º–∞–Ω–¥—É '/menu'")
    # user_id = str(message.chat.id)
    # if message.content_type == 'document':
    #     file_info = bot.get_file(message.document.file_id)
    #     downloaded_file = bot.download_file(file_info.file_path)
    #
    #     try:
    #         # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Excel —Ñ–∞–π–ª–∞ –≤ DataFrame
    #         df = pd.read_excel(io.BytesIO(downloaded_file))
    #
    #         # –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É sapa –∏ –≤—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    #         db_connect.execute_set_sql_query("DELETE FROM sapa")
    #         for _, row in df.iterrows():
    #             # –í—Å—Ç–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—É sapa
    #             insert_sapa_query = "INSERT INTO sapa (fullname, email, table_number, score) VALUES (%s, %s, %s, %s)"
    #             insert_params = (row['fullname'], row['email'], row['table_number'], row['score'])
    #             db_connect.execute_set_sql_query(insert_sapa_query, insert_params)
    #
    #             # –û–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ –≤—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ sapa_bonus
    #             check_user_query = "SELECT bonus_score FROM sapa_bonus WHERE email = %s"
    #             result = db_connect.execute_get_sql_query(check_user_query, (row['email'],))
    #
    #             if result:
    #                 # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–µ—Ä–µ—Å—á–∏—Ç–∞–µ–º total_score
    #                 current_bonus_score = result[0][0]  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —á–∏—Å–ª–æ–≤–æ–π –∏–Ω–¥–µ–∫—Å [0][0]
    #                 new_total_score = current_bonus_score + row['score']
    #                 update_total_score_query = """
    #                     UPDATE sapa_bonus
    #                     SET total_score = %s
    #                     WHERE email = %s
    #                 """
    #                 db_connect.execute_set_sql_query(update_total_score_query, (new_total_score, row['email']))
    #             else:
    #                 # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –¥–æ–±–∞–≤–∏–º –µ–≥–æ —Å –Ω–∞—á–∞–ª—å–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º bonus_score = 0
    #                 insert_user_query = """
    #                     INSERT INTO sapa_bonus (email, bonus_score, total_score)
    #                     VALUES (%s, %s, %s)
    #                 """
    #                 insert_params = (row['email'], 0, row['score'])
    #                 db_connect.execute_set_sql_query(insert_user_query, insert_params)
    #
    #         bot.send_message(user_id, "–¢–∞–±–ª–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
    #         msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ:")
    #         bot.register_next_step_handler(msg, sapa_instruments, bot)
    #     except Exception as e:
    #         bot.send_message(user_id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–∞–±–ª–∏—Ü—ã: {e}")
    # else:
    #     bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ Excel.")
    #     msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ:")
    #     bot.register_next_step_handler(msg, sapa_instruments, bot)

def hse_competition_(bot, message, id_i_s = None):
    text = "–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n\n"
    full_name = "–§–ò–û: " + str(get_lastname(message)) + " " + get_firstname(message) + "\n"
    branch = "–î–∏–≤–∏–∑–∏–æ–Ω: " + str(get_branch(message.chat.id)) + "\n"
    phone_num = "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: " + str(get_phone_number(message)) + "\n"
    text = text + full_name + branch + phone_num + ("\n\n–ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, "
                                                    "–≤—ã –º–æ–∂–µ—Ç–µ –µ–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∂–∞–≤ –Ω–∞ /menu –∏ –ø–µ—Ä–µ–π—Ç–∏ –≤ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
    bot.send_message(message.chat.id, text)

    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    markup = generate_buttons(hse_com_field, markup)
    msg = bot.send_message(message.chat.id, "–í –∫–∞–∫–æ–º –∫–æ–Ω–∫—É—Ä—Å–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ?", reply_markup=markup)

    if redirect(bot, message, id_i_s):
        return
    else:
        bot.register_next_step_handler(msg, hse_get_competition_name, bot)


def hse_get_competition_name(message, bot, id_i_s=None):
    if redirect(bot, message, id_i_s):
        return
    else:
        hse_competition.insert_into_hse_competition(message.chat.id)
        hse_competition.set_competition(message.chat.id, message.text)
        msg = bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ —Å–≤–æ—é –¥–æ–ª–∂–Ω–æ—Å—Ç—å")
        bot.register_next_step_handler(msg, hse_get_position, bot)


def hse_get_position(message, bot, id_i_s=None):
    if redirect(bot, message, id_i_s):
        return
    else:
        hse_competition.set_position(message.chat.id, message.text)
        msg = bot.send_message(message.chat.id, "–° –∫–∞–∫–æ–≥–æ –≤—ã –≥–æ—Ä–æ–¥–∞?")
        bot.register_next_step_handler(msg, hse_get_city, bot)


def hse_get_city(message, bot, id_i_s=None):
    if redirect(bot, message, id_i_s):
        return
    else:
        user_id = message.chat.id
        # –û–±–Ω–æ–≤–ª—è–µ–º –≥–æ—Ä–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        hse_competition.set_city(user_id, message.text)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
        current_time = datetime.now()  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
        hse_competition.set_time(user_id, current_time)  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –≤ –±–∞–∑—É

        bot.send_message(user_id,
                         "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é! \n–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –Ω–∞—à–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã")
        menu(bot, message)


def marathon(bot, message):
    bot.send_message(message.chat.id, "–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º –º–∞—Ä–∞—Ñ–æ–Ω–µ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é "
                                      "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é")
    if not maraphonersClass.ifExistsUser(message.chat.id):
        maraphonersClass.insert_into_maraphoners(message)
    msg = bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à—É –¥–æ–ª–∂–Ω–æ—Å—Ç—å")
    bot.register_next_step_handler(msg, change_position, bot)


def change_position(message_, bot):
    if check_is_command(bot, message_, message_.text):
        return
    maraphonersClass.set_position(message_, message_.text)
    msg = bot.send_message(message_.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç")
    bot.register_next_step_handler(msg, change_age, bot)


def change_age(message_, bot):
    if check_is_command(bot, message_, message_.text):
        return
    try:
        age = int(message_.text)
        if age < 5 or age > 100:
            raise ValueError("–í–æ–∑—Ä–∞—Å—Ç –≤–Ω–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞")
    except ValueError:
        msg = bot.send_message(message_.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç")
        bot.register_next_step_handler(msg, change_age, bot)
        return
    maraphonersClass.set_age(message_, message_.text)
    markup_ = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    markup_ = generate_buttons(regions_, markup_)
    msg = bot.send_message(message_.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ä–µ–≥–∏–æ–Ω", reply_markup=markup_)
    bot.register_next_step_handler(msg, change_region, bot)


def change_region(message_, bot):
    if check_is_command(bot, message_, message_.text):
        return
    if message_.text not in regions_:
        markup_ = types.ReplyKeyboardMarkup(one_time_keyboard=True)
        markup_ = generate_buttons(regions_, markup_)
        msg = bot.send_message(message_.chat.id, "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –≤–∞—à —Ä–µ–≥–∏–æ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞", reply_markup=markup_)
        bot.register_next_step_handler(msg, change_region, bot)
        return
    maraphonersClass.set_region(message_, message_.text)
    formatted_number = str(maraphonersClass.get_id(message_)).zfill(4)

    bot.send_message(message_.chat.id,
                     "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–∫–æ–Ω—á–µ–Ω–∞!\n–í–∞—à —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä\n<b>" + formatted_number + "</b>")
    bot.send_message(message_.chat.id, str(marathoner_text(message_.chat.id)) +
                     "\n–ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —É–∫–∞–∑–∞–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é /menu."
                     "\n–î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏, –≤–æ–∑—Ä–∞—Å—Ç–µ –∏–ª–∏ —Ä–µ–≥–∏–æ–Ω–µ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é "
                     "–Ω–∞ —Ü–∏—Ñ—Ä–æ–≤–æ–π –º–∞—Ä–∞—Ñ–æ–Ω —Å–Ω–æ–≤–∞."
                     "\n\n–î–ª—è –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '<b>–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b>'")
    bot.send_message(message_.chat.id, "–ü—Ä–æ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ, —á—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π "
                                       "—Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª –º–∞—Ä–∞—Ñ–æ–Ω–∞ (–≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—É–¥–µ—Ç –≤—ã—Å—ã–ª–∞—Ç—å—Å—è —Ç—É–¥–∞). "
                                       "\n–°–°–´–õ–ö–ê: https://t.me/+edydGmWNMh43Zjcy")


# SELECT maraphoners.id, maraphoners.user_id, users.firstname, users.lastname, phone_number, branch, '
# age, position, region
def marathoner_text(user_id):
    marathoner_info = maraphonersClass.get_by_user_id(user_id)[0]
    text = f"–§–ò–û: {marathoner_info[2]} {marathoner_info[3]}\n" \
           f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {marathoner_info[4]}\n" \
           f"–§–∏–ª–∏–∞–ª: {marathoner_info[5]}\n" \
           f"–î–æ–ª–∂–Ω–æ—Å—Ç—å: {marathoner_info[7]}\n" \
           f"–†–µ–≥–∏–æ–Ω: {str(marathoner_info[8])}\n" \
           f"–í–æ–∑—Ä–∞—Å—Ç: {str(marathoner_info[6])}\n"
    return text


def start_adaption(bot, message):
    markup_adapt = types.InlineKeyboardMarkup()
    button_adapt = types.InlineKeyboardButton("–†–∞—Å—Å–∫–∞–∑—ã–≤–∞–π!", callback_data="–†–∞—Å—Å–∫–∞–∑—ã–≤–∞–π!")
    markup_adapt.add(button_adapt)
    bot.send_message(message.chat.id, f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AO ‚Äú–ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º‚Äùü•≥')
    send_photo_(bot, message.chat.id, 'images/dear_collegue.jpeg')
    time.sleep(0.75)
    bot.send_message(message.chat.id, "–¢–æ–ª—å–∫–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ, –∫–∞–∫ –º–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è ü´°",
                     reply_markup=markup_adapt)


def adaption(bot, message):
    if message.text == "üòäWelcome –∫—É—Ä—Å | –ê–¥–∞–ø—Ç–∞—Ü–∏—è":
        if get_branch(message.chat.id) == "–î–∏—Ä–µ–∫—Ü–∏—è –¢–µ–ª–µ–∫–æ–º –ö–æ–º–ø–ª–µ–∫—Ç":
            markup_dtk = types.ReplyKeyboardMarkup(row_width=1, one_time_keyboard=True)
            button_dtk1 = types.KeyboardButton("–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
            button_dtk2 = types.KeyboardButton("–î–¢–ö")
            markup_dtk.add(button_dtk1, button_dtk2)
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_dtk)
        else:
            start_adaption(bot, message)
    elif message.text == "–î–¢–ö":
        markup_dtk = types.ReplyKeyboardMarkup(row_width=1)
        button_dtk1 = types.KeyboardButton("–î–¢–ö –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏")
        button_dtk2 = types.KeyboardButton("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ")
        markup_dtk.add(button_dtk2, button_dtk1)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_dtk)
    elif message.text == "–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è":
        start_adaption(bot, message)
    elif message.text == "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ":
        markup_adapt = types.InlineKeyboardMarkup()
        button_adapt = types.InlineKeyboardButton("–ù–∞—á–∏–Ω–∞–µ–º!", callback_data="–ù–∞—á–∏–Ω–∞–µ–º!")
        markup_adapt.add(button_adapt)
        bot.send_message(message.chat.id, '<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –∫—É—Ä—Å –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –¥–ª—è —Ñ–∏–ª–∏–∞–ª–∞ –î–∏—Ä–µ–∫—Ü–∏–∏ '
                                          '¬´–¢–µ–ª–µ–∫–æ–º –ö–æ–º–ø–ª–µ–∫—Ç¬ª!</b>'
                                          '\n\n–ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ –∏ —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –≤–∞—à–µ '
                                          '—Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ —Å –Ω–∞–º–∏ –±—É–¥–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω—ã–º –∏ –ø–ª–æ–¥–æ—Ç–≤–æ—Ä–Ω—ã–º.\n–í —ç—Ç–æ–º –∫—É—Ä—Å–µ –≤—ã '
                                          '–æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π –∏—Å—Ç–æ—Ä–∏–µ–π, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π –∫—É–ª—å—Ç—É—Ä–æ–π, —Ä–∞–±–æ—á–∏–º–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏ '
                                          '–∏ –º–Ω–æ–≥–∏–º –¥—Ä—É–≥–∏–º.')
        bot.send_photo(message.chat.id, photo=open('images/–±–∞–Ω–Ω–µ—Ä - –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å - –î–¢–ö.png', 'rb'),
                       reply_markup=markup_adapt)
    else:
        instructions_dtk(bot, message)


def instructions_dtk(bot, message):
    message_text = message.text
    if message_text == "–î–¢–ö –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏":
        markup_dtk = types.ReplyKeyboardMarkup(row_width=1)
        button_dtk1 = types.KeyboardButton("–ó–∞—è–≤–∫–∏ –≤ –û–¶–û HR")
        button_dtk2 = types.KeyboardButton("–ó–∞—è–≤–∫–∏ –≤–æ–∑–ª–æ–∂–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π")
        button_dtk3 = types.KeyboardButton("–ó–∞—è–≤–∫–∏ –Ω–∞ –æ—Ç–ø—É—Å–∫")
        button_dtk4 = types.KeyboardButton("–ö–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∏")
        button_dtk5 = types.KeyboardButton("–ü–µ—Ä–µ–≤–æ–¥—ã")
        button_dtk6 = types.KeyboardButton("–ü–æ—Ä—è–¥–æ–∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∏")
        button_dtk7 = types.KeyboardButton("–†–∞—Å—Å—Ç–æ—Ä–∂–µ–Ω–∏–µ –¢–î")
        markup_dtk.add(button_dtk1, button_dtk2, button_dtk3, button_dtk4, button_dtk5, button_dtk6, button_dtk7)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_dtk)
    elif message_text == "–ó–∞—è–≤–∫–∏ –≤ –û–¶–û HR":
        bot.send_document(message.chat.id, open("files/dtk/–ó–∞—è–≤–∫–∏ –≤ –û–¶–û HR.docx", 'rb'))
        bot.send_document(message.chat.id, open("files/dtk/–ó–∞—è–≤–∫–∏ –≤ –û–¶–û HR.pdf", 'rb'))
    elif message_text == "–ó–∞—è–≤–∫–∏ –≤–æ–∑–ª–æ–∂–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π":
        bot.send_document(message.chat.id, open("files/dtk/–∑–∞—è–≤–∫–∏ –≤–æ–∑–ª–æ–∂–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π.docx", 'rb'))
        bot.send_document(message.chat.id, open("files/dtk/–∑–∞—è–≤–∫–∏ –≤–æ–∑–ª–æ–∂–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π.pdf", 'rb'))
    elif message_text == "–ó–∞—è–≤–∫–∏ –Ω–∞ –æ—Ç–ø—É—Å–∫":
        bot.send_document(message.chat.id, open("files/dtk/–∑–∞—è–≤–∫–∏ –Ω–∞ –æ—Ç–ø—É—Å–∫.docx", 'rb'))
        bot.send_document(message.chat.id, open("files/dtk/–∑–∞—è–≤–∫–∏ –Ω–∞ –æ—Ç–ø—É—Å–∫.pdf", 'rb'))
    elif message_text == "–ö–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∏":
        bot.send_document(message.chat.id, open("files/dtk/–ê–≤–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç.pptx", 'rb'))
        bot.send_document(message.chat.id, open("files/dtk/–∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∞.pptx", 'rb'))
    elif message_text == "–ü–µ—Ä–µ–≤–æ–¥—ã":
        bot.send_document(message.chat.id, open("files/dtk/–ü–µ—Ä–µ–≤–æ–¥—ã.docx", 'rb'))
        bot.send_document(message.chat.id, open("files/dtk/–ü–µ—Ä–µ–≤–æ–¥—ã.pdf", 'rb'))
    elif message_text == "–ü–æ—Ä—è–¥–æ–∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∏":
        bot.send_document(message.chat.id, open("files/dtk/–ü–æ—Ä—è–¥–æ–∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∏.docx", 'rb'))
        bot.send_document(message.chat.id, open("files/dtk/–ü–æ—Ä—è–¥–æ–∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∏.pdf", 'rb'))
    elif message_text == "–†–∞—Å—Å—Ç–æ—Ä–∂–µ–Ω–∏–µ –¢–î":
        bot.send_document(message.chat.id, open("files/dtk/–†–∞—Å—Å—Ç–æ—Ä–∂–µ–Ω–∏–µ –¢–î.docx", 'rb'))
        bot.send_document(message.chat.id, open("files/dtk/–†–∞—Å—Å—Ç–æ—Ä–∂–µ–Ω–∏–µ –¢–î.pdf", 'rb'))


def performer_text(appeal_info):
    performer_info = performerClass.get_performer_by_id(appeal_info[7])[0]
    text = f"<b>ID</b> {appeal_info[0]}\n\n" \
           f" –°—Ç–∞—Ç—É—Å: {str(appeal_info[2])}\n" \
           f" –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {str(appeal_info[5])}\n" \
           f" –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {str(appeal_info[3])}\n" \
           f" –¢–µ–∫—Å—Ç: {str(appeal_info[4])}\n" \
           f" –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {str(appeal_info[6])}\n\n" \
           f"–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å\n" \
           f" –§–ò–û: {performer_info[4]} {performer_info[3]}\n" \
           f" –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {performer_info[5]}\n" \
           f" Email: {performer_info[6]}\n" \
           f" Telegram: {performer_info[7]}\n\n" \
           f" –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {str(appeal_info[8])}"
    return text

def call_back(bot, call):
    user_id = call.from_user.id
    response = call.data  # Assuming the response comes through call.data

    if str(user_id) in sapa_admin and response.startswith(('–ø–æ—Å—Ç', '–ø–æ—Å—Ç1', '–æ—Ç–∑—ã–≤', '–Ω–∏—á–µ–≥–æ')):
        try:
            parts = response.split(' ')
            if len(parts) == 2 and parts[1].isdigit():
                link_type = parts[0].lower()
                link_id = parts[1]

                # –£–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
                try:
                    bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=None)
                except Exception as e:
                    bot.send_message(call.message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–æ–∫: {e}")

                bonus_points = {
                    "–ø–æ—Å—Ç": 500,
                    "–ø–æ—Å—Ç1": 1000,
                    "–æ—Ç–∑—ã–≤": 1000,
                    "–Ω–∏—á–µ–≥–æ": 0
                }
                new_bonus_score = bonus_points.get(link_type, 0)

                # Retrieve email and link
                link_result = db_connect.execute_get_sql_query(
                    "SELECT email, link FROM sapa_link WHERE id = %s", (link_id,)
                )
                if link_result:
                    email, link = link_result[0]

                    if email:
                        email = email.strip()
                    else:
                        email = get_user_email(user_id)

                    # Update link status
                    db_connect.execute_set_sql_query("""
                        UPDATE sapa_link 
                        SET is_checked = TRUE, status = %s 
                        WHERE id = %s
                    """, (link_type, link_id))

                    # Award points to the user
                    db_connect.execute_set_sql_query("""
                        UPDATE sapa_bonus 
                        SET bonus_score = bonus_score + %s, total_score = total_score + %s 
                        WHERE email = %s
                    """, (new_bonus_score, new_bonus_score, email))

                    bot.send_message(call.message.chat.id,
                                     f"–°—Å—ã–ª–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞. –£—á–∞—Å—Ç–Ω–∏–∫—É –Ω–∞—á–∏—Å–ª–µ–Ω–æ {new_bonus_score} –±–∞–ª–ª–æ–≤ –∑–∞ —Ç–∏–ø '{link_type}'!")

                    user_result = db_connect.execute_get_sql_query(
                        "SELECT id FROM users WHERE email = %s", (email,)
                    )

                    if user_result:
                        user_chat_id = user_result[0][0]

                        # Extract bonus and total score for the user
                        score_result = db_connect.execute_get_sql_query(
                            """
                            SELECT sb.bonus_score, sb.total_score 
                            FROM sapa_bonus sb
                            JOIN sapa_link sl ON sb.email = sl.email
                            WHERE sl.id = %s
                            """,
                            (link_id,)
                        )

                        if score_result:
                            bonus_score = new_bonus_score
                            total_score = score_result[0][1]

                            message = (
                                f"–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –±—ã–ª–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞.\n"
                                f"–ë–æ–Ω—É—Å–Ω—ã–µ –±–∞–ª–ª—ã –∑–∞ —ç—Ç—É —Å—Å—ã–ª–∫—É: {bonus_score}\n"
                                f"–û–±—â–∏–π —Å—á—ë—Ç: {total_score}"
                            )
                            bot.send_message(user_chat_id, message)
                            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
                            markup.add(
                                # types.KeyboardButton('–±–æ–Ω—É—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ SAPA+'),
                                       types.KeyboardButton('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Ç–æ—á–∫–∏ –ø–µ—Ä–µ–¥–∞—á–∏'))

                            msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –¥–µ–π—Å—Ç–≤–∏–π:", reply_markup=markup)
                            bot.register_next_step_handler(msg, sapa_con, bot)
                        else:
                            bot.send_message(user_chat_id, "–ë–æ–Ω—É—Å–Ω—ã–µ –±–∞–ª–ª—ã –∏ –æ–±—â–∏–π —Å—á—ë—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
                            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
                            markup.add(
                                # types.KeyboardButton('–±–æ–Ω—É—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ SAPA+'),
                                       types.KeyboardButton('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Ç–æ—á–∫–∏ –ø–µ—Ä–µ–¥–∞—á–∏'))

                            msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –¥–µ–π—Å—Ç–≤–∏–π:", reply_markup=markup)
                            bot.register_next_step_handler(msg, sapa_con, bot)
                    else:
                        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
                        markup.add(
                            # types.KeyboardButton('–±–æ–Ω—É—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ SAPA+'),
                                   types.KeyboardButton('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Ç–æ—á–∫–∏ –ø–µ—Ä–µ–¥–∞—á–∏'))

                        msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –¥–µ–π—Å—Ç–≤–∏–π:", reply_markup=markup)
                        bot.register_next_step_handler(msg, sapa_con, bot)
                else:
                    bot.send_message(call.message.chat.id, "–û—à–∏–±–∫–∞: —Å—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
                    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
                    markup.add(
                        # types.KeyboardButton('–±–æ–Ω—É—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ SAPA+'),
                               types.KeyboardButton('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Ç–æ—á–∫–∏ –ø–µ—Ä–µ–¥–∞—á–∏'))

                    msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –¥–µ–π—Å—Ç–≤–∏–π:", reply_markup=markup)
                    bot.register_next_step_handler(msg, sapa_con, bot)
            else:
                bot.send_message(call.message.chat.id,
                                 "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å—Å—ã–ª–∫–∏ –∏ —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—Å—ã–ª–∫–∏.")
        except Exception as e:
            bot.send_message(call.message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}")


    elif call.data == '–ù–∞—á–∏–Ω–∞–µ–º!':
        cm_sv_db(call.message, '–ù–∞—á–∏–Ω–∞–µ–º!')
        time.sleep(0.75)
        bold_text = ("–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ—Å—å —Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –î–∏—Ä–µ–∫—Ü–∏–∏ ¬´–¢–µ–ª–µ–∫–æ–º –ö–æ–º–ø–ª–µ–∫—Ç¬ª, —á—Ç–æ "
                     "–ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å, –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç –Ω–∞—à–∞ –¥–∏—Ä–µ–∫—Ü–∏—è –∏ –∫–∞–∫–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –≤ –Ω–µ–µ –≤—Ö–æ–¥—è—Ç.")
        markup_callback = types.InlineKeyboardMarkup()
        button_callback = types.InlineKeyboardButton("–î–∞–ª–µ–µ", callback_data="–î–∞–ª–µ–µ–ò—Å—Ç–æ—Ä–∏—è")
        markup_callback.add(button_callback)
        bot.send_message(call.message.chat.id, bold_text, parse_mode='HTML')
        bot.send_photo(call.message.chat.id, photo=open('images/–û—Ä–≥.—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –î–¢–ö.jpg', 'rb'),
                       reply_markup=markup_callback)
    elif call.data == '–î–∞–ª–µ–µ–ò—Å—Ç–æ—Ä–∏—è':
        bot.send_message(call.message.chat.id, '–ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π —Ñ–∏–ª–∏–∞–ª–∞ –î–¢–ö. '
                                               '–¢–∞–∫–∂–µ —É–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ –æ —Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏, —Ä–∞–∑–≤–∏—Ç–∏–∏ –∏ '
                                               '–¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö –Ω–∞ —ç—Ç–æ–º –ø—É—Ç–∏.')
        time.sleep(0.75)
        markup_callback = types.InlineKeyboardMarkup()
        button_callback = types.InlineKeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º", callback_data="–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º")
        markup_callback.add(button_callback)
        bot.send_photo(call.message.chat.id, photo=open('images/–±–∞–Ω–Ω–µ—Ä –ò–°–¢–û–†–ò–Ø –î–¢–ö.png', 'rb'),
                       reply_markup=markup_callback)
    elif call.data == '–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º':
        markup_callback = types.InlineKeyboardMarkup()
        button_callback = types.InlineKeyboardButton("–î–∞–ª–µ–µ", callback_data="–î–∞–ª–µ–µ–ü—Ä–æ—Ü–µ—Å—Å—ã")
        markup_callback.add(button_callback)
        bot.send_message(call.message.chat.id, '<b>–¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã</b>\n\n'
                                               '–í –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã: –∫–∞–Ω—Ü–µ–ª—è—Ä–∏—è, '
                                               '—Ä–µ–∫—Ä—É—Ç–∏–Ω–≥, –∫–∞–¥—Ä–æ–≤–æ–µ –¥–µ–ª–æ–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ, –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã, '
                                               '–∑–∞–∫—É–ø–æ—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞.\n\n'
                                               '–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –ø–æ –∫–∞–¥—Ä–æ–≤—ã–º –≤–æ–ø—Ä–æ—Å–∞–º:\n'
                                               '–ü–µ—Ä–µ–≤–æ–¥\n'
                                               '–û—Ç–ø—É—Å–∫\n'
                                               '–ö–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∞\n'
                                               '–†–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏–µ —Ç—Ä—É–¥–æ–≤–æ–≥–æ –¥–æ–≥–æ–≤–æ—Ä–∞\n'
                                               '–ó–∞—è–≤–∫–∞ –Ω–∞ —Å–ø—Ä–∞–≤–∫—É —Å –º–µ—Å—Ç–∞ —Ä–∞–±–æ—Ç—ã\n\n'
                                               '–í—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ "–î–¢–ö –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"',
                         reply_markup=markup_callback)
    elif call.data == '–î–∞–ª–µ–µ–ü—Ä–æ—Ü–µ—Å—Å—ã':
        markup_callback = types.InlineKeyboardMarkup()
        button_callback = types.InlineKeyboardButton("–î–∞–ª–µ–µ", callback_data="–î–∞–ª–µ–µ–î–æ—Å—É–≥")
        markup_callback.add(button_callback)
        bot.send_message(call.message.chat.id, '–í –î–¢–ö –µ—Å—Ç—å —Å–≤–æ—è —Ñ—É—Ç–±–æ–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞, –Ω–µ–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω—ã–π –ø–æ–±–µ–¥–∏—Ç–µ–ª—å —Ç—É—Ä–Ω–∏—Ä–æ–≤ '
                                               '–ø–æ —Ñ—É—Ç–±–æ–ª—É —Å—Ä–µ–¥–∏ –∫–æ–º–∞–Ω–¥ —Ñ–∏–ª–∏–∞–ª–æ–≤, –∫–æ–º–ø–∞–Ω–∏–π —Ñ–æ–Ω–¥–∞ ¬´–°–∞–º—Ä—É–∫-–ö–∞–∑—ã–Ω–∞¬ª. ')
        bot.send_photo(call.message.chat.id, open('images/—Ñ—É—Ç–±–æ–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.jpeg', 'rb'))
        bot.send_photo(call.message.chat.id, open('images/—Ñ—É—Ç–±–æ–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞1.jpeg', 'rb'))
        bot.send_message(call.message.chat.id, '–¢–∞–∫–∂–µ –Ω–∞—à–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ —É—á–∞—Å—Ç–≤—É—é—Ç –≤ —Ç–µ–Ω–Ω–∏—Å–Ω—ã—Ö —Ç—É—Ä–Ω–∏—Ä–∞—Ö.\n'
                                               '–í –∏—é–Ω–µ 2023 –≥–æ–¥–∞ –º—ã –ø—Ä–æ–≤–µ–ª–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ, –ø–æ—Å–≤—è—â–µ–Ω–Ω–æ–µ 25-–ª–µ—Ç–∏—é –î–¢–ö.',
                         reply_markup=markup_callback)
    elif call.data == '–î–∞–ª–µ–µ–î–æ—Å—É–≥':
        bot.send_message(call.message.chat.id, '<b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã</b>')
        bot.send_message(call.message.chat.id, '<b>–°—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏:</b>\n'
                                               'üì∞Telegram –î–¢–ö –Ω–æ–≤–æ—Å—Ç–∏: https://t.me/+4bTQUYHNwdY4NDk6\n'
                                               'üó£–¢–µ–ª–µ–≥—Ä–∞–º–º –î–¢–ö c“±—Ö–±–∞—Ç: https://t.me/+cgmlfGmotxM2NzZi\n'
                                               'üìòFacebook: https://www.facebook.com/profile.php?'
                                               'id=100080229919711&mibextid=LQQJ4d')
        bot.send_message(call.message.chat.id, '<b>–°—Å—ã–ª–∫–∏ –Ω–∞ –≤–µ–±-—Ä–µ—Å—É—Ä—Å—ã:</b>\n'
                                               'üìä–°–∏—Å—Ç–µ–º–∞ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π '
                                               'http://bsc.telecom.kz/site/login\n'
                                               'üåê–≠–∫–æ —Å–∏—Å—Ç–µ–º–∞ –ê–û ¬´–ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º¬ª '
                                               'https://portal.telecom.kz/')
        bot.send_message(call.message.chat.id, "–ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –≤–≤–µ–¥–∏—Ç–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É \n/menu")
    elif call.data == '–†–∞—Å—Å–∫–∞–∑—ã–≤–∞–π!':
        cm_sv_db(call.message, '–†–∞—Å—Å–∫–∞–∑—ã–≤–∞–π!')
        send_photo_(bot, call.message.chat.id, 'images/picture.jpg')
        time.sleep(0.75)
        markup_callback = types.InlineKeyboardMarkup()
        button_callback = types.InlineKeyboardButton("–ü–æ–Ω—è—Ç–Ω–æ", callback_data="–ü–æ–Ω—è—Ç–Ω–æ")
        markup_callback.add(button_callback)
        bot.send_message(call.message.chat.id, "–£ –º–µ–Ω—è –µ—Å—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞‚å®Ô∏è, –ø–æ–ª—å–∑—É—è—Å—å –∫–æ—Ç–æ—Ä–æ–π —Ç—ã –º–æ–∂–µ—à—å –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –ø–æ "
                                               "—Ä–∞–∑–¥–µ–ª–∞–º –∏ –ø–æ–ª—É—á–∞—Ç—å –Ω—É–∂–Ω—É—é –¥–ª—è —Ç–µ–±—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é",
                         reply_markup=markup_callback)
    elif call.data == "–ü–æ–Ω—è—Ç–Ω–æ":
        send_photo_(bot, call.message.chat.id, 'images/hello.jpg')
        time.sleep(0.75)
        markup_callback = types.InlineKeyboardMarkup()
        button_callback = types.InlineKeyboardButton("–ü–æ–µ—Ö–∞–ª–∏!", callback_data="–ü–æ–µ—Ö–∞–ª–∏!")
        markup_callback.add(button_callback)
        bot.send_message(call.message.chat.id, "–ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µüëáüèª –∏ –º—ã –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º.", reply_markup=markup_callback)
    elif call.data == "–ü–æ–µ—Ö–∞–ª–∏!":
        bot.send_photo(call.message.chat.id, photo=open('images/kaztelecom_credo.jpeg', 'rb'))
        time.sleep(0.75)
        bot.send_message(call.message.chat.id, "AO '–ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º' - —ç—Ç–æ –∫—Ä—É–ø–Ω–µ–π—à–∞—è —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è "
                                               "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞,  –æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω–∞—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ c –ø–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º –ö–∞–±–∏–Ω–µ—Ç–∞ "
                                               "–ú–∏–Ω–∏—Å—Ç—Ä–æ–≤ –†–µ—Å–ø—É–±–ª–∏–∫–∏\\–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω –æ—Ç 17 –∏—é–Ω—è 1994 –≥–æ–¥–∞.\n\nüìå–£ –Ω–∞—Å –µ—Å—Ç—å "
                                               "–∫—Ä–∞—Ç–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è o –∫–æ–º–ø–∞–Ω–∏–∏, –∫–æ—Ç–æ—Ä—É—é –º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è."
                                               "–ü—Ä–æ—Å—Ç–æ –æ—Ç–∫—Ä–æ–π —Ñ–∞–π–ª—ã –Ω–∏–∂–µ –∏ –æ–∑–Ω–∞–∫–æ–º—å—Å—è c –Ω–µ–π.")
        bot.send_document(call.message.chat.id, open('images/PDF-1.jpg', 'rb'))
        bot.send_document(call.message.chat.id, open('images/PDF-2.jpg', 'rb'))
        time.sleep(0.75)
        markup_callback = types.InlineKeyboardMarkup()
        button_callback = types.InlineKeyboardButton("–î–∞, –¥–∞–≤–∞–π!", callback_data="–î–∞, –¥–∞–≤–∞–π!")
        markup_callback.add(button_callback)
        bot.send_message(call.message.chat.id, "–ï—Å–ª–∏ –≤—Å–µ –ø–æ–Ω—è—Ç–Ω–æ, —Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º?", reply_markup=markup_callback)
    elif call.data == "–î–∞, –¥–∞–≤–∞–π!":
        bot.send_message(call.message.chat.id, "–£ —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å –ë–∞–¥–¥–∏?üòÅ")
        time.sleep(0.75)
        bot.send_message(call.message.chat.id, "–ï—Å–ª–∏ –µ—â–µ –Ω–µ—Ç, –Ω–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è, –æ–Ω –Ω–∞–π–¥–µ—Ç —Ç–µ–±—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!")
        time.sleep(0.75)
        markup_callback = types.InlineKeyboardMarkup()
        button_callback = types.InlineKeyboardButton("–î–∞, —Ö–æ—á—É —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ!", callback_data="–î–∞, —Ö–æ—á—É —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ!")
        markup_callback.add(button_callback)
        bot.send_message(call.message.chat.id, "–¢—ã —Å–ø—Ä–æ—Å–∏—à—å, a –∫—Ç–æ —ç—Ç–æ –∏ –¥–ª—è —á–µ–≥–æ –æ–Ω –º–Ω–µ –Ω—É–∂–µ–Ω? –û—Ç–≤–µ—á–∞—é)",
                         reply_markup=markup_callback)
    elif call.data == "–î–∞, —Ö–æ—á—É —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ!":
        bot.send_photo(call.message.chat.id, photo=open('images/Buddy-1.jpg', 'rb'))
        time.sleep(0.75)
        bot.send_photo(call.message.chat.id, photo=open('images/Buddy-2.jpg', 'rb'))
        time.sleep(0.75)
        bot.send_message(call.message.chat.id, "–¢–∞–∫ —á—Ç–æ, –ø—Ä–æ–≤–µ—Ä—å —Å–≤–æ–π –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π e-–º—ç–π–ª, –≤–æ–∑–º–æ–∂–Ω–æ —Ç–µ–±–µ —É–∂–µ –ø—Ä–∏—à–ª–æ "
                                               "—Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –¢–≤–æ–µ–≥–æ –ë–∞–¥–¥–∏ c –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è, –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –∏ "
                                               "—Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å o –ø—Ä–æ–≥—Ä–∞–º–º–µ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –≤ –Ω–∞—à–µ–π –ö–æ–º–ø–∞–Ω–∏–∏.")
        time.sleep(0.75)
        markup_callback = types.InlineKeyboardMarkup()
        button_callback = types.InlineKeyboardButton("–ü—Ä–∏–Ω—è—Ç–æ!", callback_data="–ü—Ä–∏–Ω—è—Ç–æ!")
        markup_callback.add(button_callback)
        bot.send_photo(call.message.chat.id, photo=open('images/Buddy-3.jpg', 'rb'), reply_markup=markup_callback)
    elif call.data == "–ü—Ä–∏–Ω—è—Ç–æ!":
        bot.send_message(call.message.chat.id,
                         "–û–±—ã—á–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –¥–ª–∏—Ç—Å—è –º–µ—Å—è—Ü, –Ω–æ –Ω–µ—Ä–µ–¥–∫–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –¥–æ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è "
                         "–∏—Å–ø—ã—Ç–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å—Ä–æ–∫–∞.")
        time.sleep(0.75)
        bot.send_message(call.message.chat.id,
                         "–ö—Å—Ç–∞—Ç–∏, —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ø—Ä–æ–≥—Ä–∞–º–º—ã –ë–∞–¥–¥–∏ –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –ª—é–±–æ–≥–æ –æ—Ç–¥–µ–ª–∞, –∏ —ç—Ç–æ –∑–¥–æ—Ä–æ–≤–æ - "
                         "—Ä–∞—Å—à–∏—Ä—è—é—Ç—Å—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ –∏ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∏.")
        time.sleep(0.75)
        markup_callback = types.InlineKeyboardMarkup()
        button_callback = types.InlineKeyboardButton("–ö—Ä—É—Ç–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–∞–ª—å—à–µ!",
                                                     callback_data="–ö—Ä—É—Ç–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–∞–ª—å—à–µ!")
        markup_callback.add(button_callback)
        bot.send_message(call.message.chat.id,
                         "–ü–æ–∑–∂–µ –∏ –¢—ã —Ç–æ–∂–µ –º–æ–∂–µ—à—å —Å—Ç–∞—Ç—å –ë–∞–¥–¥–∏ –∏ –ø–æ–º–æ–≥–∞—Ç—å –±—É–¥—É—â–∏–º –Ω–æ–≤–∏—á–∫–∞–º –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è! üòä",
                         reply_markup=markup_callback)
    elif call.data == "–ö—Ä—É—Ç–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–∞–ª—å—à–µ!":
        markup_callback = types.InlineKeyboardMarkup()
        button_callback = types.InlineKeyboardButton("–î–∞–ª–µ–µ", callback_data="–î–∞–ª–µ–µ-1")
        markup_callback.add(button_callback)
        bot.send_photo(call.message.chat.id, photo=open('images/credo_1.jpeg', 'rb'), reply_markup=markup_callback)
    elif call.data == "–î–∞–ª–µ–µ-1":
        bot.send_message(call.message.chat.id, "–ù–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 9 —Ñ–∏–ª–∏–∞–ª–æ–≤ "
                                               "–∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—ã –∫–æ—Ç–æ—Ä—ã—Ö —Ç—ã —Ç–æ—á–Ω–æ –±—É–¥–µ—à—å —Å–ª—ã—à–∞—Ç—å –≤ —Ä–∞–±–æ—Ç–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.")
        time.sleep(0.75)
        bot.send_message(call.message.chat.id, "–ü–æ—ç—Ç–æ–º—É –¥–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è co —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –∫–æ–º–ø–∞–Ω–∏–∏.")
        time.sleep(0.75)
        bot.send_document(call.message.chat.id, open('images/struct.jpg', 'rb'))
        time.sleep(0.75)
        bot.send_message(call.message.chat.id,
                         "A –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ —Ç—ã —Å—Ç–æ–ª–∫–Ω–µ—à—å—Å—è c –Ω–µ–∑–Ω–∞–∫–æ–º—ã–º–∏ –¥–ª—è —Ç–µ–±—è"
                         " —Ç–µ—Ä–º–∏–Ω–∞–º–∏ –∏–ª–∏ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä–∞–º–∏, —Ç–æ –º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –¥–ª—è —Ç–µ–±—è –≥–ª–æ—Å—Å–∞—Ä–∏–π –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π.")
        time.sleep(0.75)
        bot.send_message(call.message.chat.id, "–ë–∞–∑—É –∑–Ω–∞–Ω–∏–π —Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.")
        time.sleep(0.75)
        markup_callback = types.InlineKeyboardMarkup()
        button_callback = types.InlineKeyboardButton("–î–∞–ª–µ–µ", callback_data="–î–∞–ª–µ–µ-3")
        markup_callback.add(button_callback)
        bot.send_photo(call.message.chat.id, photo=open('images/gloss.jpg', 'rb'), reply_markup=markup_callback)
    elif call.data == "–î–∞–ª–µ–µ-3":
        bot.send_message(call.message.chat.id,
                         'B –∫–æ–º–ø–∞–Ω–∏–∏ AO "–ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º" –µ—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ —Ä–∞–∑–Ω—ã–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º:\
                         \nüåç–ò–Ω—Çep–Ωe—Ç\nüìûTe–ªe—Ño–Ω–∏—è\nüìπB–∏–¥eo–Ωab–ª—é–¥e–Ω–∏e\nüñ•Ô∏èTV+\nüõçÔ∏èMara–∑–∏–Ω shop.telecom.kz')
        time.sleep(0.75)
        markup_callback = types.InlineKeyboardMarkup()
        button_callback = types.InlineKeyboardButton("–î–∞–ª–µ–µ", callback_data="–î–∞–ª–µ–µ-4")
        markup_callback.add(button_callback)
        bot.send_message(call.message.chat.id,
                         "–ê–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∞–º –∏ –∏—Ö —Ç–∞—Ä–∏—Ñ–∞–º —Ç—ã –≤—Å–µ–≥–¥–∞ —Å–º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç–µ telecom.kz",
                         reply_markup=markup_callback)
    elif call.data == "–î–∞–ª–µ–µ-4":
        markup_callback = types.InlineKeyboardMarkup()
        button_callback = types.InlineKeyboardButton("–î–∞–ª–µ–µ", callback_data="–î–∞–ª–µ–µ-5")
        markup_callback.add(button_callback)
        bot.send_photo(call.message.chat.id, photo=open('images/dear_users.jpeg', 'rb'), reply_markup=markup_callback)
    elif call.data == "–î–∞–ª–µ–µ-5":
        bot.send_message(call.message.chat.id, "‚òéÔ∏èB AO '–ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º' –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≥–æ—Ä—è—á–∞—è –ª–∏–Ω–∏—è ¬´–ù—ã—Å–∞–Ω–∞¬ª, "
                                               "–∫—É–¥–∞ –∫–∞–∂–¥—ã–π —Ä–∞–±–æ—Ç–Ω–∏–∫ —Å–º–æ–∂–µ—Ç –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º QR-–∫–æ–¥–∞ "
                                               "–∏–ª–∏ –ø–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º –Ω–∏–∂–µ –≤ –∫–∞—Ä—Ç–∏–Ω–∫–µ")
        time.sleep(0.75)
        markup_callback = types.InlineKeyboardMarkup()
        button_callback = types.InlineKeyboardButton("–î–∞–ª–µ–µ", callback_data="–î–∞–ª–µ–µ-6")
        markup_callback.add(button_callback)
        bot.send_photo(call.message.chat.id, photo=open('images/call_center.jpeg', 'rb'), reply_markup=markup_callback)
    elif call.data == "–î–∞–ª–µ–µ-6":
        bot.send_message(call.message.chat.id, "–û—Ç–ª–∏—á–Ω–æ! \nM—ã c —Ç–æ–±–æ–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å c –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π o –∫–æ–º–ø–∞–Ω–∏–∏.\
                                             \n\nT—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–∞–∑–æ–π –∑–Ω–∞–Ω–∏–π –∏–ª–∏ —Ä–∞–∑–¥–µ–ª–æ–º —á–∞—Å—Ç–æ "
                                               "–∑–∞–¥–∞–≤–∞–µ–º—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –±–æ—Ç–∞.")
        time.sleep(0.75)
        markup_callback = types.InlineKeyboardMarkup()
        button_callback = types.InlineKeyboardButton("–ü–æ–Ω—è—Ç–Ω–æ!", callback_data="–ü–æ–Ω—è—Ç–Ω–æ!")
        markup_callback.add(button_callback)
        bot.send_photo(call.message.chat.id, photo=open('images/picture.jpg', 'rb'), reply_markup=markup_callback)
    elif call.data == "–ü–æ–Ω—è—Ç–Ω–æ!":
        cm_sv_db(call.message, 'Welcome –∫—É—Ä—Å | –ê–¥–∞–ø—Ç–∞—Ü–∏—è end')
        bot.send_message(call.message.chat.id, "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é!\nT—ã –ø—Ä–æ—à–µ–ª Welcome –∫—É—Ä—Å.\n\n–îo–±po –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º–ø–∞–Ω–∏—é!."
                                               "\n–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤—Å—é –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, "
                                               "–Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π —Ä–∞–±–æ—Ç—ã.")
        bot.send_document(call.message.chat.id,
                          document=open("files/–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ 2 –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–û –ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º.pptx", 'rb'))
        time.sleep(0.75)
        if get_branch(call.message.chat.id) == "–î–∏—Ä–µ–∫—Ü–∏—è –¢–µ–ª–µ–∫–æ–º –ö–æ–º–ø–ª–µ–∫—Ç":
            markup_dtk = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            button_dtk = types.KeyboardButton("Welcome –∫—É—Ä—Å | –ê–¥–∞–ø—Ç–∞—Ü–∏—è –î–¢–ö")
            markup_dtk.add(button_dtk)
            bot.send_message(call.message.chat.id, "–ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –≤–≤–µ–¥–∏—Ç–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É "
                                                   "\n/menu "
                                                   "\n\n –ò–ª–∏ –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é "
                                                   "'Welcome –∫—É—Ä—Å | –ê–¥–∞–ø—Ç–∞—Ü–∏—è –î–¢–ö'",
                             reply_markup=markup_dtk)
        bot.send_message(call.message.chat.id, "–ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –≤–≤–µ–¥–∏—Ç–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É \n/menu")
    elif call.data == "checkPoint":
        markup_p = types.InlineKeyboardMarkup()
        button_p1 = types.InlineKeyboardButton("iOS", callback_data="iOS")
        button_p2 = types.InlineKeyboardButton("Android", callback_data="Android")
        markup_p.add(button_p1, button_p2)
        bot.send_message(str(call.message.chat.id), "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_p)
    elif call.data == portal_[5]:
        markup_p = types.InlineKeyboardMarkup()
        button_p1 = types.InlineKeyboardButton(text="–°—Å—ã–ª–∫–∞ –Ω–∞ App Store",
                                               url="https://apps.apple.com/ru/app/check-point-capsule-connect/"
                                                   "id506669652")
        markup_p.add(button_p1)
        bot.send_message(str(call.message.chat.id),
                         "–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é checkpoint –Ω–∞ iOS\nhttps://youtu.be/giK26_GgVgE ",
                         reply_markup=markup_p)
    elif call.data == portal_[6]:
        markup_p = types.InlineKeyboardMarkup()
        button_p2 = types.InlineKeyboardButton(text="–°—Å—ã–ª–∫–∞ –Ω–∞ PlayMarket",
                                               url="https://play.google.com/store/apps/details?id=com.checkpoint."
                                                   "VPN&hl=en&gl=US&pli=1")
        markup_p.add(button_p2)
        bot.send_message(str(call.message.chat.id),
                         "–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é checkpoint –Ω–∞ Android\nhttps://youtu.be/KjL9tpunb4U",
                         reply_markup=markup_p)
    elif call.data == "abbr":
        msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—É")
        bot.register_next_step_handler(msg, get_abbr, bot)
    elif str(call.data).isdigit():
        appeal_id = str(call.data)
        appeal_info = get_appeal_by_id(appeal_id)[0]
        image_data = get_image_data(appeal_id)
        try:
            bot.send_photo(appeal_info[1], image_data)
        except:
            print("error")
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton('–ù–∞–ø–∏—Å–∞—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é', callback_data=str(appeal_info[0]) + 'texting')
        text = performer_text(appeal_info)
        if appeal_info[12] != "" and appeal_info[12] is not None and appeal_info[12] != " ":
            if db_connect.get_sale(appeal_info[12])[10] == "–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ":
                button_ = types.InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –º–æ–¥–µ–º | —Å–∏–º–∫–∞—Ä—Ç—É",
                                                     callback_data=str(appeal_info[12]) + "add_modem")
                button_1 = types.InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ê–∫—Ç–∞",
                                                      callback_data=str(appeal_info[12]) + "add_act")
                markup.add(button_, button_1)
                bot.send_message(call.message.chat.id, text, reply_markup=markup)
                return
        markup.add(btn)
        bot.send_message(call.message.chat.id, text, reply_markup=markup)
    elif extract_number(call.data, r'^(\d+)texting') is not None:
        appeal_id = extract_number(call.data, r'^(\d+)texting')
        msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π')
        bot.register_next_step_handler(msg, add_comment, bot, appeal_id, False)
    elif extract_text(call.data, r'^.*abbr_save$', 'abbr_save') is not None:
        text = extract_text(call.data, r'^.*abbr_save$', 'abbr_save')
        send_abbr(bot, call.message, text)
    elif extract_text(call.data, r'^.*abbr_add$', 'abbr_add') is not None:
        text = extract_text(call.data, r'^.*abbr_add$', 'abbr_add')
        msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—ã")
        bot.register_next_step_handler(msg, get_decoding, bot, text)
    elif extract_number(str(call.data), r'^(\d+)add_act') is not None:
        set_appeal_field(call.message, True)
        bot.send_message(call.message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∞–∫—Ç–∞")
    elif extract_number(str(call.data), r'^(\d+)add_modem') is not None:
        lte_id = extract_number(str(call.data), r'^(\d+)add_modem')
        msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä —Å–∏–º–∫–∞—Ä—Ç—ã")
        bot.register_next_step_handler(msg, get_simcard, bot, lte_id)
    elif extract_number(str(call.data), r'^(\d+)statusinprocess') is not None \
            or extract_number(str(call.data), r'^(\d+)statusdecided$') is not None:
        appeal_id = extract_number(str(call.data), r'^(\d+)statusinprocess')
        if appeal_id is None:
            appeal_id = extract_number(str(call.data), r'^(\d+)statusdecided$')
            set_status(appeal_id, "–†–µ—à–µ–Ω–æ")
        else:
            set_status(appeal_id, "–í –ø—Ä–æ—Ü–µ—Å—Å–µ")
        now = datetime.now() + timedelta(hours=5)
        now_updated = remove_milliseconds(now)
        set_date_status(appeal_id, str(now_updated))
        bot.send_message(call.message.chat.id, "–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω")
        admin_appeal_callback(call, bot, add_comment)
        appeal_info = get_appeal_by_id(appeal_id)[0]
        text = performer_text(appeal_info)
        bot.send_message(appeal_info[1], "–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω")
        image_data = get_image_data(appeal_id)
        try:
            bot.send_photo(appeal_info[1], image_data)
        except:
            print("error")
        bot.send_message(appeal_info[1], text)
        if get_status(appeal_id)[0][0] == "–†–µ—à–µ–Ω–æ":
            appeal_ = get_appeal_by_id(appeal_id)
            if appeal_[0][3] in get_regions():
                bot.send_message(appeal_info[1], "–í—ã—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –°–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ –∑–∞ —Å–æ–¥–µ–π—Ç–≤–∏–µ")
                return
            markup_callback = types.InlineKeyboardMarkup(row_width=5)
            for i in range(1, 6):
                callback_d = str(i) + "evaluation" + str(appeal_info[0])
                button_callback = types.InlineKeyboardButton(i, callback_data=callback_d)
                markup_callback.add(button_callback)
            bot.send_message(appeal_info[1], "–û—Ü–µ–Ω–∏—Ç–µ —Ä–µ—à–µ–Ω–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç 1 –¥–æ 5\n\n–ì–¥–µ 1 - –æ—á–µ–Ω—å –ø–ª–æ—Ö–æ, "
                                             "5 - –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ", reply_markup=markup_callback)
    elif extract_numbers_from_status_change_decided(str(call.data)) is not None:
        evaluation, appeal_id = extract_numbers_from_status_change_decided(str(call.data))
        set_evaluation(appeal_id, evaluation)
        bot.edit_message_text("–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à –æ—Ç–∑—ã–≤\n–í—ã –ø–æ–º–æ–≥–∞–µ—Ç–µ –Ω–∞–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ", call.message.chat.id,
                              call.message.message_id)
        bot.answer_callback_query(call.id)
    elif extract_number(str(call.data), r'^(\d+)lte') is not None:
        sale_id = extract_number(str(call.data), r'^(\d+)lte')
        appeal_id = db_connect.get_appeal_by_lte_id(sale_id)
        text = get_appeal_text_all(appeal_id)
        bot.send_message(call.message.chat.id, text)
    else:
        admin_appeal_callback(call, bot, add_comment)


def get_abbr(message, bot):
    markup = types.InlineKeyboardMarkup(row_width=1)
    button1 = types.InlineKeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—É", callback_data=message.text + "abbr_save")
    button2 = types.InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É", callback_data=message.text + "abbr_add")
    markup.add(button1, button2)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥", reply_markup=markup)


def send_abbr(bot, message, text):
    bot.send_message(message.chat.id, "–ê–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞, —Å–ø–∞—Å–∏–±–æ –í–∞–º –∑–∞ –ø–æ–º–æ—â—å")
    bot.send_message('6682886650', "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥–ª–æ—Å—Å–∞—Ä–∏—è\n" + text)


def get_decoding(message, bot, text):
    send_abbr(bot, message, text + " - " + message.text)


def add_comment(message, bot, appeal_id, isAdmin=True):
    if isAdmin:
        comment_ = '\n' + "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: "
    else:
        comment_ = '\n' + "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: "
    comment = str(get_comment(appeal_id)[0][0]) + comment_ + message.text
    set_comment(appeal_id, comment)
    appeal_info = get_appeal_by_id(appeal_id)[0]
    image_data = get_image_data(appeal_id)
    text = performer_text(appeal_info)
    performer_id = performerClass.get_performer_id_by_id(appeal_info[7])
    try:
        bot.send_photo(performer_id, image_data)
    except:
        print("error")
    if isAdmin:
        bot.send_message(appeal_info[1], text)
        bot.send_message(message.chat.id, "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–æ–±–∞–≤–ª–µ–Ω")
    else:
        bot.send_message(performer_id, text)
        bot.send_message(message.chat.id, "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–æ–±–∞–≤–ª–µ–Ω")


def appeal(bot, message, message_text):
    set_appeal_field(message, True)
    if message_text == "–ú–æ–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è":
        markup_a = appeal_inline_markup(message)
        if markup_a.keyboard:
            bot.send_message(message.chat.id, "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å—ã –≤–∞—à–∏—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π",
                             reply_markup=markup_a)
        else:
            bot.send_message(message.chat.id, "–¢—É—Ç –ø–æ–∫–∞ –ø—É—Å—Ç–æ, "
                                              "\n–Ω–æ –í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ –∏ –æ–Ω–æ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∑–¥–µ—Å—å")
    elif message_text == "–û—Å—Ç–∞–≤–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ":
        markup_ap = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
        button2_ap = types.KeyboardButton("–î–∞")
        markup_ap.add(button2_ap)
        profile(bot, message)
        bot.send_message(message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–µ—Ä–Ω–∞?", reply_markup=markup_ap)
    elif message_text == "–î–∞":
        if get_category_users_info(message) == '–ü–æ—Ä—Ç–∞–ª "–ë—ñ—Ä–ª—ñ–∫"':
            appeal(bot, message, "portal")
            return
        markup_ap = types.ReplyKeyboardMarkup(one_time_keyboard=True)
        markup_ap.add(types.KeyboardButton("–í–æ–ø—Ä–æ—Å –∫ EX"))
        markup_ap = generate_buttons(list(list_categories())[:4], markup_ap)
        markup_ap.add(types.KeyboardButton("–ó–∞–∫—É–ø–æ—á–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å"))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ–±—Ä–∞—â–µ–Ω–∏—è", reply_markup=markup_ap)
    elif message_text == "portal":
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ:')
    elif message_text == "–ó–∞–∫—É–ø–æ—á–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å":
        markup_a = types.ReplyKeyboardMarkup(one_time_keyboard=True)
        markup_a = generate_buttons(get_categories_by_parentcategory("–ó–∞–∫—É–ø–æ—á–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å"), markup_a)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_a)
    elif message_text == "–í–æ–ø—Ä–æ—Å –∫ EX":
        branch = get_branch(message.chat.id)
        set_category(message, message_text)
        if branch == '–û–±—å–µ–¥–∏–Ω–µ–Ω–∏–µ –î–∏–≤–∏–∑–∏–æ–Ω "–°–µ—Ç—å"':
            markup_a = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup_a = generate_buttons(get_subsubcategories_by_subcategory('–û–±—å–µ–¥–∏–Ω–µ–Ω–∏–µ –î–∏–≤–∏–∑–∏–æ–Ω "–°–µ—Ç—å"'), markup_a)
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω —Ñ–∏–ª–∏–∞–ª–∞", reply_markup=markup_a)
        else:
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ:')
    elif message_text in list_categories() or message_text in get_categories_by_parentcategory(
            "–ó–∞–∫—É–ø–æ—á–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å"):
        set_category(message, message.text)
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ:')
    elif message_text == "–î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ":
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é")
    elif message_text in get_subsubcategories_by_subcategory('–û–±—å–µ–¥–∏–Ω–µ–Ω–∏–µ –î–∏–≤–∏–∑–∏–æ–Ω "–°–µ—Ç—å"'):
        set_subsubcategory_users_info(message.chat.id, message_text)
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ:')
    elif message.photo:
        file_info: object = bot.get_file(message.photo[-1].file_id)
        file_url = 'https://api.telegram.org/file/bot{}/{}'.format(db_connect.TOKEN, file_info.file_path)
        file = requests.get(file_url)
        appeal_id = db_connect.get_last_appeal(message.chat.id)[0][0]
        appeal_ = get_appeal_by_id(appeal_id)[0]
        performer_id = performerClass.get_performer_by_id(str(appeal_[7]))[0][1]
        set_image_data(appeal_id, file)
        image_data = get_image_data(appeal_id)
        if performer_id is None or performer_id == '' or len(str(performer_id)) == 0:
            end_appeal_gmail(bot, message, appeal_id, file_url)
        else:
            bot.send_photo(performer_id, image_data)
            end_appeal(bot, message, appeal_id)
    elif message_text == "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –±–µ–∑ —Ñ–æ—Ç–æ":
        appeal_id = db_connect.get_last_appeal(message.chat.id)[0][0]
        appeal_ = get_appeal_by_id(appeal_id)[0]
        performer_id = performerClass.get_performer_by_id(appeal_[7])[0][1]
        if performer_id is None or performer_id == '' or len(str(performer_id)) == 0:
            end_appeal_gmail(bot, message, appeal_id)
        else:
            end_appeal(bot, message, appeal_id)
    elif get_appeal_field(message) and get_category_users_info(message) != ' ':
        now = datetime.now() + timedelta(hours=5)
        now_updated = remove_milliseconds(now)
        category = get_category_users_info(message)
        branch = get_branch(message.chat.id)
        subsubcategory = None
        if category == "–í–æ–ø—Ä–æ—Å –∫ EX":
            if branch == '–û–±—å–µ–¥–∏–Ω–µ–Ω–∏–µ –î–∏–≤–∏–∑–∏–æ–Ω "–°–µ—Ç—å"':
                subsubcategory = str(get_subsubcategory_users_info(message.chat.id)).strip()
                performer_ = get_performer_by_subsubcategory(subsubcategory)
                performer_id = performer_[0][0]
            else:
                performer_id = get_performer_by_category_and_subcategory(category, branch)[0][0]
        else:
            performer_id = get_performer_id_by_category(category)

        if performer_id is None or performer_id == '' or len(str(performer_id)) == 0:
            add_appeal_gmail(message.chat.id, category, message.text, now_updated)
        else:
            add_appeal(message.chat.id, "–û–±—Ä–∞—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ", category, message.text, now_updated,
                       now_updated, performer_id, ' ', False, None, branch, subsubcategory)
        markup_ap = types.ReplyKeyboardMarkup()
        button1_ap = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ")
        button2_ap = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –±–µ–∑ —Ñ–æ—Ç–æ")
        markup_ap.add(button2_ap, button1_ap)
        bot.send_message(message.chat.id, "–•–æ—Ç–µ–ª–∏ –ª–∏ –±—ã –≤—ã –¥–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∫ –≤–∞—à–µ–º—É –æ–±—Ä–∞—â–µ–Ω–∏—é?",
                         reply_markup=markup_ap)
    else:
        admin_appeal(bot, message, message_text)


def end_appeal(bot, message, appeal_id):
    category = appealsClass.get_category_by_appeal_id(appeal_id)[0][0]
    subsubcategory = str(get_subsubcategory_users_info(message.chat.id)).strip()
    if subsubcategory is not None and len(str(subsubcategory)) != 0:
        performer_id = get_performer_by_subsubcategory(subsubcategory)[0][1]
    else:
        if category == "–í–æ–ø—Ä–æ—Å –∫ EX":
            subcategory = get_branch(message.chat.id)
            performer_id = get_performer_by_category_and_subcategory(category, subcategory)[0][1]
        else:
            performer_id = get_performer_by_category(category=category)[1]
    text = get_appeal_text_all(appeal_id)
    bot.send_message(performer_id, text)
    bot.send_message(message.chat.id, "–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏—è –ø—Ä–∏–Ω—è—Ç–æ")
    clear_appeals(message)
    menu(bot, message)


def end_appeal_gmail(bot, message, appeal_id, file=None):
    appeal_ = get_appeal_by_id(appeal_id)[0]
    text = get_user_info(message.chat.id)
    appeal_text = f'{text} \n {get_appeal_text(appeal_id)}'
    send_gmails(appeal_text, appeal_[3], file)
    bot.send_message(str(message.chat.id), "–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")


def faq(bot, message):
    if message.text == "–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã":
        markup_faq = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
        button_d = types.KeyboardButton("–î–µ–º–µ—É")
        button_hr = types.KeyboardButton("–í–æ–ø—Ä–æ—Å—ã –∫ HR")
        button_1 = types.KeyboardButton("–í–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞–π–º–∞–º")
        button_p1 = types.KeyboardButton("–í–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞–∫—É–ø–æ—á–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")
        button_p2 = types.KeyboardButton("–í–æ–ø—Ä–æ—Å—ã –ø–æ –ø–æ—Ä—Ç–∞–ª—É –∑–∞–∫—É–ø–æ–∫")
        markup_faq.add(button_d, button_hr, button_1, button_p1, button_p2)
        bot.send_message(message.chat.id, "–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã",
                         reply_markup=markup_faq)
        time.sleep(0.75)
        bot.send_message(message.chat.id, "Ec–ª–∏ y Bac –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è/–∏–¥–µ–∏ –ø–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –Ω–æ–≤—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤ –∏–ª–∏ –æ—Ç–≤–µ—Ç–æ–≤ "
                                          "–Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –Ω–∞ info.ktcu@telecom.kz - –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ "
                                          "—Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏ —Å–≤—è–∂–µ–º—Å—è c –í–∞–º–∏.")
    elif message.text == "–î–µ–º–µ—É":
        markup_faq = types.ReplyKeyboardMarkup(one_time_keyboard=True)
        for key in faq_1:
            button_d = types.KeyboardButton(key)
            markup_faq.add(button_d)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–ø—Ä–æ—Å", reply_markup=markup_faq)
    elif message.text == "–í–æ–ø—Ä–æ—Å—ã –∫ HR":
        markup_faq = types.ReplyKeyboardMarkup(one_time_keyboard=True)
        for key in faq_2:
            button_hr = types.KeyboardButton(key)
            markup_faq.add(button_hr)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–ø—Ä–æ—Å", reply_markup=markup_faq)
    elif message.text == "–í–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞–π–º–∞–º":
        branch = get_branch(message.chat.id)
        if branch == "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ê–ø–ø–∞—Ä–∞—Ç":
            markup_faq = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
            markup_faq = generate_buttons(branches[1:], markup_faq)
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª–∏–∞–ª", reply_markup=markup_faq)
        elif branch in branches[1:]:
            bot.send_message(message.chat.id, f"–§–∏–ª–∏–∞–ª {branch}\n\n"
                                              "–í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞–π–º–∞–º –í—ã –º–æ–∂–µ—Ç–µ –∞–¥—Ä–µ—Å–æ–≤–∞—Ç—å –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–∞–º:")
            func_branch(bot, message, branch)
    elif message.text == "–í–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞–∫—É–ø–æ—á–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏":
        markup_faq = types.ReplyKeyboardMarkup(one_time_keyboard=True)
        for key in faq_procurement_activities:
            button_d = types.KeyboardButton(key)
            markup_faq.add(button_d)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–ø—Ä–æ—Å", reply_markup=markup_faq)
    elif message.text == "–í–æ–ø—Ä–æ—Å—ã –ø–æ –ø–æ—Ä—Ç–∞–ª—É –∑–∞–∫—É–ø–æ–∫":
        markup_faq = types.ReplyKeyboardMarkup(one_time_keyboard=True)
        for key in faq_procurement_portal:
            button_d = types.KeyboardButton(key)
            markup_faq.add(button_d)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–ø—Ä–æ—Å", reply_markup=markup_faq)
    else:
        func_branch(bot, message, message.text)


def func_branch(bot, message, message_text):
    if message_text == "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç":
        bot.send_message(message.chat.id, "–¢–∞—Å–ø–∞–µ–≤–∞ –ì—É–ª—å—à–∞—Ç –°–µ—Ä–∏–∫–∫–∞–ª–∏–µ–≤–Ω–∞\n–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–ª–æ–∫\n–ì–ª–∞–≤–Ω—ã–π –±—É—Ö–≥–∞–ª—Ç–µ—Ä\n"
                                          "–º–æ–±–∏–ª—å–Ω—ã–π +7-701-780-64-34")
    elif message_text == "–î–∏–≤–∏–∑–∏–æ–Ω –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–π":
        bot.send_message(message.chat.id, "–†—ã—Å–±–µ–∫–æ–≤ –ù—É—Ä–∫–µ–Ω –ê–ª—Ç—ã–Ω–±–∞–µ–≤–∏—á\n–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"
                                          "\n–í–µ–¥—É—â–∏–π —ç–∫–æ–Ω–æ–º–∏—Å—Ç\n—Ä–∞–±–æ—á–∏–π +7-727-398-91-53, –º–æ–±–∏–ª—å–Ω—ã–π +7-702-345-6292"
                                          "\n\n–î—É—Å–∞–ª–∏–µ–≤–∞ –ñ–∞–Ω–Ω–∞ –•–∞–±–∏–¥—É–ª–ª–∞–µ–≤–Ω–∞\n–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏ "
                                          "–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n–í–µ–¥—É—â–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç\n—Ä–∞–±–æ—á–∏–π +7-727-398-91-49, "
                                          "–º–æ–±–∏–ª—å–Ω—ã–π +7-777-181-8919")
    elif message_text == "–î–∏–≤–∏–∑–∏–æ–Ω –ø–æ –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–º—É –ë–∏–∑–Ω–µ—Å—É":
        bot.send_message(message.chat.id, "–£—Ä–∞–∑–±–∞–µ–≤ –ê–Ω—É–∞—Ä –¢–∞–ª“ì–∞—Ç“±–ª—ã\n–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–ª–æ–∫/–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç —ç–∫–æ–Ω–æ–º–∏–∫–∏ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤/"
                                          "–û—Ç–¥–µ–ª –±—é–¥–∂–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∫–∞–∑–Ω–∞—á–µ–π—Å—Ç–≤–∞\n–í–µ–¥—É—â–∏–π —ç–∫–æ–Ω–æ–º–∏—Å—Ç\n"
                                          "—Ä–∞–±–æ—á–∏–π +7-727-244-70-54 –º–æ–±–∏–ª—å–Ω—ã–π +7-747-106-37-63\n\n"
                                          "–ó–∏–Ω–µ–ª–æ–≤ ”ò–¥—ñ–ª–µ—Ç –ú–∞—Ä–∞—Ç“±–ª—ã\n–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–ª–æ–∫/–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç —ç–∫–æ–Ω–æ–º–∏–∫–∏ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤/"
                                          "–û—Ç–¥–µ–ª –±—é–¥–∂–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∫–∞–∑–Ω–∞—á–µ–π—Å—Ç–≤–∞\n–≠–∫–æ–Ω–æ–º–∏—Å—Ç\n—Ä–∞–±–æ—á–∏–π +7-727-272-04-11 "
                                          "–º–æ–±–∏–ª—å–Ω—ã–π +7-707-315-55-59")
    elif message_text == "–î–∏—Ä–µ–∫—Ü–∏—è –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ü—Ä–æ–µ–∫—Ç–∞–º–∏":
        bot.send_message(message.chat.id, "–®–µ–∫–µ–Ω–æ–≤–∞ –ù—É—Ä–≥—É–ª—å –ñ–∞–Ω—Ç–∞—Å–æ–≤–Ω–∞\nEX —Å–µ–∫—Ç–æ—Ä\nEX operations\n—Ä–∞–±–æ—á–∏–π "
                                          "+7-717-224-97-46 –º–æ–±–∏–ª—å–Ω—ã–π +7-747-403-82-92)")
    elif message_text == "–î–∏—Ä–µ–∫—Ü–∏—è –¢–µ–ª–µ–∫–æ–º –ö–æ–º–ø–ª–µ–∫—Ç":
        bot.send_message(message.chat.id, "–†–∞–º–∞–∑–∞–Ω“õ—ã–∑—ã –ê–π–Ω“±—Ä\n–û—Ç–¥–µ–ª —ç–∫–æ–Ω–æ–º–∏–∫–∏ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤\n–í–µ–¥—É—â–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Çn\n"
                                          "–º–æ–±–∏–ª—å–Ω—ã–π +7-777-241-2936")
    elif message_text == "–°–µ—Ä–≤–∏—Å–Ω–∞—è –§–∞–±—Ä–∏–∫–∞":
        bot.send_message(message.chat.id, "–¢–µ–∑–µ–∫–±–∞–µ–≤ –ú–∞–∫—Å–∞—Ç –¢–µ–º–∏—Ä–±–µ–∫–æ–≤–∏—án\n–û—Ç–¥–µ–ª –±—é–¥–∂–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, —ç–∫–æ–Ω–æ–º–∏–∫–∏ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤\n"
                                          "–í–µ–¥—É—â–∏–π —ç–∫–æ–Ω–æ–º–∏—Å—Ç\n–º–æ–±–∏–ª—å–Ω—ã–π +7-708-694-75-40")
    elif message_text == "–î–∏–≤–∏–∑–∏–æ–Ω –ø–æ –†–æ–∑–Ω–∏—á–Ω–æ–º—É –ë–∏–∑–Ω–µ—Å—É":
        markup_r = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
        markup_r = generate_buttons(drb_regions, markup_r)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω", reply_markup=markup_r)
    elif message_text == '–û–±—å–µ–¥–∏–Ω–µ–Ω–∏–µ –î–∏–≤–∏–∑–∏–æ–Ω "–°–µ—Ç—å"':
        markup_r = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
        markup_r = generate_buttons(ods_regions, markup_r)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω", reply_markup=markup_r)


def func_region(bot, message):
    if message.text == "–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∏–π —Ä–µ–≥–∏–æ–Ω, –≥.–ê–ª–º–∞—Ç—ã":
        bot.send_message(message.chat.id, "–ë–µ–∫–µ–Ω –ù–∞–∑–≥—É–ª—å –ù—É—Ä–º–∞—Ö–∞–Ω–æ–≤–Ω–∞\n–î–†–ë/–û—Ç–¥–µ–ª —É—á–µ—Ç–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤\n–í–µ–¥—É—â–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç\n"
                                          "–º–æ–±–∏–ª—å–Ω—ã–π +7-707-701-6110")
    elif message.text == "–ó–∞–ø–∞–¥–Ω—ã–π, –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ä–µ–≥–∏–æ–Ω":
        bot.send_message(message.chat.id,
                         "–ñ—É–º–∞–±–µ–π—Å–æ–≤–∞ –ì—É–ª—å—à–∞—Ä–∞ –ö–∞—Å–∏–º–∫—É–ª–æ–≤–Ω–∞\n–î–†–ë/–û—Ç–¥–µ–ª –≤–≤–æ–¥–∞ –æ–ø–ª–∞—Ç—ã\n–í–µ–¥—É—â–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç"
                         "\n—Ä–∞–±–æ—á–∏–π +7-713-254-50-45, –º–æ–±–∏–ª—å–Ω—ã–π +7-775 751-1269")
    elif message.text == "–°–µ–≤–µ—Ä–Ω—ã–π, –Æ–∂–Ω—ã–π, –í–æ—Å—Ç–æ—á–Ω—ã–π —Ä–µ–≥–∏–æ–Ω—ã":
        bot.send_message(message.chat.id,
                         "–°—É—Ö–∞–Ω–±–µ—Ä–¥–∏–µ–≤–∞ –ú–∞–ª–∏–∫–∞ –î–∞—É—Ä–µ–Ω–æ–≤–Ω–∞\n–î–†–ë/–û—Ç–¥–µ–ª –≤–≤–æ–¥–∞ –æ–ø–ª–∞—Ç—ã\n–í–µ–¥—É—â–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç\n"
                         "–º–æ–±–∏–ª—å–Ω—ã–π +7-708-566-6834")
    elif message.text == "–î–≠–°–î '–ê–ª–º–∞—Ç—ã—Ç–µ–ª–µ–∫–æ–º'":
        bot.send_message(message.chat.id, "–ú—É—Å—Ä–µ–ø–±–µ–∫–æ–≤–∞ –ú–∞—Ä–∂–∞–Ω –ñ–µ–∫—Å–µ–Ω–±–∞–π“õ—ã–∑—ã\n–§–≠–ë\n–í–µ–¥—É—â–∏–π —ç–∫–æ–Ω–æ–º–∏—Å—Ç\n+77021737933, "
                                          "+77272975716")
    elif message.text == "–Æ–∂–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∏–π –î–≠–°–î":
        bot.send_message(message.chat.id, "–ï—Å–µ–Ω–±–µ–∫–æ–≤–∞ –°–∞—É–ª–µ –†–∞—Ö–∏–º–∂–∞–Ω–æ–≤–Ω–∞\n–§–≠–ë\n–õ–æ–≥–∏—Å—Ç–∏–∫\n+77017605836, +77252530225")
    elif message.text == "–ö—ã–∑—ã–ª–æ—Ä–¥–∏–Ω—Å–∫–∏–π –î–≠–°–î":
        bot.send_message(message.chat.id, "–£—Ä–∞–∫–±–∞–µ–≤–∞ –ê–∫–∫–∞–Ω—ã—à –£—Ç–µ–≥—É–ª–æ–≤–Ω–∞\n–§–≠–ë\n–í–µ–¥—É—â–∏–π —ç–∫–æ–Ω–æ–º–∏—Å—Ç\n+77002151447, "
                                          "+77242264333")
    elif message.text == "–ö–æ—Å—Ç–∞–Ω–∞–π—Å–∫–∏–π –î–≠–°–î":
        bot.send_message(message.chat.id, "–ñ—É–Ω—É—Å–æ–≤–∞ –î–∏–Ω–∞—Ä–∞ –¢–∏–º—É—Ä—Ö–∞–Ω–æ–≤–Ω–∞\n–§–≠–ë\n–≠–∫–æ–Ω–æ–º–∏—Å—Ç 1 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n+77052153323, "
                                          "+77142573004")
    elif message.text == "–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∏–π –î–≠–°–î":
        bot.send_message(message.chat.id, "–ë–µ—Ä–∫–∏–º–±–∞–µ–≤ –ñ–∞—Å–ª–∞–Ω –ñ–∞–∫–∞—É–æ–≤–∏—á\n–§–≠–ë\n–í–µ–¥—É—â–∏–π —ç–∫–æ–Ω–æ–º–∏—Å—Ç\n+77142393364, "
                                          "+77142573373")
    elif message.text == "–ê—Ç—ã—Ä–∞—É—Å–∫–∏–π –î–≠–°–î":
        bot.send_message(message.chat.id, "–ö–µ–Ω–∂–µ—Ç–∞–µ–≤–∞ –ì—É–ª—å–Ω–∞—Ä–∞  –°–∞–≥–∏–Ω–¥—ã–∫–æ–≤–Ω–∞\n–§–≠–ë\n–í–µ–¥—É—â–∏–π —ç–∫–æ–Ω–æ–º–∏—Å—Ç\n+77017987499, "
                                          "+77172577588")
    elif message.text == "–ê–∫—Ç—é–±–∏–Ω—Å–∫–∏–π –î–≠–°–î":
        bot.send_message(message.chat.id, "–î—É–π—Å–µ–Ω–æ–≤ –ë–∞—É—ã—Ä–∂–∞–Ω –†—ã—Å–±–∞–µ–≤–∏—á\n–§–≠–ë\n–í–µ–¥—É—â–∏–π –ª–æ–≥–∏—Å—Ç–∏–∫\n+77053444748, "
                                          "+77292301077")
    elif message.text == "–î–≠–°–î '–ê—Å—Ç–∞–Ω–∞'":
        bot.send_message(message.chat.id, "–£–∞—Ç–∞–µ–≤–∞ –ö–∞–º—à–∞—Ç –ú–µ–π—Ä—Ö–∞–Ω–æ–≤–Ω–∞\n–§–≠–ë\n–í–µ–¥—É—â–∏–π —ç–∫–æ–Ω–æ–º–∏—Å—Ç\n+77779939323, "
                                          "+77232200318")
    elif message.text == "–¢–£–°–ú-1":
        bot.send_message(message.chat.id, "–ö–∞–Ω –õ—é–¥–º–∏–ª–∞ –¢—Ä–æ—Ñ–∏–º–æ–≤–Ω–∞\n–¢–ë\n–ò–Ω–∂–µ–Ω–µ—Ä —ç–ª–µ–∫—Ç—Ä–æ—Å–≤—è–∑–∏ 1 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n+77012262288, "
                                          "+77273844921")
    elif message.text == "–¢–£–°–ú-6":
        bot.send_message(message.chat.id, "–ñ—É–∫ –°–≤–µ—Ç–ª–∞–Ω–∞ –ò–≤–∞–Ω–æ–≤–Ω–∞\n–¢–ë\n–ò–Ω–∂–µ–Ω–µ—Ä —ç–ª–µ–∫—Ç—Ä–æ—Å–≤—è–∑–∏ 1 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n+77771517171, "
                                          "+77222642713")
    elif message.text == "–¢–£–°–ú-8":
        bot.send_message(message.chat.id, "–ö–ª—é—à–∏–Ω–∞ –ò—Ä–∏–Ω–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞\n–¢–ë\n–ò–Ω–∂–µ–Ω–µ—Ä —ç–ª–µ–∫—Ç—Ä–æ—Å–≤—è–∑–∏ 1 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n"
                                          "+77771472072, +77143192751")
    elif message.text == "–¢–£–°–ú-10":
        bot.send_message(message.chat.id, "–ö–µ–Ω–∂–µ–±–∞–µ–≤ –°–∞–º–∞—Ç –û—Å–ø–∞–Ω“±–ª—ã\n–¢–ë\n–ò–Ω–∂–µ–Ω–µ—Ä —ç–ª–µ–∫—Ç—Ä–æ—Å–≤—è–∑–∏ 2 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n"
                                          "+77075652955, +77172594103")
    elif message.text == "–¢–£–°–ú-11":
        bot.send_message(message.chat.id, "–£—Å–µ–Ω–æ–≤–∞ –ë–∞–ª–∂–∞–Ω –¢—É–∑–µ–ª–æ–≤–Ω–∞\n–¢–ë\n–ò–Ω–∂–µ–Ω–µ—Ä —ç–ª–µ–∫—Ç—Ä–æ—Å–≤—è–∑–∏ 1 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n"
                                          "+77056846921, +77252449534")
    elif message.text == "–¢–£–°–ú-13":
        bot.send_message(message.chat.id, "–¢—É—Ä–∂–∏–≥–∏—Ç–æ–≤–∞ –í–µ–Ω–µ—Ä–∞ –ê–º–∞–Ω–≥–µ–ª—å–¥–∏–Ω–æ–≤–Ω–∞\n–¢–ë\n–¢–µ—Ö–Ω–∏–∫ –ª–∏–Ω–µ–π–Ω—ã—Ö —Å–æ–æ—Ä—É–∂–µ–Ω–∏–π —Å–≤—è–∑–∏ –∏ "
                                          "–∞–±–æ–Ω–µ–Ω—Ç—Å–∫–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ 1 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n+77473021977, +77122366397")
    elif message.text == "–¢–£–°–ú-14":
        bot.send_message(message.chat.id, "–ê—Ä—ã—Å—Ç–∞–Ω–æ–≤–∞ –ù—É—Ä–≥—É–ª—å –ê–º–∞–Ω–∂—É–ª–æ–≤–Ω–∞\n–¢–ë\n–¢–µ—Ö–Ω–∏–∫ –ª–∏–Ω–µ–π–Ω—ã—Ö —Å–æ–æ—Ä—É–∂–µ–Ω–∏–π —Å–≤—è–∑–∏ –∏ "
                                          "–∞–±–æ–Ω–µ–Ω—Ç—Å–∫–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ 1 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n+77711863815, +77132530638")
    elif message.text == "–ì–ê":
        bot.send_message(message.chat.id, "–ê—Ä–µ—Ñ—å–µ–≤–∞ –ú–∞—Ä–∏–Ω–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞\n–§–≠–ë\n–≠–∫–æ–Ω–æ–º–∏—Å—Ç 1 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n+77053882043, "
                                          "+77273312070")


def biot(bot, message):
    if message.text == "üë∑–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –ë–∏–û–¢":
        markup = types.ReplyKeyboardMarkup(row_width=1)
        button = types.KeyboardButton("–û–ø–∞—Å–Ω—ã–π —Ñ–∞–∫—Ç–æ—Ä/—É—Å–ª–æ–≤–∏–µ")
        button2 = types.KeyboardButton("–ü–æ–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç")
        button3 = types.KeyboardButton("–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è/–ò–¥–µ–∏")
        markup.add(button, button2, button3)
        bot.send_message(message.chat.id,
                         "–í—ã –∑–∞–º–µ—Ç–∏–ª–∏ –æ–ø–∞—Å–Ω—ã–π —Ñ–∞–∫—Ç–æ—Ä, –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∏–ª–∏ y Bac –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è/–∏–¥–µ–∏ –ø–æ "
                         "—É–ª—É—á—à–µ–Ω–∏—é –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –æ—Ö—Ä–∞–Ω—ã —Ç—Ä—É–¥–∞ –Ω–∞ —Ä–∞–±–æ—á–µ–º –º–µ—Å—Ç–µ?",
                         reply_markup=markup)
        time.sleep(0.75)
        bot.send_message(message.chat.id, "B—ã–±ep–∏—Çe –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—é —Å–æ–±—ã—Ç–∏—è –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–∞—Ä—Ç–æ—á–∫—É –ë–∏–û–¢.")
        time.sleep(0.75)
        bot.send_message(message.chat.id,
                         "Ec–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥, —Ç–æ –≤–≤–µ–¥–∏—Ç–µ /menu –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ "
                         "/menu –≤ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥ —Å–ª–µ–≤–∞ –æ—Ç —Å—Ç—Ä–æ–∫–∏ –≤–≤–æ–¥–∞.")
    elif message.text == "–û–ø–∞—Å–Ω—ã–π —Ñ–∞–∫—Ç–æ—Ä/—É—Å–ª–æ–≤–∏–µ":
        bot.send_message(message.chat.id,
                         "–ï—Å–ª–∏ –í—ã –∑–∞–º–µ—Ç–∏–ª–∏ –æ–ø–∞—Å–Ω—ã–π —Ñ–∞–∫—Ç–æ—Ä –∏–ª–∏ —É—Å–ª–æ–≤–∏–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–±–æ—Ç—ã, —Ç–æ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ "
                         "–∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–ø—Ä–æ—Å–Ω–∏–∫: "
                         "\nhttps://docs.google.com/forms/d/1eizZuYiPEHYZ8A9-TQTvhQAHJHVtmJ0H90gxUsn5Ows/edit")
        time.sleep(0.75)
        bot.send_message(message.chat.id,
                         "Ec–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥, —Ç–æ –≤–≤–µ–¥–∏—Ç–µ /menu –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ /menu –≤ "
                         "–º–µ–Ω—é –∫–æ–º–∞–Ω–¥ —Å–ª–µ–≤–∞ –æ—Ç —Å—Ç—Ä–æ–∫–∏ –≤–≤–æ–¥–∞.")
    elif message.text == "–ü–æ–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç":
        bot.send_message(message.chat.id,
                         "–ï—Å–ª–∏ –í—ã –∑–∞–º–µ—Ç–∏–ª–∏ —Ä–∏—Å–∫–∏ –≤ –ø–æ–≤–µ–¥–µ–Ω–∏–∏ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç, —Ç–æ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ –∏ "
                         "–∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–ø—Ä–æ—Å–Ω–∏–∫: \nhttps://docs.google.com/forms/d/e/1FAIpQLSftmGKV1hjBiMcwqKW1yIM83PIP"
                         "2eOPqU4afa8x9z3-VeHZKA/viewform?usp=sf_link")
        time.sleep(0.75)
        bot.send_message(message.chat.id,
                         "Ec–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥, —Ç–æ –≤–≤–µ–¥–∏—Ç–µ /menu –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ /menu –≤ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥ —Å–ª–µ–≤–∞ –æ—Ç "
                         "—Å—Ç—Ä–æ–∫–∏ –≤–≤–æ–¥–∞.")
    elif message.text == "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è/–ò–¥–µ–∏":
        bot.send_message(message.chat.id, "–ï—Å–ª–∏ y Bac –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ –∏–¥–µ–∏, —Ç–æ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ –∏ "
                                          "–∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–ø—Ä–æ—Å–Ω–∏–∫:\n"
                                          "https://docs.google.com/forms/d/e/1FAIpQLSdzvAVfVH2dhFyXceKTyhZhBx9TplXUp53"
                                          "uLTSNzw8FejpNoA/viewform")
        time.sleep(0.75)
        bot.send_message(message.chat.id, "Ec–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥, —Ç–æ –≤–≤–µ–¥–∏—Ç–µ /menu –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ /menu –≤ –º–µ–Ω—é "
                                          "–∫–æ–º–∞–Ω–¥ —Å–ª–µ–≤–∞ –æ—Ç —Å—Ç—Ä–æ–∫–∏ –≤–≤–æ–¥–∞.")


def instructions(bot, message):
    if message.text == "–õ–æ–≥–æ—Ç–∏–ø—ã –∏ –ë—Ä–µ–Ω–¥–±—É–∫":
        markup_instr = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
        button1_i = types.KeyboardButton("–ê–û '–ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º'")
        button2_i = types.KeyboardButton("–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç")
        markup_instr.add(button1_i, button2_i)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_instr)
    elif message.text == "–ú–æ–¥–µ–º—ã | –ù–∞—Å—Ç—Ä–æ–π–∫–∞":
        markup_instr = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
        button1_i = types.KeyboardButton("ADSL –º–æ–¥–µ–º")
        button2_i = types.KeyboardButton("IDTV –ø—Ä–∏—Å—Ç–∞–≤–∫–∏")
        button3_i = types.KeyboardButton("ONT –º–æ–¥–µ–º—ã")
        button4_i = types.KeyboardButton("Router 4G and Router Ethernet")
        markup_instr.add(button1_i, button2_i, button3_i, button4_i)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_instr)
    elif message.text == "Lotus | –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏":
        markup_instr = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
        button1_i = types.KeyboardButton("–î–∞–Ω–Ω—ã–µ –ø–æ —Å–µ—Ä–≤–µ—Ä–∞–º —Ñ–∏–ª–∏–∞–ª–æ–≤")
        button2_i = types.KeyboardButton("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ Lotus")
        button3_i = types.KeyboardButton("–£—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π —Ñ–∞–π–ª Lotus")
        markup_instr.add(button1_i, button2_i, button3_i)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_instr)
    elif message.text == "CheckPoint VPN | –£–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞":
        markup_instr = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
        button1_i = types.KeyboardButton("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ CheckPoint")
        button2_i = types.KeyboardButton("–£—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π —Ñ–∞–π–ª CheckPoint")
        markup_instr.add(button1_i, button2_i)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_instr)
    elif message.text == "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç telecom.kz":
        markup_instr = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
        button1_i = types.KeyboardButton("–ö–∞–∫ –æ–ø–ª–∞—Ç–∏—Ç—å —É—Å–ª—É–≥—É")
        button2_i = types.KeyboardButton("–ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ –¥–µ—Ç–∞–ª—è—Ö –æ–ø–ª–∞—Ç—ã")
        button3_i = types.KeyboardButton("–ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏")
        button4_i = types.KeyboardButton("–†–∞–∑–¥–µ–ª '–ú–æ–∏ –£—Å–ª—É–≥–∏'")
        markup_instr.add(button1_i, button2_i, button3_i, button4_i)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_instr)
    elif message.text == "–ö–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∞ | –ü–æ—Ä—è–¥–æ–∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è":
        bot.send_document(message.chat.id, document=open("files/–ü–æ—Ä—è–¥–æ–∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∏.pdf", 'rb'))
    elif message.text == "–î–∞–Ω–Ω—ã–µ –ø–æ —Å–µ—Ä–≤–µ—Ä–∞–º —Ñ–∏–ª–∏–∞–ª–æ–≤":
        bot.send_document(message.chat.id, document=open("files/–î–∞–Ω–Ω—ã–µ –ø–æ –≤—Å–µ–º lotus —Å–µ—Ä–≤–µ—Ä–∞–º.xlsx", 'rb'))
    elif message.text == "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ Lotus":
        bot.send_document(message.chat.id, document=open("files/–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ Lotus Notes –Ω–∞ –¥–æ–º–∞—à–Ω–µ–º –ø–∫_.docx", 'rb'))
    elif message.text == "–£—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π —Ñ–∞–π–ª Lotus":
        bot.send_message(message.chat.id, "–£—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π —Ñ–∞–π–ª Lotus Notes: \nhttps://drive.google.com/drive/folders/"
                                          "1MrpjeXavmRnUMvYUiTcylhxAIEA6dvBb?usp=drive_link")
    elif message.text == "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ CheckPoint":
        bot.send_document(message.chat.id, document=open("files/–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ CheckPoint.pdf", 'rb'))
    elif message.text == "–£—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π —Ñ–∞–π–ª CheckPoint":
        bot.send_document(message.chat.id, document=open("files/E85.40_CheckPointVPN.msi", 'rb'))
    elif message.text == "–ê–û '–ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º'":
        bot.send_message(message.chat.id,
                         "–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –ª–æ–≥–æ—Ç–∏–ø—ã –∏ –±—Ä–µ–Ω–¥–±—É–∫ –ê–û '–ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º'\n"
                         "https://drive.google.com/drive/folders/1TJOkjRhZcNauln1EFqIN6sh_D78TXvF7?usp=drive_link")
    elif message.text == "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç":
        bot.send_message(message.chat.id,
                         "–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –ª–æ–≥–æ—Ç–∏–ø—ã –∏ –±—Ä–µ–Ω–¥–±—É–∫ –ö–∞–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞\n"
                         "https://drive.google.com/drive/folders/10JQcSDebbsBFrVPjcxAlWGXLdbn937MX?usp=sharing")
    elif message.text == "–ö–∞–∫ –æ–ø–ª–∞—Ç–∏—Ç—å —É—Å–ª—É–≥—É":
        bot.send_document(message.chat.id, document=open("files/–ö–∞–∫ –æ–ø–ª–∞—Ç–∏—Ç—å —É—Å–ª—É–≥–∏ –ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º.pdf", 'rb'))
    elif message.text == "–ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ –¥–µ—Ç–∞–ª—è—Ö –æ–ø–ª–∞—Ç—ã":
        bot.send_document(message.chat.id,
                          document=open("files/–ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–µ—Ç–∞–ª—è—Ö –æ–ø–ª–∞—Ç—ã.pdf", 'rb'))
    elif message.text == "–ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏":
        bot.send_document(message.chat.id, document=open("files/–ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏.pdf", 'rb'))
    elif message.text == "–†–∞–∑–¥–µ–ª '–ú–æ–∏ –£—Å–ª—É–≥–∏'":
        bot.send_document(message.chat.id, document=open("files/—Ä–∞–∑–¥–µ–ª ¬´–ú–û–ò –£–°–õ–£–ì–ò¬ª.pdf", 'rb'))
    elif message.text == "ADSL –º–æ–¥–µ–º":
        bot.send_message(message.chat.id,
                         "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 'ADSL –º–æ–¥–µ–º' –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ"
                         "\nhttps://drive.google.com/drive/folders/1ZMcd4cVuX8_JUJ8OoN0rYx5d5DjwlEbz?usp=drive_link")
    elif message.text == "IDTV –ø—Ä–∏—Å—Ç–∞–≤–∫–∏":
        bot.send_message(message.chat.id,
                         "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 'IDTV –ø—Ä–∏—Å—Ç–∞–≤–∫–∏' –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ"
                         "\nhttps://drive.google.com/drive/folders/1ZFbUrKi9QITBLkJQ93I45dxhINSsgv7H?usp=drive_link")
    elif message.text == "ONT –º–æ–¥–µ–º—ã":
        bot.send_message(message.chat.id,
                         "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 'ONT –º–æ–¥–µ–º—ã' –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ"
                         "\nhttps://drive.google.com/drive/folders/1IiLJ14dKF3wQhoLYb18jJMLD6BNz3K7x?usp=drive_link")
    elif message.text == "Router 4G and Router Ethernet":
        bot.send_message(message.chat.id,
                         "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 'Router 4G and Router Ethernet' –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ"
                         "\nhttps://drive.google.com/drive/folders/1EkzERKwa-DTnMW86-qJGbc_YAU2k6A74?usp=drive_link")
    elif message.text == "–ü–æ—Ä—Ç–∞–ª –∑–∞–∫—É–ø–æ–∫ | –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏":
        markup_kb = types.ReplyKeyboardMarkup(one_time_keyboard=True)
        button1_kb = types.KeyboardButton("–î–ª—è –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä–æ–≤ | –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏")
        button2_kb = types.KeyboardButton("–î–ª—è —Å–µ–∫—Ä–µ—Ç–∞—Ä–µ–π | –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏")
        markup_kb.add(button1_kb, button2_kb)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é", reply_markup=markup_kb)
    elif message.text == "–î–ª—è –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä–æ–≤ | –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏":
        bot.send_message(message.chat.id, "https://youtu.be/RsNAa02QO0M")
        bot.send_document(message.chat.id, open("files/–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–∞–±–æ—Ç–µ –≤ —Å–∏—Å—Ç–µ–º–µ –ü–æ—Ä—Ç–∞–ª –∑–∞–∫—É–ø–æ–∫ 2.0.docx", "rb"))
    elif message.text == "–î–ª—è —Å–µ–∫—Ä–µ—Ç–∞—Ä–µ–π | –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏":
        bot.send_message(message.chat.id, "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Å–µ–∫—Ä–µ—Ç–∞—Ä–µ–π"
                                          "\nhttps://disk.telecom.kz/index.php/s/kc8PfD44Qw6X8jM")
        bot.send_message(message.chat.id, "–ü–∞—Ä–æ–ª—å:\nsF21hOvUOp")
    elif message.text == "–£–ª—É—á—à–µ–Ω–∏–µ Wi-Fi —Å–∏–≥–Ω–∞–ª–∞ –¥–ª—è –∞–±–æ–Ω–µ–Ω—Ç–æ–≤":
        bot.send_message(message.chat.id, "–£–ª—É—á—à–µ–Ω–∏–µ Wi Fi —Å–∏–≥–Ω–∞–ª–∞ –¥–ª—è –∞–±–æ–Ω–µ–Ω—Ç–æ–≤  –í–∞–∂–Ω–æ—Å—Ç—å –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ - \n"
                                          "https://youtu.be/wZ9Nn6bQZs")
    elif message.text == "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞ –∏ Mesh —Å–∏—Å—Ç–µ–º—ã":
        bot.send_message(message.chat.id, "–í–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞ –∏ Mesh —Å–∏—Å—Ç–µ–º—ã - \n"
                                          "https://youtu.be/0ue5ODjIXXU")
    elif message.text == "–°–µ—Ç—å –∏ –¢–í+":
        markup_kb = types.ReplyKeyboardMarkup(one_time_keyboard=True)
        button1_kb = types.KeyboardButton("–°–µ—Ç–µ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ TCP/IP")
        button2_kb = types.KeyboardButton("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¢–í+ –ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º")
        markup_kb.add(button1_kb, button2_kb)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é", reply_markup=markup_kb)
    elif message.text == "–°–µ—Ç–µ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ TCP/IP":
        bot.send_document(message.chat.id, open("files/–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ç–µ–≤–æ–π –∫–∞—Ä—Ç—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ "
                                                "—Å–≤–æ–π—Å—Ç–≤ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ tcpipv4.pdf", "rb"))
    elif message.text == "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¢–í+ –ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º":
        bot.send_document(message.chat.id,
                          open("files/–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è  ¬´–¢–í+ –ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º ¬ª.pdf", "rb"))
    elif message.text == "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–ª–µ–≤–∏–∑–æ—Ä–∞ –≤ Wi-fi":
        bot.send_document(message.chat.id, open("files/–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–ª–µ–≤–∏–∑–æ—Ä–∞ –∫ Wi-fi —Å–µ—Ç–∏ 5 –ì–≥—Ü.pdf", "rb"))
    elif message.text == '–ò–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–±–æ—Ä—ã':
        markup_kb = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
        button1_kb = types.KeyboardButton("–ò–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–±–æ—Ä—ã –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
        button2_kb = types.KeyboardButton("–ê–Ω–Ω–æ—Ç–∞—Ü–∏—è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–º –ø—Ä–∏–±–æ—Ä–æ–º")
        markup_kb.add(button1_kb, button2_kb)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_kb)
    elif message.text == "–ò–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–±–æ—Ä—ã –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è":
        bot.send_document(message.chat.id, open("files/–ò–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–±–æ—Ä—ã –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è.pdf", "rb"))
    elif message.text == "–ê–Ω–Ω–æ—Ç–∞—Ü–∏—è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–º –ø—Ä–∏–±–æ—Ä–æ–º":
        bot.send_document(message.chat.id,
                          open("files/–ê–Ω–Ω–æ—Ç–∞—Ü–∏—è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–º –ø—Ä–∏–±–æ—Ä–æ–º.pdf", "rb"))
    elif message.text =="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ –î–û":
        bot.send_document(message.chat.id,
                          open("files/–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω—ã—Ö –∫—É—Ä—Å–æ–≤ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ LMS - 1.jpg", "rb"))


def kb(bot, message):
    if message.text == "üóÉÔ∏è–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π":
        set_bool(message, False, False)
        markup_kb = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
        button1_kb = types.KeyboardButton("–ë–∞–∑–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π")
        button2_kb = types.KeyboardButton("–ì–ª–æ—Å—Å–∞—Ä–∏–π")
        button3_kb = types.KeyboardButton("–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏")
        button4_kb = types.KeyboardButton("–†–µ–≥–ª–∞–º–µ–Ω—Ç–∏—Ä—É—é—â–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã")
        markup_kb.add(button2_kb, button1_kb, button3_kb, button4_kb)
        bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–æ–±–∏–ª—å–Ω—É—é –±–∞–∑—É –∑–Ω–∞–Ω–∏–π!", reply_markup=markup_kb)
        time.sleep(0.75)
        bot.send_message(message.chat.id,
                         "–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–æ–∏—Å–∫–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π, —á—Ç–æ–±—ã "
                         "–Ω–∞–π—Ç–∏ –≥–ª–æ—Å—Å–∞—Ä–∏–π –∫–ª—é—á–µ–≤—ã—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.")
    elif message.text == "–ë–∞–∑–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π":
        set_bool(message, True, False)
        markup_instr = types.ReplyKeyboardMarkup(row_width=1)
        button1_kb = types.KeyboardButton("–õ–æ–≥–æ—Ç–∏–ø—ã –∏ –ë—Ä–µ–Ω–¥–±—É–∫")
        button2_kb = types.KeyboardButton("–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç telecom.kz")
        button3_kb = types.KeyboardButton("–ú–æ–¥–µ–º—ã | –ù–∞—Å—Ç—Ä–æ–π–∫–∞")
        button4_kb = types.KeyboardButton("Lotus | –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏")
        button6_kb = types.KeyboardButton("CheckPoint VPN | –£–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞")
        button7_kb = types.KeyboardButton("–ö–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∞ | –ü–æ—Ä—è–¥–æ–∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è")
        button8_kb = types.KeyboardButton("–ü–æ—Ä—Ç–∞–ª –∑–∞–∫—É–ø–æ–∫ | –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏")
        button9_kb = types.KeyboardButton("–£–ª—É—á—à–µ–Ω–∏–µ Wi-Fi —Å–∏–≥–Ω–∞–ª–∞ –¥–ª—è –∞–±–æ–Ω–µ–Ω—Ç–æ–≤")
        button10_kb = types.KeyboardButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞ –∏ Mesh —Å–∏—Å—Ç–µ–º—ã")
        button11_kb = types.KeyboardButton("–°–µ—Ç—å –∏ –¢–í+")
        button12_kb = types.KeyboardButton("–î–¢–ö –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏")
        button13_kb = types.KeyboardButton("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–ª–µ–≤–∏–∑–æ—Ä–∞ –≤ Wi-fi")
        button14_kb = types.KeyboardButton("–ò–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–±–æ—Ä—ã")
        button15_kb = types.KeyboardButton("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ –î–û")
        markup_instr.add(button4_kb, button6_kb, button1_kb, button7_kb, button2_kb, button3_kb, button8_kb,
                         button9_kb, button10_kb, button11_kb, button14_kb, button12_kb, button13_kb, button15_kb)
        bot.send_message(message.chat.id, "–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –ø–æ–ª–µ–∑–Ω—É—é –¥–ª—è Bac –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é.",
                         reply_markup=markup_instr)
        time.sleep(0.5)
        bot.send_message(message.chat.id,
                         "–î–ª—è –≤—ã–±–æ—Ä–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è, a –∑–∞—Ç–µ–º —Å–∞–º—É –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –≤ –º–µ–Ω—é-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ‚å®Ô∏è.")
    elif message.text == "–î–¢–ö –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏":
        instructions_dtk(bot, message)
    elif message.text == "–ì–ª–æ—Å—Å–∞—Ä–∏–π":
        set_bool(message, False, True)
        bot.send_message(message.chat.id, "–ì–ª–æ—Å—Å–∞—Ä–∏–π —Ç–µ—Ä–º–∏–Ω–æ–≤ –∏ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä –≤ –∫–æ–º–ø–∞–Ω–∏–∏ AO –ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º.")
        time.sleep(0.5)
        bot.send_message(message.chat.id, "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—ã –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Ä–º–∏–Ω–∞- "
                                          "–Ω–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å —Å–ª–æ–≤–æ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.")
        time.sleep(0.5)
        bot.send_message(message.chat.id,
                         "–í–∞–∂–Ω–æ!\n\n- –í–≤–æ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –±–µ–∑ –æ—à–∏–±–æ–∫ –∏ –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤.\n - –ê–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—ã –≤–∞–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å c "
                         "–≤–µ—Ä—Ö–Ω–∏–º —Ä–µ–≥–∏—Å—Ç—Ä–æ–º. –ù–∞–ø—Ä–∏–º–µ—Ä: –ï–ü–ü–ö, –û–î–°, –î–ò–¢.")
    # elif message.text == "–°–µ—Ä–≤–∏—Å –∏ –ü—Ä–æ–¥–∞–∂–∏":
    #     markup_instr = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
    #     button1_i = types.KeyboardButton("–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç telecom.kz")
    #     button2_i = types.KeyboardButton("–ê–∫—Ü–∏–∏")
    #     button3_i = types.KeyboardButton("–ù–†–î")
    #     button4_i = types.KeyboardButton("–°–∫—Ä–∏–ø—Ç—ã")
    #     button5_i = types.KeyboardButton("–¢–∞—Ä–∏—Ñ—ã")
    #     markup_instr.add(button1_i, button2_i, button3_i, button4_i, button5_i)
    #     bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–µ—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_instr)
    elif message.text == "–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏":
        set_bool(message, False, False)
        time.sleep(0.5)
        markup = useful_links()
        bot.send_message(message.chat.id, "–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏", reply_markup=markup)
    elif message.text == "–†–µ–≥–ª–∞–º–µ–Ω—Ç–∏—Ä—É—é—â–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã":
        markup = types.InlineKeyboardMarkup()

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –∫–∞–∂–¥–∞—è –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
        button1 = types.InlineKeyboardButton("–†–µ–≥–ª–∞–º–µ–Ω—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è", callback_data="doc1")
        button2 = types.InlineKeyboardButton("–ü–æ—Ä—è–¥–æ–∫ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è –∑–∞–∫—É–ø–æ–∫", callback_data="doc2")
        button3 = types.InlineKeyboardButton("–ü–æ–ª–∏—Ç–∏–∫–∞ –£–† –æ—Ç 21.04.2023", callback_data="doc3")
        button4 = types.InlineKeyboardButton("–ü–æ–ª–∏—Ç–∏–∫–∞ –≤ –æ–±–ª–∞—Å—Ç–∏ —ç–Ω–µ—Ä–≥–æ–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞", callback_data="doc4")
        button5 = types.InlineKeyboardButton("–ü–æ–ª–∏—Ç–∏–∫–∞ –≤ –æ–±–ª–∞—Å—Ç–∏ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –ë–∏–û–¢", callback_data="doc5")

        # –†–∞–∑–º–µ—â–∞–µ–º –∫–∞–∂–¥—É—é –∫–Ω–æ–ø–∫—É –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É
        markup.row(button1)
        markup.row(button2)
        markup.row(button3)
        markup.row(button4)
        markup.row(button5)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞–º–∏
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∏—Ä—É—é—â–∏–π –¥–æ–∫—É–º–µ–Ω—Ç:", reply_markup=markup)


# def kb_service(bot, message):
#     if message.text == "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç telecom.kz":
#         markup_instr = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
#         button1_i = types.KeyboardButton("–ö–∞–∫ –æ–ø–ª–∞—Ç–∏—Ç—å —É—Å–ª—É–≥—É")
#         button2_i = types.KeyboardButton("–ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ –¥–µ—Ç–∞–ª—è—Ö –æ–ø–ª–∞—Ç—ã")
#         button3_i = types.KeyboardButton("–ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏")
#         button4_i = types.KeyboardButton("–†–∞–∑–¥–µ–ª '–ú–æ–∏ –£—Å–ª—É–≥–∏'")
#         markup_instr.add(button1_i, button2_i, button3_i, button4_i)
#         bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–µ—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_instr)
#     elif message.text == "–ê–∫—Ü–∏–∏":
#         bot.send_document(message.chat.id, open("files/–°–∫—Ä–∏–ø—Ç –ø–æ –∞–∫—Ü–∏–∏ –ü–æ—á—É–≤—Å—Ç–≤—É–π —Ä–∞–∑–Ω–∏—Ü—É!.docx", 'rb'))
#     elif message.text == "–°–∫—Ä–∏–ø—Ç—ã":
#         markup_s = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
#         button1_s = types.KeyboardButton("–ù–õ–¢-2022")
#         button2_s = types.KeyboardButton("–¢–µ–∫—Å—Ç SMS —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
#         button3_s = types.KeyboardButton("–ü–æ–≤—ã—à–µ–Ω–∏–µ –¢–∞—Ä–∏—Ñ–æ–≤, –°–∫—Ä–∏–ø—Ç")
#         button4_s = types.KeyboardButton("–°–∫—Ä–∏–ø—Ç –∑–∞–º–µ–Ω–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è")
#         button5_s = types.KeyboardButton("–°–∫—Ä–∏–ø—Ç –∑–∞–º–µ–Ω–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –ü–°–°, –£–ü")
#         button6_s = types.KeyboardButton("–°–∫—Ä–∏–ø—Ç —Å –ö–ê–¢–í –Ω–∞ –¢–í+")
#         markup_s.add(button1_s, button2_s, button3_s, button4_s, button5_s, button6_s)
#         bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–µ—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_s)
#     elif message.text == "–ù–õ–¢-2022":
#         markup_s = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
#         button1_s = types.KeyboardButton("2022 –ù–õ–¢_Bereket A –¥–ª—è –¶–†–ö")
#         button2_s = types.KeyboardButton("2022 –ù–õ–¢_Bereket –ê –¥–ª—è –¶–ê–ü")
#         button3_s = types.KeyboardButton("2022 –ù–õ–¢_–ö–µ—Ä–µ–º–µ—Ç TV –¥–ª—è –¶–ê–ü")
#         button4_s = types.KeyboardButton("2022 –ù–õ–¢_–ö–µ—Ä–µ–º–µ—Ç TV –¥–ª—è –¶–†–ö")
#         button5_s = types.KeyboardButton("2022 –ù–õ–¢_–ö–µ—Ä–µ–º–µ—Ç –ú–æbile –¥–ª—è –¶–ê–ü")
#         button6_s = types.KeyboardButton("2022 –ù–õ–¢_–ö–µ—Ä–µ–º–µ—Ç –ú–æbile –¥–ª—è –¶–†–ö")
#         markup_s.add(button1_s, button2_s, button3_s, button4_s, button5_s, button6_s)
#         bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–µ—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_s)
#     elif message.text == "–¢–∞—Ä–∏—Ñ—ã":
#         markup_s = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
#         button1_s = types.KeyboardButton("Save Desk - –¢–∞—Ä–∏—Ñ—ã –¥–ª—è —É–¥–µ—Ä–∂–∞–Ω–∏—è")
#         button2_s = types.KeyboardButton("–†–∞–∑–¥–∞—Ç–æ—á–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª, –ü—Ä–∏–∫–∞–∑ 210")
#         button3_s = types.KeyboardButton("–î–µ–π—Å—Ç–≤—É—é—â–∏–µ –ø–∞–∫–µ—Ç—ã 2022")
#         button4_s = types.KeyboardButton("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∏–¥—ã —É—Å–ª—É–≥ –∏ —Å–µ—Ä–≤–∏—Å–æ–≤")
#         button5_s = types.KeyboardButton("–¢–∞—Ä–∏—Ñ—ã –Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –¥–æ—Å—Ç—É–ø–∞ –∫ —É—Å–ª—É–≥–∞–º")
#         button6_s = types.KeyboardButton("–¢–∞—Ä–∏—Ñ—ã –Ω–∞ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç")
#         button7_s = types.KeyboardButton("–¢–∞—Ä–∏—Ñ—ã –Ω–∞ —É—Å–ª—É–≥–∏ –º–æ–±–∏–ª—å–Ω–æ–π —Å–≤—è–∑–∏")
#         markup_s.add(button1_s, button2_s, button3_s, button4_s, button5_s, button6_s, button7_s)
#         bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–µ—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_s)
#     elif message.text == "–ù–†–î":
#         markup_s = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
#         button1_s = types.KeyboardButton("–°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –°–û")
#         button2_s = types.KeyboardButton("–ü—É–±–ª–∏—á–Ω—ã–π –¥–æ–≥–æ–≤–æ—Ä")
#         button3_s = types.KeyboardButton("–ü—Ä–∞–≤–∏–ª–∞ –∫–ª–∞—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ª–∏—Ü–µ–≤—ã—Ö —Å—á–µ—Ç–æ–≤")
#         markup_s.add(button1_s, button2_s, button3_s)
#         bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–µ—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_s)
#     elif message.text == "Save Desk - –¢–∞—Ä–∏—Ñ—ã –¥–ª—è —É–¥–µ—Ä–∂–∞–Ω–∏—è":
#         bot.send_document(message.chat.id, open("files/Save Desk-–¢–∞—Ä–∏—Ñ—ã –¥–ª—è —É–¥–µ—Ä–∂–∞–Ω–∏—è.pdf", 'rb'))
#     elif message.text == "–†–∞–∑–¥–∞—Ç–æ—á–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª, –ü—Ä–∏–∫–∞–∑ 210":
#         bot.send_document(message.chat.id,
#                           open("files/–†–∞–∑–¥–∞—Ç–æ—á–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª, —Å 01.08.2023, –ü—Ä–∏–∫–∞–∑ 210 –æ—Ç 28.07.2023.xlsx", 'rb'))
#     elif message.text == "–î–µ–π—Å—Ç–≤—É—é—â–∏–µ –ø–∞–∫–µ—Ç—ã 2022":
#         bot.send_document(message.chat.id, open("files/–ö–∞–∑-12 –î–µ–π—Å—Ç–≤—É—é—â–∏–µ –ø–∞–∫–µ—Ç—ã 2022.pdf", 'rb'))
#     elif message.text == "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∏–¥—ã —É—Å–ª—É–≥ –∏ —Å–µ—Ä–≤–∏—Å–æ–≤":
#         bot.send_document(message.chat.id, open("files/–ö–∞–∑-8-–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∏–¥—ã —É—Å–ª—É–≥ –∏ —Å–µ—Ä–≤–∏—Å–æ–≤.pdf", 'rb'))
#     elif message.text == "–¢–∞—Ä–∏—Ñ—ã –Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –¥–æ—Å—Ç—É–ø–∞ –∫ —É—Å–ª—É–≥–∞–º":
#         bot.send_document(message.chat.id, open("files/–ö–∞–∑-4-–¢–∞—Ä–∏—Ñ—ã –Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –¥–æ—Å—Ç—É–ø–∞ –∫ —É—Å–ª—É–≥–∞–º.pdf", 'rb'))
#     elif message.text == "–¢–∞—Ä–∏—Ñ—ã –Ω–∞ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç":
#         bot.send_document(message.chat.id, open("files/–ö–∞–∑ 7-–¢–∞—Ä–∏—Ñ—ã –Ω–∞ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç.pdf", 'rb'))
#     elif message.text == "–¢–∞—Ä–∏—Ñ—ã –Ω–∞ —É—Å–ª—É–≥–∏ –º–æ–±–∏–ª—å–Ω–æ–π —Å–≤—è–∑–∏":
#         bot.send_document(message.chat.id, open("files/–ö–∞–∑ 3-–¢–∞—Ä–∏—Ñ—ã –Ω–∞ —É—Å–ª—É–≥–∏ –º–æ–±–∏–ª—å–Ω–æ–π —Å–≤—è–∑–∏.pdf", 'rb'))
#     elif message.text == "2022 –ù–õ–¢_Bereket A –¥–ª—è –¶–†–ö":
#         bot.send_document(message.chat.id, open("files/2022 –ù–õ–¢_Bereket A –¥–ª—è –¶–†–ö.pdf", 'rb'))
#     elif message.text == "2022 –ù–õ–¢_Bereket –ê –¥–ª—è –¶–ê–ü":
#         bot.send_document(message.chat.id, open("files/2022 –ù–õ–¢_Bereket –ê –¥–ª—è –¶–ê–ü.pdf", 'rb'))
#     elif message.text == "2022 –ù–õ–¢_–ö–µ—Ä–µ–º–µ—Ç TV –¥–ª—è –¶–ê–ü":
#         bot.send_document(message.chat.id, open("files/2022 –ù–õ–¢_–ö–µ—Ä–µ–º–µ—Ç TV –¥–ª—è –¶–ê–ü.pdf", 'rb'))
#     elif message.text == "2022 –ù–õ–¢_–ö–µ—Ä–µ–º–µ—Ç TV –¥–ª—è –¶–†–ö":
#         bot.send_document(message.chat.id, open("files/2022 –ù–õ–¢_–ö–µ—Ä–µ–º–µ—Ç TV  –¥–ª—è –¶–†–ö.pdf", 'rb'))
#     elif message.text == "2022 –ù–õ–¢_–ö–µ—Ä–µ–º–µ—Ç –ú–æbile –¥–ª—è –¶–ê–ü":
#         bot.send_document(message.chat.id, open("files/2022 –ù–õ–¢_–ö–µ—Ä–µ–º–µ—Ç –ú–æbile –¥–ª—è –¶–ê–ü.pdf", 'rb'))
#     elif message.text == "2022 –ù–õ–¢_–ö–µ—Ä–µ–º–µ—Ç –ú–æbile –¥–ª—è –¶–†–ö":
#         bot.send_document(message.chat.id, open("files/2022 –ù–õ–¢_–ö–µ—Ä–µ–º–µ—Ç –ú–æbile  –¥–ª—è –¶–†–ö.pdf", 'rb'))
#     elif message.text == "–¢–µ–∫—Å—Ç SMS —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è":
#         bot.send_document(message.chat.id, open("files/–¢–µ–∫—Å—Ç SMS —É–≤–µ–¥, –∫–∞–∑ –∏ —Ä—É—Å.pdf", 'rb'))
#     elif message.text == "–ü–æ–≤—ã—à–µ–Ω–∏–µ –¢–∞—Ä–∏—Ñ–æ–≤, –°–∫—Ä–∏–ø—Ç":
#         bot.send_document(message.chat.id, open("files/–ü–æ–≤—ã—à–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤, –°–∫—Ä–∏–ø—Ç - —Å 1 –∞–≤–≥—É—Å—Ç–∞ 2023.pdf", 'rb'))
#     elif message.text == "–°–∫—Ä–∏–ø—Ç –∑–∞–º–µ–Ω–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è":
#         bot.send_document(message.chat.id, open("files/–ü_–°–∫—Ä–∏–ø—Ç –∑–∞–º–µ–Ω–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è.pdf", 'rb'))
#     elif message.text == "–°–∫—Ä–∏–ø—Ç –∑–∞–º–µ–Ω–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –ü–°–°, –£–ü":
#         bot.send_document(message.chat.id, open("files/–ü_–°–∫—Ä–∏–ø—Ç –∑–∞–º–µ–Ω–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –ü–°–°, –£–ü.pdf", 'rb'))
#     elif message.text == "–°–∫—Ä–∏–ø—Ç —Å –ö–ê–¢–í –Ω–∞ –¢–í+":
#         bot.send_document(message.chat.id, open("files/–ö_–°–∫—Ä–∏–ø—Ç —Å –ö–ê–¢–í –Ω–∞ –¢–í+.pdf", 'rb'))
#     elif message.text == "–°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –°–û":
#         markup_s = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
#         button1_s = types.KeyboardButton("–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–ª–∏–µ–Ω—Ç, –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –°–û")
#         button2_s = types.KeyboardButton("–í–Ω–µ—à–Ω–∏–π –∫–ª–∏–µ–Ω—Ç, –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –°–û")
#         markup_s.add(button1_s, button2_s)
#         bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–µ—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_s)
#     elif message.text == "–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–ª–∏–µ–Ω—Ç, –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –°–û":
#         bot.send_document(message.chat.id, open("files/–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–ª–∏–µ–Ω—Ç, –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –°–û.pdf", 'rb'))
#     elif message.text == "–í–Ω–µ—à–Ω–∏–π –∫–ª–∏–µ–Ω—Ç, –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –°–û":
#         bot.send_document(message.chat.id, open("files/–í–Ω–µ—à–Ω–∏–π –∫–ª–∏–µ–Ω—Ç, –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –°–û.pdf", 'rb'))
#     elif message.text == "–ü—É–±–ª–∏—á–Ω—ã–π –¥–æ–≥–æ–≤–æ—Ä":
#         markup_s = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
#         button1_s = types.KeyboardButton("–ü—É–±–ª–∏—á–Ω—ã–π –¥–æ–≥–æ–≤–æ—Ä —Ä—É—Å")
#         button2_s = types.KeyboardButton("–ü—É–±–ª–∏—á–Ω—ã–π –¥–æ–≥–æ–≤–æ—Ä –∫–∞–∑")
#         markup_s.add(button1_s, button2_s)
#         bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–µ—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_s)
#     elif message.text == "–ü—É–±–ª–∏—á–Ω—ã–π –¥–æ–≥–æ–≤–æ—Ä —Ä—É—Å":
#         bot.send_document(message.chat.id, open("files/–ü—É–±–ª–∏—á–Ω—ã–π –¥–æ–≥–æ–≤–æ—Ä —Ä—É—Å.pdf", 'rb'))
#     elif message.text == "–ü—É–±–ª–∏—á–Ω—ã–π –¥–æ–≥–æ–≤–æ—Ä –∫–∞–∑":
#         bot.send_document(message.chat.id, open("files/–ü—É–±–ª–∏—á–Ω—ã–π –¥–æ–≥–æ–≤–æ—Ä –∫–∞–∑.pdf", 'rb'))
#     elif message.text == "–ü—Ä–∞–≤–∏–ª–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ª–∏—Ü–µ–≤—ã—Ö —Å—á–µ—Ç–æ–≤ —Ä—É—Å":
#         markup_s = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
#         button1_s = types.KeyboardButton("–ü—É–±–ª–∏—á–Ω—ã–π –¥–æ–≥–æ–≤–æ—Ä —Ä—É—Å")
#         button2_s = types.KeyboardButton("–ü—É–±–ª–∏—á–Ω—ã–π –¥–æ–≥–æ–≤–æ—Ä –∫–∞–∑")
#         markup_s.add(button1_s, button2_s)
#         bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–µ—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_s)
#     elif message.text == "–ü—Ä–∞–≤–∏–ª–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ª–∏—Ü–µ–≤—ã—Ö —Å—á–µ—Ç–æ–≤ —Ä—É—Å":
#         bot.send_document(message.chat.id, open("files/–ü—Ä–∞–≤–∏–ª–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ª–∏—Ü–µ–≤—ã—Ö —Å—á–µ—Ç–æ–≤ —Ä—É—Å.pdf", 'rb'))
#     elif message.text == "–ü—Ä–∞–≤–∏–ª–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ª–∏—Ü–µ–≤—ã—Ö —Å—á–µ—Ç–æ–≤ –∫–∞–∑":
#         bot.send_document(message.chat.id, open("files/–ü—Ä–∞–≤–∏–ª–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ª–∏—Ü–µ–≤—ã—Ö —Å—á–µ—Ç–æ–≤ –∫–∞–∑.pdf", 'rb'))
#     elif message.text == "–ö–∞–∫ –æ–ø–ª–∞—Ç–∏—Ç—å —É—Å–ª—É–≥—É":
#         bot.send_document(message.chat.id, document=open("files/–ö–∞–∫ –æ–ø–ª–∞—Ç–∏—Ç—å —É—Å–ª—É–≥–∏ –ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º.pdf", 'rb'))
#     elif message.text == "–ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ –¥–µ—Ç–∞–ª—è—Ö –æ–ø–ª–∞—Ç—ã":
#         bot.send_document(message.chat.id,
#                           document=open("files/–ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–µ—Ç–∞–ª—è—Ö –æ–ø–ª–∞—Ç—ã.pdf", 'rb'))
#     elif message.text == "–ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏":
#         bot.send_document(message.chat.id, document=open("files/–ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏.pdf", 'rb'))
#     elif message.text == "–†–∞–∑–¥–µ–ª '–ú–æ–∏ –£—Å–ª—É–≥–∏'":
#         bot.send_document(message.chat.id, document=open("files/–†–ê–ó–î–ï–õ ¬´–ú–û–ò –£–°–õ–£–ì–ò¬ª (1).pdf", 'rb'))

def glossary(bot, message):
    text1 = f"–ü–æ –í–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ωa–π–¥e–Ωo —Å–ª–µ–¥—É—é—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏–µ:"
    text2 = ("–ü–æ–º–æ–≥–∏—Ç–µ –Ω–∞–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ!\n–ñ–¥–µ–º –≤–∞—à–µ–≥–æ –º–Ω–µ–Ω–∏—è –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π.\n\n"
             "–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–º –í–∞—à—É –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É '–Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ' –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏–≤ –ø–∏—Å—å–º–æ –Ω–∞ "
             "info.ktcu@telecom.kz.")
    button_text = "–ù–∞–ø–∏—Å–∞—Ç—å –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—É"
    common_file.glossary(bot, message, text1, text2, button_text)


def profile(bot, message):
    markup_ap = types.InlineKeyboardMarkup(row_width=1)
    button1_ap = types.InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –ò–º—è", callback_data="–ò–∑–º–µ–Ω–∏—Ç—å –ò–º—è")
    button2_ap = types.InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –§–∞–º–∏–ª–∏—é", callback_data="–ò–∑–º–µ–Ω–∏—Ç—å –§–∞–º–∏–ª–∏—é")
    button3_ap = types.InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", callback_data="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
    button4_ap = types.InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å email", callback_data="–ò–∑–º–µ–Ω–∏—Ç—å email")
    button5_ap = types.InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä", callback_data="–ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä")
    button6_ap = types.InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª–∏–∞–ª", callback_data="–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª–∏–∞–ª")
    markup_ap.add(button1_ap, button2_ap, button3_ap, button4_ap, button5_ap, button6_ap)
    user_info = get_user(message.chat.id)
    bot.send_message(message.chat.id, f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n\n"
                                      f"–ò–º—è: {user_info[3]}\n"
                                      f"–§–∞–º–∏–ª–∏—è: {user_info[2]}\n"
                                      f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {user_info[5]}\n"
                                      f"Email: {user_info[6]}\n"
                                      f"–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä: {user_info[4]}\n"
                                      f"–§–∏–ª–∏–∞–ª: {user_info[7]}",
                     reply_markup=markup_ap)


def questions(bot, message):
    button_q = types.KeyboardButton("–ú–æ–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è")
    button_q1 = types.KeyboardButton("–û—Å—Ç–∞–≤–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ")
    button_q2 = types.KeyboardButton("–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
    markup_q = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
    markup_q.add(button_q2, button_q1, button_q)
    bot.send_message(str(message.chat.id), "B –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ –í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∏–ª–∏ "
                                           "–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã", reply_markup=markup_q)
    time.sleep(0.75)
    bot.send_message(message.chat.id, "Ec–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥, —Ç–æ –≤–≤–µ–¥–∏—Ç–µ /menu –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ /menu "
                                      "–≤ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥ —Å–ª–µ–≤–∞ –æ—Ç —Å—Ç—Ä–æ–∫–∏ –≤–≤–æ–¥–∞.")


def portal(bot, message):
    message_text = message.text
    if message_text == 'üñ•–ü–æ—Ä—Ç–∞–ª "–ë—ñ—Ä–ª—ñ–∫"':
        markup_p = types.ReplyKeyboardMarkup(row_width=1, one_time_keyboard=True, )
        markup_p = generate_buttons(portal_bts, markup_p)
        bot.send_message(str(message.chat.id), "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_p)
    elif message_text == portal_bts[0]:
        with open("images/Birlik_BG.jpg", 'rb') as photo_file:
            bot.send_photo(message.chat.id, photo_file)
        bot.send_message(str(message.chat.id), "–ü–æ—Ä—Ç–∞–ª —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ '–ë—ñ—Ä–ª—ñ–∫' - –µ–¥–∏–Ω–∞—è –∏–Ω—Ç—Ä–∞–Ω–µ—Ç —Å–∏—Å—Ç–µ–º–∞, —Å–æ–∑–¥–∞–Ω–Ω–∞—è –≤ "
                                               "—Ä–∞–º–∫–∞—Ö —Ñ–æ–∫—É—Å–æ–≤ —Ü–∏—Ñ—Ä–æ–≤–æ–π —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ –ê–û "
                                               "'–ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º'.\n"
                                               "–†–∞–∑–¥–µ–ª—ã –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –∏ —Ä–∞–∑–≤–∏–≤–∞—é—Ç—Å—è –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ:\n"
                                               "‚ñ™ –ü—Ä–æ—Ñ–∏–ª—å\n"
                                               "‚ñ™ –ù–æ–≤–æ—Å—Ç–∏\n"
                                               "‚ñ™ –°–æ–æ–±—â–µ—Å—Ç–≤–∞\n"
                                               "‚ñ™ –ö–∞–ª–µ–Ω–¥–∞—Ä—å\n"
                                               "‚ñ™ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –∫–∞—Ä—Ç–æ—á–∫–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π\n"
                                               "‚ñ™ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫\n"
                                               "‚ñ™ –ê—Ñ–∏—à–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π\n"
                                               "‚ñ™ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ –æ—Ñ–∏—Å–∞\n"
                                               "‚ñ™ –û–ø—Ä–æ—Å—ã –∏ —Ç–µ—Å—Ç—ã\n"
                                               "‚ñ™ –ú–∞—Ä–∫–µ—Ç –∏ —Å–∏—Å—Ç–µ–º–∞ –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏\n\n"
                                               "–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ø–æ—Ä—Ç–∞–ª–∞ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ '–ë—ñ—Ä–ª—ñ–∫':\n"
                                               "-     –ï–¥–∏–Ω–æ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ\n"
                                               "–ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –Ω—É–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n"
                                               "–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ –∏ –∫–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞\n"
                                               "–£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π –∫—É–ª—å—Ç—É—Ä—ã –∏ —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π –∫–æ–º–ø–∞–Ω–∏–∏\n"
                                               "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤–Ω–µ—à–Ω–∏—Ö –º–æ–¥—É–ª–µ–π –≤ –µ–¥–∏–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ")
    elif message_text == portal_[0]:
        markup_p = types.InlineKeyboardMarkup()
        button_p = types.InlineKeyboardButton("–ù—É–∂–µ–Ω checkpoint?", callback_data="checkPoint")
        markup_p.add(button_p)
        bot.send_message(str(message.chat.id), "–ö–∞–∫ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ –Ω–∞ IOS –∏ Android | "
                                               "portal.telecom.kz\nhttps://youtu.be/WJdS1aIBe1I", reply_markup=markup_p)
    # elif message_text == portal_bts[3]:
    #     markup_p = types.ReplyKeyboardMarkup(row_width=1, one_time_keyboard=True, )
    #     markup_p = db_connect.generate_buttons(portal_guide, markup_p)
    #     bot.send_message(str(message.chat.id), "–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å", reply_markup=markup_p)
    elif message_text == portal_bts[2]:
        set_category(message, '–ü–æ—Ä—Ç–∞–ª "–ë—ñ—Ä–ª—ñ–∫"')
        appeal(bot, message, message_text)
    else:
        if checkpoint(bot, message, message_text):
            return
        check_portal_guide(bot, message, message_text, portal_guide)


def checkpoint(bot, message, message_text):
    if message_text == portal_bts[1]:
        markup_portal = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
        button1 = types.KeyboardButton(portal_[0])
        button2 = types.KeyboardButton(portal_[1])
        markup_portal.add(button1, button2)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_portal)
    elif message_text == portal_[1]:
        markup_pk = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
        button1_p = types.KeyboardButton("–ö–∞–∫ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è")
        button2_p = types.KeyboardButton("–õ–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å")
        button3_p = types.KeyboardButton("–ò–∑ –ø–æ—Ä—Ç–∞–ª–∞ –ø–µ—Ä–µ–π—Ç–∏ –≤ –°–°–ü")
        markup_pk.add(button1_p, button2_p, button3_p)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_pk)
    elif message_text == portal_[2]:
        bot.send_message(message.chat.id, "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '–ö–∞–∫ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ "
                                          "—Ä–∞–±–æ—Ç–Ω–∏–∫–∞ —á–µ—Ä–µ–∑ –ü–ö?' –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ "
                                          "\nhttps://youtu.be/vsRIDqt_-1A")
    elif message_text == portal_[3]:
        bot.send_message(message.chat.id, "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '–ö–∞–∫ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –ª–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å?' "
                                          "–ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ \nhttps://youtu.be/V9r3ALrIQ48")
    elif message_text == portal_[4]:
        bot.send_message(message.chat.id, "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '–ö–∞–∫ –ø–µ—Ä–µ–π—Ç–∏ –∏–∑ –ø–æ—Ä—Ç–∞–ª–∞ –ø–µ—Ä–µ–π—Ç–∏ –≤ –°–°–ü'"
                                          " –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ \nhttps://youtu.be/wnfI4JpMvmE")
    else:
        return False
    return True


subscriber_types = ['–ù–æ–≤—ã–π', '–î–µ–π—Å—Ç–≤—É—é—â–∏–π']
lte_files = ["–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è '–ü–∏–ª–æ—Ç LTE'", "–ö–∞–∫ –ø–æ–¥–ø–∏—Å–∞—Ç—å –¥–æ–≥–æ–≤–æ—Ä –æ–Ω–ª–∞–π–Ω", "–°–∫—Ä–∏–ø—Ç –Ω–∞ –ê–ª–µ–º",
             "–ê–∫—Ç —Å–¥–∞—á–∏-–ø—Ä–∏–µ–º–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç", "–¢–∞—Ä–∏—Ñ—ã"]


def lte(message, bot, message_text=None):
    if message_text is None:
        message_text = message.text
    if message.text == lte_[0]:
        markup_l = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
        button1_l = types.KeyboardButton(lte_[1])
        button2_l = types.KeyboardButton(lte_[2])
        button3_l = types.KeyboardButton(lte_[3])
        button4_l = types.KeyboardButton(lte_[4])
        markup_l.add(button1_l, button2_l, button3_l, button4_l)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup_l)
    elif message.text == lte_[1]:
        bot.send_message(message.chat.id,
                         """
–ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ–º –≤–∞–º –ø—Ä–æ–µ–∫—Ç "–ü–∏–ª–æ—Ç LTE", –Ω–∞—Ü–µ–ª–µ–Ω–Ω—ã–π –Ω–∞ —É–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –Ω–∞—à–µ–π –ø–æ–∑–∏—Ü–∏–∏ –Ω–∞ —Ä—ã–Ω–∫–µ –∏ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂ –≤ —Å–µ–≥–º–µ–Ω—Ç–µ LTE. 

–ù–∞—à–∞ —Ü–µ–ª—å
–î–æ—Å—Ç–∏—á—å –Ω–æ–≤—ã—Ö –≤—ã—Å–æ—Ç –≤ –ø—Ä–æ–¥–∞–∂–∞—Ö –∏ —É–≤–µ–ª–∏—á–∏—Ç—å –Ω–∞—à—É –¥–æ–ª—é –Ω–∞ —Ä–∞—Å—Ç—É—â–µ–º —Ä—ã–Ω–∫–µ LTE.

–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
–¥–æ 31.12.2023 –≥–æ–¥–∞.

–£—á–∞—Å—Ç–Ω–∏–∫–∏
 - –ø–æ –ø—Ä–æ–¥–∞–∂–µ —É—Å–ª—É–≥    –∏ ¬´LTE¬ª, –ø—Ä–æ–µ–∫—Ç –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã—Ö –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π –î–∏–≤–∏–∑–∏–æ–Ω–∞ –ø–æ —Ä–æ–∑–Ω–∏—á–Ω–æ–º—É –±–∏–∑–Ω–µ—Å—É –ê–û "–ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º", –∏—Å–∫–ª—é—á–∞—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ï–ú–ü.
  - –ø–æ –¥–æ—Å—Ç–∞–≤–∫–µ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è, –ø—Ä–æ–µ–∫—Ç –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã—Ö –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π –î–∏–≤–∏–∑–∏–æ–Ω–∞ –ø–æ —Ä–æ–∑–Ω–∏—á–Ω–æ–º—É –±–∏–∑–Ω–µ—Å—É –ê–û "–ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º", –∏—Å–∫–ª—é—á–∞—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ï–ú–ü, –∫—Ä–æ–º–µ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –∫–∞–Ω–∞–ª–∞ –ø—Ä–æ–¥–∞–∂ ¬´–£–ü¬ª –∏ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –û—Ç–¥–µ–ª–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–Ω–µ—à–Ω–∏–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏ –ø—Ä–æ–¥–∞–∂

–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–∏—è –≤ –ø—Ä–æ–µ–∫—Ç–µ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, —á—Ç–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å —Å–≤–æ–π –¥–æ—Ö–æ–¥, –ø–æ–ª—É—á–∞—è —Å–ª–µ–¥—É—é—â–∏–µ –±–æ–Ω—É—Å—ã:
 - 2500 —Ç–µ–Ω–≥–µ –∑–∞ —É—Å–ø–µ—à–Ω—É—é –ø—Ä–æ–¥–∞–∂—É —É—Å–ª—É–≥–∏ LTE.
 - 1591 —Ç–µ–Ω–≥–µ –∑–∞ –¥–æ—Å—Ç–∞–≤–∫—É –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –º–æ–¥–µ–º–∞ –∏ —Å–∏–º-–∫–∞—Ä—Ç—ã.
 - 
–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ "–ü–∏–ª–æ—Ç—É LTE" –∏ –ø–æ–º–æ–≥–∏—Ç–µ –Ω–∞–º –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤—ã—Ö —É—Å–ø–µ—Ö–æ–≤ –Ω–∞ —Ä—ã–Ω–∫–µ, –∞ —Ç–∞–∫–∂–µ —É–≤–µ–ª–∏—á–∏—Ç—å –≤–∞—à—É –ø—Ä–∏–±—ã–ª—å. 

–í–º–µ—Å—Ç–µ –º—ã —Å–º–æ–∂–µ–º –¥–æ–±–∏—Ç—å—Å—è –±–æ–ª—å—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤!""")
    elif message.text == lte_[2]:
        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
        button1 = types.KeyboardButton(lte_files[0])
        button2 = types.KeyboardButton(lte_files[1])
        button3 = types.KeyboardButton(lte_files[2])
        button4 = types.KeyboardButton(lte_files[3])
        button5 = types.KeyboardButton(lte_files[4])
        markup.add(button1, button2, button3, button4, button5)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª", reply_markup=markup)
    elif message_text == lte_[3]:
        id_ = add_internal_sale(str(message.chat.id))
        markup_lte = types.ReplyKeyboardMarkup(one_time_keyboard=True)
        markup_lte = generate_buttons(subscriber_types, markup_lte)
        msg = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∞–±–æ–Ω–µ–Ω—Ç–∞", reply_markup=markup_lte)
        bot.register_next_step_handler(msg, add_subscriber, bot, id_)
    elif message_text == lte_[4]:
        markup_a = db_connect.my_lte(message.chat.id)
        if markup_a.keyboard:
            bot.send_message(message.chat.id, "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å—ã –≤–∞—à–∏—Ö –ø—Ä–æ–¥–∞–∂",
                             reply_markup=markup_a)
        else:
            bot.send_message(message.chat.id, "–ü—Ä–æ–¥–∞–∂ –Ω–µ –±—ã–ª–æ")
    elif message_text == lte_files[0]:
        bot.send_document(message.chat.id, open('files/–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ü–∏–ª–æ—Ç LTE.pdf', 'rb'))
    elif message_text == lte_files[1]:
        bot.send_document(message.chat.id, open('files/–ö–∞–∫ –ø–æ–¥–ø–∏—Å–∞—Ç—å –¥–æ–≥–æ–≤–æ—Ä –æ–Ω–ª–∞–π–Ω.pdf', 'rb'))
    elif message_text == lte_files[2]:
        bot.send_document(message.chat.id, open('files/–°–∫—Ä–∏–ø—Ç –Ω–∞ –ê–ª–µ–º.docx', 'rb'))
        bot.send_document(message.chat.id, open('files/–°–∫—Ä–∏–ø—Ç –Ω–∞ –ê–ª–µ–º.pdf', 'rb'))
    elif message_text == lte_files[3]:
        bot.send_document(message.chat.id, open('files/–ê–∫—Ç —Å–¥–∞—á–∏-–ø—Ä–∏–µ–º–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç, '
                                                '–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤.docx', 'rb'))
        bot.send_document(message.chat.id, open('files/–û—Ä—ã–Ω–¥–∞–ª“ì–∞–Ω –∂“±–º—ã—Å—Ç–∞—Ä–¥—ã, –∂–∞–±–¥—ã“õ—Ç–∞—Ä –º–µ–Ω –º–∞—Ç–µ—Ä–∏–∞–ª–¥–∞—Ä–¥—ã “õ–∞–±—ã–ª–¥–∞—É '
                                                '”©—Ç–∫—ñ–∑—É –∞–∫—Ç—ñ—Å—ñ.docx', 'rb'))
    elif message_text == lte_files[4]:
        bot.send_document(message.chat.id, open('files/–¢–∞—Ä–∏—Ñ—ã.pdf', 'rb'))


def add_subscriber(message, bot, id_i_s):
    if redirect(bot, message, id_i_s):
        return
    if message.text not in subscriber_types:
        markup_lte = types.ReplyKeyboardMarkup(one_time_keyboard=True)
        markup_lte = generate_buttons(subscriber_types, markup_lte)
        msg = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∞–±–æ–Ω–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞", reply_markup=markup_lte)
        bot.register_next_step_handler(msg, add_subscriber, bot, id_i_s)
        return
    set_subscriber_type(id_i_s, message.text)
    regions = get_regions()
    markup_l = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    markup_l = generate_buttons(regions, markup_l)
    msg = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω", reply_markup=markup_l)
    bot.register_next_step_handler(msg, get_region, bot, id_i_s, regions)


def get_region(message, bot, id_i_s, regions):
    if redirect(bot, message, id_i_s):
        return
    if message.text not in regions:
        markup_l = types.ReplyKeyboardMarkup(one_time_keyboard=True)
        markup_l = generate_buttons(regions, markup_l)
        msg = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞", reply_markup=markup_l)
        bot.register_next_step_handler(msg, get_region, bot, id_i_s, regions)
        return
    performer_id = get_performer_by_category(message.text)[0]
    set_category_i_s(id_i_s, message.text)
    set_performer_id_i_s(id_i_s, performer_id)
    markup_l = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    markup_l.add(types.KeyboardButton("–î–∞"), types.KeyboardButton("–ù–µ—Ç"))
    msg = bot.send_message(message.chat.id,
                           "–ê–±–æ–Ω–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏  –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–∏—Ö –∫–æ–¥–æ–≤/SMS —Ä–∞–±–æ—Ç–Ω–∏–∫—É –æ—Ç–¥–µ–ª–∞ CRM "
                           "–∏ –ö–°: \n–∫–æ–¥ –¥–ª—è —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤;\nSMS –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–æ–º–µ—Ä–∞;\n–∫–æ–¥ –¥–ª—è –∞–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∞–Ω–∏—è "
                           "–±–ª–∞–Ω–∫–∞ –∑–∞—è–≤–ª–µ–Ω–∏—è.", reply_markup=markup_l)
    bot.register_next_step_handler(msg, get_is_notified, bot, id_i_s)


def get_is_notified(message, bot, id_i_s):
    if redirect(bot, message, id_i_s):
        return
    if message.text != "–ù–µ—Ç" and message.text != "–î–∞":
        markup_l = types.ReplyKeyboardMarkup(one_time_keyboard=True)
        markup_l.add(types.KeyboardButton("–î–∞"), types.KeyboardButton("–ù–µ—Ç"))
        msg = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞", reply_markup=markup_l)
        bot.register_next_step_handler(msg, get_is_notified, bot, id_i_s)
        return
    is_notified = True
    if message.text == "–ù–µ—Ç":
        is_notified = False
    set_is_notified(id_i_s, is_notified)
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –§–ò–û –∞–±–æ–Ω–µ–Ω—Ç–∞")
    bot.register_next_step_handler(msg, get_full_name, bot, id_i_s)


def get_full_name(message, bot, id_i_s):
    if redirect(bot, message, id_i_s):
        return
    set_full_name(id_i_s, message.text)
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ò–ò–ù")
    bot.register_next_step_handler(msg, get_iin, bot, id_i_s)


def get_iin(message, bot, id_i_s):
    if redirect(bot, message, id_i_s):
        return
    if not message.text.isdigit() or len(message.text) != 12:
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —à–∞–±–ª–æ–Ω—É –ò–ò–ù, –≤–≤–µ–¥–∏—Ç–µ –µ—â–µ —Ä–∞–∑")
        bot.register_next_step_handler(msg, get_iin, bot, id_i_s)
        return
    set_iin(id_i_s, message.text)
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
    bot.register_next_step_handler(msg, get_phone_num_i_s, bot, id_i_s)


def get_phone_num_i_s(message, bot, id_i_s):
    if redirect(bot, message, id_i_s):
        return
    pattern = r'^(\+?7|8)(\d{10})$'
    if not re.match(pattern, message.text):
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —à–∞–±–ª–æ–Ω—É 87001110000")
        bot.register_next_step_handler(msg, get_phone_num_i_s, bot, id_i_s)
        return
    set_phone_num_subscriber(id_i_s, message.text)
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∞–±–æ–Ω–µ–Ω—Ç–∞")
    bot.register_next_step_handler(msg, get_address_subscriber, bot, id_i_s)


def get_address_subscriber(message, bot, id_i_s):
    if redirect(bot, message, id_i_s):
        return
    set_subscriber_address(id_i_s, message.text)
    markup_l = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
    markup_l = generate_buttons(pp, markup_l)
    msg = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ü–ü –∏–∑ —Å–ø–∏—Å–∫–∞", reply_markup=markup_l)
    bot.register_next_step_handler(msg, get_pp, bot, id_i_s)


delivery = ["–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ", "–°–∏–ª–∞–º–∏ –¥—Ä—É–≥–æ–≥–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"]
arr = ["–Ø –ø—Ä–æ–¥–∞–ª!", "–Ø –¥–æ—Å—Ç–∞–≤–∏–ª!"]


def get_pp(message, bot, id_i_s):
    if redirect(bot, message, id_i_s):
        return
    if message.text not in pp:
        markup_l = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
        markup_l = generate_buttons(pp, markup_l)
        msg = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ü–ü –∏–∑ —Å–ø–∏—Å–∫–∞", reply_markup=markup_l)
        bot.register_next_step_handler(msg,  get_pp, bot, id_i_s)
        return
    set_product_name(id_i_s, message.text)
    markup_l = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
    markup_l = generate_buttons(arr, markup_l)
    msg = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=markup_l)
    bot.register_next_step_handler(msg, func_lte, bot, id_i_s)


def func_lte(message, bot, id_i_s):
    if redirect(bot, message, id_i_s):
        return
    if message.text not in arr:
        markup_l = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
        markup_l = generate_buttons(arr, markup_l)
        msg = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=markup_l)
        bot.register_next_step_handler(msg, func_lte, bot, id_i_s)
        return
    if message.text == arr[0]:
        markup_l = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
        markup_l = generate_buttons(delivery, markup_l)
        set_action(id_i_s, "–ü—Ä–æ–¥–∞–∂–∞")
        msg = bot.send_message(message.chat.id, "–ö–∞–∫ –±—É–¥–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞?", reply_markup=markup_l)
        bot.register_next_step_handler(msg, get_delivery, bot, id_i_s)
    else:
        set_action(id_i_s, "–î–æ—Å—Ç–∞–≤–∫–∞")
        set_delivery(id_i_s, delivery[0])
        add_lte_appeal(bot, message, id_i_s)


def get_delivery(message, bot, id_i_s):
    if redirect(bot, message, id_i_s):
        return
    if message.text not in delivery:
        markup_l = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1)
        markup_l = generate_buttons(delivery, markup_l)
        msg = bot.send_message(message.chat.id, "–ö–∞–∫ –±—É–¥–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞?", reply_markup=markup_l)
        bot.register_next_step_handler(msg, get_delivery, bot, id_i_s)
        return
    set_delivery(id_i_s, message.text)
    add_lte_appeal(bot, message, id_i_s)


def get_simcard(message, bot, id_i_s):
    if redirect(bot, message, id_i_s):
        return
    set_simcard(id_i_s, message.text)
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä –º–æ–¥–µ–º–∞")
    bot.register_next_step_handler(msg, get_modem, bot, id_i_s)


def get_modem(message, bot, id_i_s):
    if redirect(bot, message, id_i_s):
        return
    set_modem(id_i_s, message.text)
    appeal_ = db_connect.get_appeal_by_lte_id(id_i_s)
    simcard = lteClass.get_simcard(id_i_s)
    lte_info = db_connect.get_sale(id_i_s)
    is_notified = "–î–∞"
    if not lte_info[7]:
        is_notified = "–ù–µ—Ç"
    text = f"\n\t–§–ò–û –∞–±–æ–Ω–µ–Ω—Ç–∞: {lte_info[3]}\n" \
           f"\t–ò–ò–ù: {lte_info[4]}\n" \
           f"\t–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∞–±–æ–Ω–µ–Ω—Ç–∞: {lte_info[5]}\n" \
           f"\t–¢–∏–ø –∞–±–æ–Ω–µ–Ω—Ç–∞: {lte_info[6]}\n" \
           f"\t–£–≤–µ–¥–æ–º–ª–µ–Ω? {is_notified}\n" \
           f"\t–ê–¥—Ä–µ—Å –∞–±–æ–Ω–µ–Ω—Ç–∞: {lte_info[8]}\n" \
           f"\t–ü–ü: {lte_info[9]}\n" \
           f"\t–î–æ—Å—Ç–∞–≤–∫–∞: {lte_info[10]}" \
           f"\n\tSimcard: {simcard}\n" \
           f"\t–ú–æ–¥–µ–º: {message.text}"
    set_appeal_text(appeal_[0], text)
    bot.send_message(message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
    appeal_info = get_appeal_by_id(appeal_[0])[0]
    text = performer_text(appeal_info)
    performer_id = performerClass.get_performer_by_id(appeal_info[7])[0][1]
    bot.send_message(performer_id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Å–µ—Ä–∏–π–Ω–æ–º—É –Ω–æ–º–µ—Ä—É —Å–∏–º –∫–∞—Ä—Ç—ã –∏ –º–æ–¥–µ–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
    bot.send_message(performer_id, text)


def menu(bot, message):
    set_bool(message, False, False)
    markup = get_markup(message)
    bot.send_message(message.chat.id, "–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é", reply_markup=markup)


def add_lte_appeal(bot, message, id_i_s):
    if redirect(bot, message, id_i_s):
        return
    lte_info = db_connect.get_sale(id_i_s)
    now = datetime.now() + timedelta(hours=5)
    now_updated = remove_milliseconds(now)
    is_notified = "–î–∞"
    if not lte_info[7]:
        is_notified = "–ù–µ—Ç"
    text = f"–§–ò–û –∞–±–æ–Ω–µ–Ω—Ç–∞: {lte_info[3]}\n" \
           f"\t–ò–ò–ù: {lte_info[4]}\n" \
           f"\t–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∞–±–æ–Ω–µ–Ω—Ç–∞: {lte_info[5]}\n" \
           f"\t–¢–∏–ø –∞–±–æ–Ω–µ–Ω—Ç–∞: {lte_info[6]}\n" \
           f"\t–£–≤–µ–¥–æ–º–ª–µ–Ω? {is_notified}\n" \
           f"\t–ê–¥—Ä–µ—Å –∞–±–æ–Ω–µ–Ω—Ç–∞: {lte_info[8]}\n" \
           f"\t–ü–ü: {lte_info[9]}\n" \
           f"\t–î–µ–π—Å—Ç–≤–∏–µ: {lte_info[14]}\n" \
           f"\t–î–æ—Å—Ç–∞–≤–∫–∞: {lte_info[10]}"
    if lte_info[10] == "–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ":
        text += f"\n\tSimcard: {is_none(lte_info[11])}\n" \
                f"\t–ú–æ–¥–µ–º: {is_none(lte_info[12])}"

    appeal_id = add_appeal(message.chat.id, '–û–±—Ä–∞—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ', lte_info[13], text, now_updated,
                           now_updated,
                           lte_info[2], ' ', False, id_i_s)
    text = get_appeal_text_all(appeal_id)
    performer_id = performerClass.get_performer_by_id(lte_info[2])[0][1]
    bot.send_message(performer_id, text)
    bot.send_message(message.chat.id, "–í–∞—à–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")


def send_verification_code(user_id, bot, message):
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    verification_code = generate_and_save_code(user_id)
    # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    text = f"–í–∞—à –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {verification_code}"
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ —á–µ—Ä–µ–∑ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é send_gmails
    common_file.send_gmails_for_verif(text, user_id, None)

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –Ω–∞ 5 –º–∏–Ω—É—Ç
    start_verification_timer(user_id, bot, message)


# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_message_history = {}


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def add_message_to_history(user_id, message_text):
    # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
    user_message_history[user_id] = user_message_history.get(user_id, [])

    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–æ 4
    if len(user_message_history[user_id]) >= 4:
        user_message_history[user_id].pop(0)  # –£–¥–∞–ª—è–µ–º —Å–∞–º–æ–µ —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    user_message_history[user_id].append(message_text)


def clear_message_history(user_id):
    if user_id in user_message_history:
        del user_message_history[user_id]

# –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
def verify_code(message, bot):
    user_id = str(message.chat.id)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–∞–π–º–µ—Ä–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ
    if user_id not in verification_timers:
        return

    # –ü–æ–ª—É—á–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥ –∏ –æ—á–∏—â–∞–µ–º –µ–≥–æ –æ—Ç –ø—Ä–æ–±–µ–ª–æ–≤
    entered_code = message.text.strip()

    # –î–µ–π—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞, –Ω–∞—á–∏–Ω–∞—é—â–∞—è—Å—è —Å "/"
    if entered_code.startswith('/'):
        # –£–¥–∞–ª—è–µ–º —Ç–∞–π–º–µ—Ä, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        verification_timers.pop(user_id, None)
        # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –º–µ–Ω—é, –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ "/menu"
        if entered_code == '/menu':
            menu(bot, message)
            return True

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞
    saved_code = str(get_saved_verification_code(user_id)).strip()

    # –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –∫–æ–¥—ã –≤ —á–∏—Å–ª–∞ –∏ —Å—Ä–∞–≤–Ω–∏—Ç—å –∏—Ö
    try:
        entered_code = int(entered_code)
        saved_code = int(saved_code)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞
        if entered_code == saved_code:
            verification_timers.pop(user_id, None)  # –£–¥–∞–ª—è–µ–º —Ç–∞–π–º–µ—Ä
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            sql_query = "UPDATE users SET is_verified = TRUE WHERE id = %s"
            params = (user_id,)
            db_connect.execute_set_sql_query(sql_query, params)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ"
            if check_registration_message_in_history(user_id):
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
                yes_button = types.KeyboardButton('–î–∞')
                no_button = types.KeyboardButton('–ù–µ—Ç')
                markup.add(yes_button, no_button)

                # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É—á–∞—Å—Ç–∏—è –≤ –æ–±—É—á–µ–Ω–∏–∏
                msg = bot.send_message(user_id, "–í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —É—á–∞—Å—Ç–∏–µ –≤ –æ–±—É—á–µ–Ω–∏–∏?", reply_markup=markup)
                bot.register_next_step_handler(msg, confirm_fin_gram, bot)

            elif check_registration_message_in_history_decl(user_id) and not get_verif_decl_status(user_id):
                sql_query = "UPDATE users SET is_verified_decl = TRUE WHERE id = %s"
                params = (user_id,)
                db_connect.execute_set_sql_query(sql_query, params)
                bot.send_message(message.chat.id, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
                menu(bot, message)
            else:
                bot.send_message(message.chat.id, "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
                bot.send_message(message.chat.id, "–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Ç–æ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤–æ –≤–∫–ª–∞–¥–∫—É –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
                cm_sv_db(message, '/end_register')
                menu(bot, message)

        else:
            raise ValueError("–ö–æ–¥ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç")  # –ò—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –∫–æ–¥ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç

    except ValueError as e:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –µ—â–µ —Ä–∞–∑:")
        bot.register_next_step_handler(msg, verify_code, bot)

def send_photo_by_id(message, bot):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –≤–≤–µ–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—É –≤—ã—Ö–æ–¥–∞ –≤ –º–µ–Ω—é
    if message.text.startswith('/'):
        if message.text == '/menu':
            menu(bot, message)
            return

    try:
        # –ü–æ–ª—É—á–∞–µ–º ID, –∫–æ—Ç–æ—Ä—ã–π –≤–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        photo_id = int(message.text.strip())

        # –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ ID
        image_data = get_photo_by_id(photo_id)
        if image_data:
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            bot.send_photo(message.chat.id, image_data)
        else:
            bot.reply_to(message, "–§–æ—Ç–æ —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    except ValueError:
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID.")
    except Exception as e:
        bot.reply_to(message, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

    # –ó–∞–ø—Ä–æ—Å —Å–ª–µ–¥—É—é—â–µ–≥–æ ID —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –º–µ–Ω—é
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π ID –æ–±—ä–µ–∫—Ç–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /menu –¥–ª—è –≤—ã—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:")
    bot.register_next_step_handler(msg, send_photo_by_id, bot)
    

def is_none(line):
    if line is None:
        return " "
    return line


def redirect(bot, message, id_i_s=None):
    text = message.text
    if text == "/menu":
        if id_i_s is not None:
            delete_internal_sale(id_i_s)
        menu(bot, message)
        return True
    elif text == "/start":
        if id_i_s is not None:
            delete_internal_sale(id_i_s)
        send_welcome_message(bot, message)
        return True
    return False
